//	GLOBAL VARIABLES

	/* BEGIN GLOBAL VARIABLES */

var json = {

	/* BEGIN Prized Keys */
	'Prized_Keys': {
		'online_keys': undefined,
		
		/* Testing keys */
		// 'offline_keys': 'Friday-18/01/2010#006*5 6 16 30 46 + 5 10'
		// 'offline_keys': 'Friday-18/01/2010#006*5 6 16 30 46 + 5 10|Tuesday-18/12/2004#101*1 12 17 35 49 + 1 7|Friday-18/11/2010#005*5 6 16 30 46 + 5 10'
		// 'offline_keys': 'Tuesday-22/01/2019#007*9 23 29 41 49 + 8 10|Friday-18/01/2019#006*5 6 16 30 46 + 5 10|Tuesday-15/01/2019#005*22 25 29 33 35 + 3 6|Friday-11/01/2019#004*1 19 31 39 48 + 1 6|Tuesday-08/01/2019#003*3 19 22 31 32 + 2 11|Friday-04/01/2019#002*7 11 19 27 37 + 6 10|Tuesday-01/01/2019#001*1 8 11 25 28 + 4 6'
		
		/*2004 - 2019 (#009)*/
		 'offline_keys': 'Tuesday-29/01/2019#009*14 24 26 32 39 + 3 8|Friday-25/01/2019#008*1 6 13 15 16 + 6 10|Tuesday-22/01/2019#007*9 23 29 41 49 + 8 10|Friday-18/01/2019#006*5 6 16 30 46 + 5 10|Tuesday-15/01/2019#005*22 25 29 33 35 + 3 6|Friday-11/01/2019#004*1 19 31 39 48 + 1 6|Tuesday-08/01/2019#003*3 19 22 31 32 + 2 11|Friday-04/01/2019#002*7 11 19 27 37 + 6 10|Tuesday-01/01/2019#001*1 8 11 25 28 + 4 6|Friday-28/12/2018#104*13 16 34 35 45 + 10 12|Tuesday-25/12/2018#103*4 5 8 31 43 + 2 9|Friday-21/12/2018#102*2 12 15 34 50 + 3 4|Tuesday-18/12/2018#101*1 9 18 39 48 + 5 7|Friday-14/12/2018#100*12 29 38 42 44 + 2 12|Tuesday-11/12/2018#099*4 7 13 23 42 + 1 3|Friday-07/12/2018#098*11 17 26 37 48 + 1 10|Tuesday-04/12/2018#097*19 20 21 42 45 + 8 9|Friday-30/11/2018#096*3 10 12 23 26 + 1 12|Tuesday-27/11/2018#095*4 16 17 18 32 + 2 11|Friday-23/11/2018#094*5 8 25 26 30 + 3 10|Tuesday-20/11/2018#093*6 19 39 45 48 + 7 12|Friday-16/11/2018#092*9 10 13 28 41 + 1 12|Tuesday-13/11/2018#091*2 7 10 13 42 + 3 6|Friday-09/11/2018#090*14 17 32 37 49 + 11 12|Tuesday-06/11/2018#089*14 24 36 40 43 + 2 9|Friday-02/11/2018#088*5 15 17 37 44 + 7 11|Tuesday-30/10/2018#087*17 23 27 43 44 + 1 12|Friday-26/10/2018#086*5 18 21 31 35 + 6 9|Tuesday-23/10/2018#085*1 2 5 21 32 + 2 12|Friday-19/10/2018#084*1 3 29 47 48 + 3 12|Tuesday-16/10/2018#083*15 28 37 40 42 + 1 6|Friday-12/10/2018#082*4 9 12 31 43 + 5 8|Tuesday-09/10/2018#081*3 12 36 44 45 + 8 11|Friday-05/10/2018#080*8 16 24 26 35 + 3 11|Tuesday-02/10/2018#079*7 17 29 37 45 + 3 11|Friday-28/09/2018#078*2 4 8 27 50 + 2 9|Tuesday-25/09/2018#077*6 15 20 30 38 + 4 7|Friday-21/09/2018#076*5 7 21 25 37 + 3 4|Tuesday-18/09/2018#075*3 8 10 32 45 + 4 12|Friday-14/09/2018#074*1 3 33 40 45 + 3 4|Tuesday-11/09/2018#073*9 18 32 38 46 + 2 3|Friday-07/09/2018#072*4 23 27 31 50 + 1 8|Tuesday-04/09/2018#071*5 14 28 30 47 + 4 11|Friday-31/08/2018#070*4 30 31 38 42 + 4 6|Tuesday-28/08/2018#069*4 16 32 42 46 + 8 12|Friday-24/08/2018#068*3 14 31 36 50 + 1 12|Tuesday-21/08/2018#067*16 23 42 43 49 + 10 12|Friday-17/08/2018#066*2 15 18 24 43 + 8 12|Tuesday-14/08/2018#065*1 15 18 25 31 + 9 11|Friday-10/08/2018#064*18 20 36 43 44 + 3 9|Tuesday-07/08/2018#063*16 28 29 30 36 + 8 10|Friday-03/08/2018#062*7 26 36 38 43 + 6 12|Tuesday-31/07/2018#061*20 25 34 42 45 + 6 11|Friday-27/07/2018#060*11 17 22 23 41 + 6 11|Tuesday-24/07/2018#059*2 4 23 39 40 + 3 9|Friday-20/07/2018#058*2 15 40 43 46 + 3 6|Tuesday-17/07/2018#057*4 6 27 48 50 + 1 11|Friday-13/07/2018#056*1 4 14 21 49 + 2 12|Tuesday-10/07/2018#055*3 8 26 33 45 + 7 10|Friday-06/07/2018#054*8 30 33 38 48 + 2 10|Tuesday-03/07/2018#053*1 12 15 29 48 + 3 5|Friday-29/06/2018#052*15 21 23 40 48 + 3 12|Tuesday-26/06/2018#051*15 16 20 34 50 + 4 7|Friday-22/06/2018#050*14 25 39 41 44 + 2 8|Tuesday-19/06/2018#049*7 19 26 42 50 + 4 9|Friday-15/06/2018#048*23 26 33 38 49 + 1 12|Tuesday-12/06/2018#047*7 21 23 36 38 + 6 8|Friday-08/06/2018#046*8 19 32 43 46 + 2 8|Tuesday-05/06/2018#045*9 15 22 39 46 + 4 5|Friday-01/06/2018#044*17 18 24 29 40 + 4 5|Tuesday-29/05/2018#043*6 11 20 38 43 + 2 4|Friday-25/05/2018#042*13 15 16 28 41 + 4 5|Tuesday-22/05/2018#041*1 11 37 41 48 + 8 12|Friday-18/05/2018#040*5 8 10 13 31 + 3 6|Tuesday-15/05/2018#039*4 16 20 31 39 + 2 12|Friday-11/05/2018#038*3 22 34 49 50 + 8 11|Tuesday-08/05/2018#037*17 25 35 39 44 + 2 5|Friday-04/05/2018#036*6 12 23 39 45 + 9 12|Tuesday-01/05/2018#035*6 15 17 42 48 + 4 6|Friday-27/04/2018#034*12 24 40 41 46 + 5 12|Tuesday-24/04/2018#033*20 23 28 30 44 + 3 7|Friday-20/04/2018#032*3 16 25 39 44 + 7 11|Tuesday-17/04/2018#031*15 27 33 39 50 + 4 6|Friday-13/04/2018#030*5 25 34 48 50 + 6 7|Tuesday-10/04/2018#029*14 27 39 46 48 + 11 12|Friday-06/04/2018#028*1 29 33 45 47 + 4 8|Tuesday-03/04/2018#027*3 8 16 40 43 + 5 8|Friday-30/03/2018#026*12 17 28 35 47 + 7 11|Tuesday-27/03/2018#025*17 20 23 40 46 + 9 10|Friday-23/03/2018#024*5 7 11 46 50 + 8 11|Tuesday-20/03/2018#023*26 29 37 39 44 + 9 11|Friday-16/03/2018#022*4 17 24 27 31 + 10 11|Tuesday-13/03/2018#021*9 11 13 33 49 + 6 12|Friday-09/03/2018#020*9 14 21 32 44 + 1 12|Tuesday-06/03/2018#019*15 20 26 31 44 + 2 9|Friday-02/03/2018#018*2 7 34 45 48 + 1 12|Tuesday-27/02/2018#017*3 31 41 48 50 + 8 11|Friday-23/02/2018#016*10 17 18 28 47 + 3 7|Tuesday-20/02/2018#015*6 14 19 25 29 + 5 11|Friday-16/02/2018#014*10 12 23 32 50 + 4 10|Tuesday-13/02/2018#013*10 13 17 21 44 + 1 10|Friday-09/02/2018#012*22 31 36 38 44 + 1 11|Tuesday-06/02/2018#011*8 17 28 34 38 + 6 12|Friday-02/02/2018#010*14 34 36 39 48 + 2 3|Tuesday-30/01/2018#009*11 15 21 27 35 + 4 5|Friday-26/01/2018#008*6 15 24 28 48 + 4 9|Tuesday-23/01/2018#007*5 8 9 23 24 + 7 8|Friday-19/01/2018#006*3 8 17 44 50 + 2 7|Tuesday-16/01/2018#005*20 23 31 34 46 + 3 12|Friday-12/01/2018#004*13 21 23 30 45 + 4 6|Tuesday-09/01/2018#003*6 12 15 38 49 + 2 9|Friday-05/01/2018#002*2 5 20 38 41 + 4 8|Tuesday-02/01/2018#001*10 20 21 28 48 + 1 8|Friday-29/12/2017#104*4 8 22 23 48 + 1 12|Tuesday-26/12/2017#103*4 17 30 43 44 + 2 10|Friday-22/12/2017#102*5 24 30 31 43 + 3 6|Tuesday-19/12/2017#101*8 15 30 38 46 + 4 7|Friday-15/12/2017#100*25 30 31 42 50 + 2 11|Tuesday-12/12/2017#099*20 37 39 44 50 + 4 8|Friday-08/12/2017#098*4 22 30 32 34 + 3 4|Tuesday-05/12/2017#097*11 36 43 44 48 + 2 7|Friday-01/12/2017#096*5 24 29 35 46 + 11 12|Tuesday-28/11/2017#095*1 6 12 18 42 + 2 7|Friday-24/11/2017#094*19 24 28 30 50 + 3 10|Tuesday-21/11/2017#093*2 10 14 28 31 + 5 7|Friday-17/11/2017#092*20 26 35 36 42 + 5 12|Tuesday-14/11/2017#091*14 16 39 40 41 + 8 10|Friday-10/11/2017#090*13 22 29 36 37 + 1 9|Tuesday-07/11/2017#089*7 19 20 37 41 + 2 12|Friday-03/11/2017#088*5 12 17 33 41 + 4 9|Tuesday-31/10/2017#087*1 12 36 43 46 + 3 5|Friday-27/10/2017#086*3 16 23 32 39 + 1 4|Tuesday-24/10/2017#085*9 11 13 27 33 + 7 10|Friday-20/10/2017#084*4 17 23 27 30 + 3 8|Tuesday-17/10/2017#083*13 17 19 26 36 + 2 3|Friday-13/10/2017#082*23 29 37 45 50 + 5 11|Tuesday-10/10/2017#081*4 21 34 36 37 + 3 6|Friday-06/10/2017#080*1 9 15 19 25 + 1 7|Tuesday-03/10/2017#079*6 24 32 48 50 + 1 5|Friday-29/09/2017#078*7 18 19 32 48 + 3 7|Tuesday-26/09/2017#077*1 29 40 41 48 + 6 12|Friday-22/09/2017#076*6 11 31 39 42 + 1 3|Tuesday-19/09/2017#075*1 8 21 30 45 + 2 3|Friday-15/09/2017#074*13 18 37 44 49 + 9 12|Tuesday-12/09/2017#073*10 17 27 29 35 + 4 11|Friday-08/09/2017#072*9 24 42 47 49 + 1 5|Tuesday-05/09/2017#071*6 9 18 28 29 + 1 9|Friday-01/09/2017#070*3 7 8 14 49 + 5 8|Tuesday-29/08/2017#069*4 12 15 32 38 + 1 5|Friday-25/08/2017#068*1 5 7 15 47 + 9 12|Tuesday-22/08/2017#067*3 10 12 17 27 + 3 5|Friday-18/08/2017#066*2 24 39 42 45 + 2 8|Tuesday-15/08/2017#065*10 14 30 35 46 + 4 10|Friday-11/08/2017#064*18 28 39 46 48 + 5 12|Tuesday-08/08/2017#063*15 25 26 40 41 + 4 5|Friday-04/08/2017#062*29 30 36 40 41 + 2 9|Tuesday-01/08/2017#061*14 21 24 29 30 + 8 10|Friday-28/07/2017#060*5 9 29 31 41 + 2 4|Tuesday-25/07/2017#059*12 14 43 44 48 + 2 11|Friday-21/07/2017#058*1 8 9 26 49 + 5 9|Tuesday-18/07/2017#057*1 25 27 41 45 + 5 7|Friday-14/07/2017#056*11 14 20 21 47 + 7 10|Tuesday-11/07/2017#055*14 22 26 42 50 + 8 10|Friday-07/07/2017#054*11 20 35 37 45 + 3 6|Tuesday-04/07/2017#053*10 22 25 37 49 + 5 8|Friday-30/06/2017#052*17 35 39 47 50 + 6 8|Tuesday-27/06/2017#051*9 17 21 28 45 + 1 3|Friday-23/06/2017#050*3 4 21 31 38 + 3 7|Tuesday-20/06/2017#049*11 18 26 43 44 + 8 10|Friday-16/06/2017#048*15 17 38 41 42 + 9 12|Tuesday-13/06/2017#047*3 12 22 27 49 + 4 11|Friday-09/06/2017#046*9 20 27 39 43 + 10 11|Tuesday-06/06/2017#045*20 22 25 37 40 + 3 7|Friday-02/06/2017#044*8 10 24 33 42 + 3 9|Tuesday-30/05/2017#043*7 12 27 38 48 + 6 9|Friday-26/05/2017#042*5 7 26 36 39 + 2 10|Tuesday-23/05/2017#041*8 15 25 27 42 + 1 4|Friday-19/05/2017#040*9 11 12 19 30 + 4 9|Tuesday-16/05/2017#039*8 11 15 20 30 + 3 8|Friday-12/05/2017#038*2 20 28 29 44 + 3 9|Tuesday-09/05/2017#037*8 12 16 22 26 + 6 7|Friday-05/05/2017#036*3 7 30 35 43 + 1 3|Tuesday-02/05/2017#035*6 19 23 25 27 + 11 12|Friday-28/04/2017#034*14 20 25 30 39 + 2 8|Tuesday-25/04/2017#033*9 11 19 32 43 + 3 9|Friday-21/04/2017#032*2 13 16 22 49 + 4 5|Tuesday-18/04/2017#031*17 22 31 38 45 + 5 12|Friday-14/04/2017#030*4 14 20 23 33 + 6 10|Tuesday-11/04/2017#029*5 21 22 31 49 + 2 8|Friday-07/04/2017#028*2 10 19 35 50 + 6 7|Tuesday-04/04/2017#027*1 9 24 33 34 + 2 6|Friday-31/03/2017#026*17 24 26 28 45 + 4 12|Tuesday-28/03/2017#025*9 13 31 33 46 + 6 10|Friday-24/03/2017#024*2 17 21 27 34 + 5 9|Tuesday-21/03/2017#023*1 20 23 44 47 + 4 11|Friday-17/03/2017#022*6 10 19 29 36 + 3 9|Tuesday-14/03/2017#021*3 5 21 36 44 + 3 6|Friday-10/03/2017#020*31 36 38 47 49 + 8 11|Tuesday-07/03/2017#019*6 37 41 48 50 + 4 5|Friday-03/03/2017#018*2 11 29 30 47 + 1 12|Tuesday-28/02/2017#017*10 20 31 35 42 + 2 12|Friday-24/02/2017#016*2 4 13 22 43 + 8 9|Tuesday-21/02/2017#015*13 19 41 45 49 + 3 4|Friday-17/02/2017#014*19 25 33 36 48 + 2 9|Tuesday-14/02/2017#013*2 10 24 40 44 + 3 10|Friday-10/02/2017#012*7 21 26 35 43 + 2 9|Tuesday-07/02/2017#011*4 10 31 38 44 + 8 10|Friday-03/02/2017#010*3 4 15 46 50 + 5 9|Tuesday-31/01/2017#009*3 4 17 23 44 + 6 9|Friday-27/01/2017#008*17 20 28 45 48 + 5 9|Tuesday-24/01/2017#007*1 5 7 17 23 + 3 8|Friday-20/01/2017#006*10 17 27 31 49 + 3 5|Tuesday-17/01/2017#005*4 16 25 43 47 + 2 10|Friday-13/01/2017#004*3 7 16 26 50 + 4 7|Tuesday-10/01/2017#003*2 11 29 35 44 + 4 9|Friday-06/01/2017#002*10 14 18 21 49 + 9 11|Tuesday-03/01/2017#001*19 23 27 34 49 + 1 11|Friday-30/12/2016#105*8 10 22 29 47 + 1 3|Tuesday-27/12/2016#104*3 22 25 32 39 + 7 12|Friday-23/12/2016#103*4 16 20 39 46 + 2 5|Tuesday-20/12/2016#102*13 15 17 21 27 + 2 3|Friday-16/12/2016#101*6 10 30 41 45 + 4 11|Tuesday-13/12/2016#100*14 28 29 48 50 + 2 8|Friday-09/12/2016#099*6 12 28 37 40 + 1 5|Tuesday-06/12/2016#098*1 7 11 27 45 + 4 9|Friday-02/12/2016#097*6 11 23 31 32 + 2 12|Tuesday-29/11/2016#096*21 26 27 28 38 + 9 11|Friday-25/11/2016#095*5 11 17 23 28 + 10 11|Tuesday-22/11/2016#094*5 10 33 34 47 + 2 10|Friday-18/11/2016#093*3 12 27 32 47 + 6 8|Tuesday-15/11/2016#092*7 15 36 42 48 + 3 7|Friday-11/11/2016#091*3 22 23 38 49 + 2 9|Tuesday-08/11/2016#090*5 9 47 49 50 + 8 9|Friday-04/11/2016#089*7 11 12 44 48 + 3 7|Tuesday-01/11/2016#088*6 10 20 29 37 + 1 9|Friday-28/10/2016#087*10 16 19 23 43 + 2 8|Tuesday-25/10/2016#086*3 15 20 21 28 + 1 5|Friday-21/10/2016#085*9 20 23 44 48 + 8 10|Tuesday-18/10/2016#084*2 17 21 25 27 + 6 9|Friday-14/10/2016#083*7 13 19 31 34 + 1 11|Tuesday-11/10/2016#082*5 12 20 24 37 + 4 11|Friday-07/10/2016#081*2 12 20 27 30 + 9 11|Tuesday-04/10/2016#080*4 7 14 34 38 + 4 11|Friday-30/09/2016#079*17 35 37 43 44 + 2 10|Tuesday-27/09/2016#078*6 9 13 39 41 + 2 12|Friday-23/09/2016#077*14 16 39 42 49 + 3 9|Tuesday-20/09/2016#076*1 4 10 41 45 + 6 9|Friday-16/09/2016#075*5 8 14 22 32 + 2 11|Tuesday-13/09/2016#074*4 7 16 35 44 + 1 3|Friday-09/09/2016#073*4 11 15 17 28 + 1 3|Tuesday-06/09/2016#072*12 24 30 34 45 + 7 10|Friday-02/09/2016#071*8 16 32 40 50 + 2 11|Tuesday-30/08/2016#070*13 16 29 35 42 + 6 8|Friday-26/08/2016#069*1 9 28 30 48 + 7 8|Tuesday-23/08/2016#068*2 23 31 37 45 + 4 8|Friday-19/08/2016#067*5 6 22 25 34 + 5 7|Tuesday-16/08/2016#066*2 26 34 37 46 + 4 8|Friday-12/08/2016#065*2 15 28 36 50 + 2 11|Tuesday-09/08/2016#064*12 19 43 44 45 + 5 10|Friday-05/08/2016#063*16 19 24 35 37 + 2 7|Tuesday-02/08/2016#062*2 8 27 38 46 + 2 6|Friday-29/07/2016#061*1 21 26 40 50 + 2 4|Tuesday-26/07/2016#060*3 10 13 45 49 + 2 11|Friday-22/07/2016#059*7 24 26 37 45 + 5 9|Tuesday-19/07/2016#058*19 24 28 36 37 + 3 6|Friday-15/07/2016#057*2 11 13 14 21 + 1 8|Tuesday-12/07/2016#056*3 7 26 33 41 + 2 10|Friday-08/07/2016#055*8 12 18 33 44 + 4 8|Tuesday-05/07/2016#054*1 10 29 38 48 + 3 4|Friday-01/07/2016#053*2 11 13 40 50 + 1 10|Tuesday-28/06/2016#052*26 32 37 43 49 + 4 5|Friday-24/06/2016#051*11 19 27 28 39 + 3 10|Tuesday-21/06/2016#050*5 17 32 35 49 + 1 5|Friday-17/06/2016#049*1 7 18 27 43 + 4 8|Tuesday-14/06/2016#048*13 34 39 42 50 + 9 11|Friday-10/06/2016#047*14 21 35 42 43 + 7 9|Tuesday-07/06/2016#046*19 26 35 45 49 + 2 5|Friday-03/06/2016#045*7 23 31 33 39 + 6 10|Tuesday-31/05/2016#044*6 12 26 30 48 + 6 7|Friday-27/05/2016#043*13 25 27 43 46 + 4 8|Tuesday-24/05/2016#042*16 17 23 34 37 + 6 9|Friday-20/05/2016#041*9 14 30 41 45 + 4 9|Tuesday-17/05/2016#040*15 27 32 36 39 + 3 10|Friday-13/05/2016#039*7 15 28 31 42 + 10 11|Tuesday-10/05/2016#038*2 26 27 40 49 + 5 10|Friday-06/05/2016#037*32 34 40 45 48 + 1 10|Tuesday-03/05/2016#036*8 23 24 34 38 + 3 7|Friday-29/04/2016#035*4 5 25 28 43 + 6 11|Tuesday-26/04/2016#034*10 17 31 32 42 + 2 5|Friday-22/04/2016#033*17 26 32 34 43 + 2 10|Tuesday-19/04/2016#032*11 14 15 27 44 + 2 7|Friday-15/04/2016#031*13 14 32 37 48 + 1 7|Tuesday-12/04/2016#030*1 5 9 22 38 + 2 10|Friday-08/04/2016#029*6 8 26 43 49 + 6 10|Tuesday-05/04/2016#028*3 5 9 19 40 + 2 5|Friday-01/04/2016#027*2 16 23 25 49 + 6 9|Tuesday-29/03/2016#026*1 4 19 25 36 + 3 11|Friday-25/03/2016#025*12 19 36 42 43 + 5 8|Tuesday-22/03/2016#024*12 15 26 42 49 + 5 8|Friday-18/03/2016#023*14 19 21 24 49 + 5 11|Tuesday-15/03/2016#022*5 7 10 34 44 + 2 10|Friday-11/03/2016#021*1 21 26 40 43 + 6 9|Tuesday-08/03/2016#020*1 8 9 14 23 + 1 7|Friday-04/03/2016#019*9 14 16 23 40 + 1 5|Tuesday-01/03/2016#018*4 7 13 28 37 + 10 11|Friday-26/02/2016#017*5 13 15 33 50 + 9 11|Tuesday-23/02/2016#016*23 25 32 37 42 + 1 11|Friday-19/02/2016#015*13 14 30 32 39 + 3 9|Tuesday-16/02/2016#014*3 10 22 37 50 + 6 10|Friday-12/02/2016#013*3 20 28 31 49 + 2 5|Tuesday-09/02/2016#012*6 9 13 28 37 + 4 5|Friday-05/02/2016#011*3 27 32 41 46 + 4 8|Tuesday-02/02/2016#010*6 9 10 21 36 + 2 6|Friday-29/01/2016#009*1 5 23 29 32 + 1 7|Tuesday-26/01/2016#008*15 24 38 40 48 + 2 9|Friday-22/01/2016#007*10 12 27 30 47 + 8 9|Tuesday-19/01/2016#006*2 30 38 43 46 + 2 7|Friday-15/01/2016#005*10 19 38 43 46 + 1 11|Tuesday-12/01/2016#004*1 2 10 30 44 + 1 8|Friday-08/01/2016#003*5 26 33 35 40 + 3 8|Tuesday-05/01/2016#002*6 10 31 36 39 + 6 10|Friday-01/01/2016#001*4 37 38 39 44 + 4 7|Tuesday-29/12/2015#104*5 20 31 32 36 + 6 7|Friday-25/12/2015#103*3 10 25 27 40 + 3 9|Tuesday-22/12/2015#102*18 19 20 40 41 + 7 10|Friday-18/12/2015#101*6 22 26 29 48 + 5 6|Tuesday-15/12/2015#100*8 11 23 27 35 + 4 11|Friday-11/12/2015#099*3 5 21 40 43 + 6 11|Tuesday-08/12/2015#098*12 17 29 38 48 + 9 11|Friday-04/12/2015#097*8 17 18 27 39 + 1 7|Tuesday-01/12/2015#096*2 15 25 35 45 + 8 10|Friday-27/11/2015#095*16 29 30 37 50 + 6 8|Tuesday-24/11/2015#094*9 14 16 17 26 + 10 11|Friday-20/11/2015#093*4 30 34 46 49 + 7 8|Tuesday-17/11/2015#092*6 7 23 37 38 + 10 11|Friday-13/11/2015#091*10 17 18 33 40 + 2 8|Tuesday-10/11/2015#090*6 13 18 39 43 + 2 8|Friday-06/11/2015#089*3 17 26 38 40 + 4 10|Tuesday-03/11/2015#088*8 27 39 46 49 + 2 6|Friday-30/10/2015#087*8 13 17 21 34 + 6 7|Tuesday-27/10/2015#086*11 12 20 25 36 + 6 9|Friday-23/10/2015#085*7 25 30 32 39 + 2 8|Tuesday-20/10/2015#084*17 19 21 30 45 + 8 10|Friday-16/10/2015#083*7 28 29 43 48 + 3 10|Tuesday-13/10/2015#082*12 15 26 29 47 + 3 11|Friday-09/10/2015#081*1 40 42 43 47 + 9 11|Tuesday-06/10/2015#080*11 20 22 29 32 + 1 8|Friday-02/10/2015#079*7 18 21 32 35 + 2 11|Tuesday-29/09/2015#078*11 14 26 29 49 + 3 9|Friday-25/09/2015#077*13 14 23 30 37 + 2 8|Tuesday-22/09/2015#076*14 23 26 27 29 + 7 10|Friday-18/09/2015#075*7 29 33 34 39 + 7 8|Tuesday-15/09/2015#074*8 15 17 44 49 + 5 8|Friday-11/09/2015#073*10 18 19 29 50 + 1 9|Tuesday-08/09/2015#072*14 16 39 40 42 + 1 4|Friday-04/09/2015#071*8 9 27 45 50 + 8 10|Tuesday-01/09/2015#070*6 19 21 27 45 + 1 8|Friday-28/08/2015#069*11 29 30 31 34 + 4 7|Tuesday-25/08/2015#068*27 31 33 42 50 + 2 5|Friday-21/08/2015#067*4 16 18 43 47 + 6 10|Tuesday-18/08/2015#066*7 10 11 12 19 + 2 9|Friday-14/08/2015#065*4 7 39 44 45 + 3 5|Tuesday-11/08/2015#064*2 3 8 15 16 + 4 11|Friday-07/08/2015#063*1 5 21 39 44 + 4 11|Tuesday-04/08/2015#062*10 15 39 45 50 + 9 10|Friday-31/07/2015#061*16 21 34 40 50 + 6 9|Tuesday-28/07/2015#060*23 32 36 43 49 + 7 8|Friday-24/07/2015#059*2 9 21 35 46 + 2 11|Tuesday-21/07/2015#058*14 20 27 29 44 + 7 10|Friday-17/07/2015#057*1 21 22 43 48 + 7 9|Tuesday-14/07/2015#056*6 18 19 34 36 + 1 8|Friday-10/07/2015#055*5 8 15 35 41 + 4 5|Tuesday-07/07/2015#054*6 7 18 33 41 + 3 10|Friday-03/07/2015#053*11 12 15 18 44 + 3 9|Tuesday-30/06/2015#052*11 15 28 34 37 + 1 8|Friday-26/06/2015#051*3 6 10 19 24 + 5 7|Tuesday-23/06/2015#050*4 16 22 38 49 + 6 9|Friday-19/06/2015#049*7 14 20 31 42 + 3 9|Tuesday-16/06/2015#048*10 15 16 36 37 + 3 9|Friday-12/06/2015#047*5 8 10 11 37 + 7 9|Tuesday-09/06/2015#046*5 9 17 32 34 + 6 8|Friday-05/06/2015#045*2 7 8 45 48 + 1 9|Tuesday-02/06/2015#044*7 23 29 37 41 + 1 8|Friday-29/05/2015#043*3 4 20 45 48 + 6 8|Tuesday-26/05/2015#042*5 6 7 21 24 + 5 6|Friday-22/05/2015#041*18 24 35 44 45 + 5 11|Tuesday-19/05/2015#040*26 30 31 35 37 + 8 11|Friday-15/05/2015#039*5 35 42 44 47 + 8 9|Tuesday-12/05/2015#038*14 29 30 40 46 + 3 6|Friday-08/05/2015#037*7 14 19 47 49 + 3 10|Tuesday-05/05/2015#036*1 10 17 20 42 + 8 9|Friday-01/05/2015#035*3 19 20 25 26 + 6 10|Tuesday-28/04/2015#034*24 26 28 36 45 + 7 10|Friday-24/04/2015#033*5 19 29 31 40 + 3 10|Tuesday-21/04/2015#032*6 14 17 42 45 + 1 8|Friday-17/04/2015#031*2 24 30 34 39 + 8 11|Tuesday-14/04/2015#030*24 32 34 35 49 + 1 2|Friday-10/04/2015#029*22 23 25 30 43 + 5 9|Tuesday-07/04/2015#028*18 25 39 44 50 + 5 8|Friday-03/04/2015#027*27 29 37 39 49 + 2 4|Tuesday-31/03/2015#026*8 20 24 28 49 + 8 9|Friday-27/03/2015#025*2 30 32 39 44 + 6 10|Tuesday-24/03/2015#024*10 24 26 39 40 + 3 10|Friday-20/03/2015#023*3 14 37 42 48 + 1 10|Tuesday-17/03/2015#022*11 23 26 38 44 + 1 8|Friday-13/03/2015#021*4 5 18 22 23 + 1 3|Tuesday-10/03/2015#020*2 6 23 30 31 + 2 10|Friday-06/03/2015#019*23 30 47 49 50 + 2 7|Tuesday-03/03/2015#018*6 8 11 13 21 + 7 8|Friday-27/02/2015#017*5 14 17 25 47 + 9 10|Tuesday-24/02/2015#016*3 25 28 34 50 + 1 11|Friday-20/02/2015#015*4 10 14 37 46 + 4 7|Tuesday-17/02/2015#014*2 5 18 30 43 + 1 10|Friday-13/02/2015#013*12 24 39 42 44 + 3 11|Tuesday-10/02/2015#012*13 17 20 30 45 + 9 10|Friday-06/02/2015#011*10 26 30 39 50 + 7 8|Tuesday-03/02/2015#010*17 31 33 44 50 + 7 11|Friday-30/01/2015#009*9 13 15 19 24 + 3 8|Tuesday-27/01/2015#008*5 10 31 33 40 + 8 10|Friday-23/01/2015#007*6 29 30 38 45 + 1 8|Tuesday-20/01/2015#006*15 33 41 44 47 + 8 10|Friday-16/01/2015#005*29 30 32 34 46 + 3 6|Tuesday-13/01/2015#004*8 17 21 31 34 + 9 10|Friday-09/01/2015#003*6 21 24 32 45 + 1 11|Tuesday-06/01/2015#002*14 20 30 38 49 + 3 4|Friday-02/01/2015#001*22 24 25 28 49 + 3 6|Tuesday-30/12/2014#104*6 18 39 44 50 + 8 11|Friday-26/12/2014#103*17 26 27 45 49 + 2 3|Tuesday-23/12/2014#102*8 9 19 25 49 + 2 10|Friday-19/12/2014#101*23 29 31 39 44 + 5 8|Tuesday-16/12/2014#100*3 7 12 13 25 + 5 8|Friday-12/12/2014#099*2 15 28 31 37 + 4 6|Tuesday-09/12/2014#098*1 3 31 42 46 + 4 11|Friday-05/12/2014#097*5 8 37 47 48 + 2 3|Tuesday-02/12/2014#096*3 15 25 44 49 + 1 9|Friday-28/11/2014#095*6 10 15 23 41 + 4 10|Tuesday-25/11/2014#094*3 7 25 32 36 + 1 6|Friday-21/11/2014#093*4 7 28 32 37 + 5 10|Tuesday-18/11/2014#092*2 3 17 36 38 + 4 11|Friday-14/11/2014#091*17 32 36 38 48 + 5 8|Tuesday-11/11/2014#090*2 14 21 36 46 + 7 11|Friday-07/11/2014#089*13 25 32 38 46 + 1 10|Tuesday-04/11/2014#088*1 6 13 17 26 + 3 5|Friday-31/10/2014#087*10 13 20 33 41 + 3 9|Tuesday-28/10/2014#086*10 15 17 40 45 + 1 2|Friday-24/10/2014#085*3 9 20 30 42 + 1 6|Tuesday-21/10/2014#084*20 21 27 33 40 + 3 10|Friday-17/10/2014#083*1 13 40 48 49 + 8 10|Tuesday-14/10/2014#082*4 5 15 23 32 + 3 7|Friday-10/10/2014#081*6 29 42 45 47 + 9 10|Tuesday-07/10/2014#080*9 21 28 30 38 + 1 8|Friday-03/10/2014#079*4 13 23 48 50 + 5 10|Tuesday-30/09/2014#078*3 13 15 33 42 + 5 7|Friday-26/09/2014#077*13 27 35 46 47 + 1 2|Tuesday-23/09/2014#076*12 13 14 29 35 + 1 7|Friday-19/09/2014#075*6 8 34 38 48 + 3 9|Tuesday-16/09/2014#074*4 29 30 35 50 + 2 4|Friday-12/09/2014#073*9 13 26 31 33 + 7 11|Tuesday-09/09/2014#072*8 15 19 24 35 + 8 10|Friday-05/09/2014#071*1 18 23 46 50 + 3 9|Tuesday-02/09/2014#070*5 25 31 39 45 + 1 8|Friday-29/08/2014#069*2 9 26 32 38 + 3 6|Tuesday-26/08/2014#068*10 22 36 45 48 + 4 11|Friday-22/08/2014#067*4 17 29 35 49 + 1 2|Tuesday-19/08/2014#066*4 7 11 34 47 + 7 8|Friday-15/08/2014#065*4 5 21 23 30 + 8 10|Tuesday-12/08/2014#064*7 16 19 22 33 + 2 5|Friday-08/08/2014#063*21 29 35 43 46 + 1 9|Tuesday-05/08/2014#062*5 7 19 21 42 + 5 11|Friday-01/08/2014#061*24 44 46 48 50 + 5 10|Tuesday-29/07/2014#060*10 23 35 40 43 + 3 9|Friday-25/07/2014#059*9 10 12 24 43 + 5 9|Tuesday-22/07/2014#058*1 24 43 45 50 + 5 8|Friday-18/07/2014#057*1 11 29 41 43 + 3 11|Tuesday-15/07/2014#056*15 18 20 27 34 + 1 3|Friday-11/07/2014#055*5 22 35 38 49 + 4 7|Tuesday-08/07/2014#054*8 18 22 24 27 + 4 11|Friday-04/07/2014#053*4 18 39 43 47 + 2 6|Tuesday-01/07/2014#052*18 22 25 27 39 + 5 10|Friday-27/06/2014#051*31 33 34 39 45 + 2 10|Tuesday-24/06/2014#050*1 7 20 21 48 + 4 7|Friday-20/06/2014#049*5 15 25 38 49 + 1 2|Tuesday-17/06/2014#048*11 13 37 40 48 + 8 9|Friday-13/06/2014#047*16 18 22 28 46 + 9 11|Tuesday-10/06/2014#046*12 18 21 32 33 + 1 11|Friday-06/06/2014#045*7 25 34 40 49 + 9 11|Tuesday-03/06/2014#044*2 15 32 39 44 + 5 10|Friday-30/05/2014#043*5 24 27 41 45 + 6 7|Tuesday-27/05/2014#042*7 13 16 25 26 + 1 6|Friday-23/05/2014#041*3 8 31 34 47 + 9 11|Tuesday-20/05/2014#040*5 33 36 38 47 + 4 9|Friday-16/05/2014#039*23 26 29 37 40 + 3 4|Tuesday-13/05/2014#038*4 13 30 34 47 + 2 6|Friday-09/05/2014#037*3 21 26 28 45 + 7 10|Tuesday-06/05/2014#036*5 19 24 31 37 + 1 9|Friday-02/05/2014#035*4 30 31 38 42 + 2 11|Tuesday-29/04/2014#034*18 23 26 35 44 + 3 11|Friday-25/04/2014#033*13 21 24 44 49 + 1 9|Tuesday-22/04/2014#032*13 15 20 24 46 + 1 8|Friday-18/04/2014#031*21 24 31 39 47 + 3 7|Tuesday-15/04/2014#030*3 14 26 47 50 + 7 11|Friday-11/04/2014#029*8 12 19 30 33 + 4 11|Tuesday-08/04/2014#028*11 18 29 42 49 + 4 11|Friday-04/04/2014#027*6 10 28 45 50 + 10 11|Tuesday-01/04/2014#026*16 18 26 38 44 + 8 10|Friday-28/03/2014#025*3 4 19 28 43 + 3 7|Tuesday-25/03/2014#024*7 20 26 28 50 + 2 8|Friday-21/03/2014#023*7 30 37 39 42 + 5 7|Tuesday-18/03/2014#022*8 27 34 36 39 + 5 10|Friday-14/03/2014#021*6 24 25 27 30 + 5 9|Tuesday-11/03/2014#020*1 4 23 33 44 + 7 8|Friday-07/03/2014#019*5 10 38 40 41 + 1 8|Tuesday-04/03/2014#018*3 5 22 27 44 + 1 6|Friday-28/02/2014#017*12 32 38 43 44 + 2 7|Tuesday-25/02/2014#016*21 25 28 35 42 + 4 6|Friday-21/02/2014#015*13 17 28 30 32 + 5 7|Tuesday-18/02/2014#014*23 26 36 37 49 + 6 7|Friday-14/02/2014#013*2 4 6 19 39 + 2 7|Tuesday-11/02/2014#012*8 17 25 41 47 + 1 2|Friday-07/02/2014#011*3 17 19 46 47 + 9 10|Tuesday-04/02/2014#010*1 21 33 37 38 + 4 8|Friday-31/01/2014#009*8 10 15 16 31 + 8 9|Tuesday-28/01/2014#008*18 20 23 42 48 + 2 9|Friday-24/01/2014#007*5 19 34 35 41 + 1 5|Tuesday-21/01/2014#006*4 12 35 42 48 + 5 8|Friday-17/01/2014#005*19 26 32 33 42 + 4 10|Tuesday-14/01/2014#004*18 20 25 26 37 + 10 11|Friday-10/01/2014#003*1 2 11 27 29 + 1 10|Tuesday-07/01/2014#002*2 20 27 33 45 + 6 10|Friday-03/01/2014#001*3 27 31 38 44 + 3 8|Tuesday-31/12/2013#105*13 20 24 29 45 + 3 7|Friday-27/12/2013#104*1 6 13 22 28 + 5 10|Tuesday-24/12/2013#103*5 19 31 43 50 + 2 6|Friday-20/12/2013#102*12 13 17 22 43 + 3 10|Tuesday-17/12/2013#101*6 8 27 37 41 + 7 10|Friday-13/12/2013#100*1 22 23 24 31 + 6 11|Tuesday-10/12/2013#099*6 24 35 49 50 + 1 7|Friday-06/12/2013#098*1 2 18 31 36 + 7 10|Tuesday-03/12/2013#097*6 13 15 29 32 + 2 9|Friday-29/11/2013#096*2 7 10 23 43 + 4 7|Tuesday-26/11/2013#095*19 23 27 42 44 + 3 5|Friday-22/11/2013#094*13 25 26 40 50 + 8 9|Tuesday-19/11/2013#093*14 15 19 36 45 + 1 10|Friday-15/11/2013#092*3 13 15 29 42 + 1 4|Tuesday-12/11/2013#091*14 29 37 40 48 + 2 11|Friday-08/11/2013#090*20 28 35 42 43 + 8 10|Tuesday-05/11/2013#089*6 12 13 35 38 + 2 3|Friday-01/11/2013#088*7 19 29 30 33 + 3 8|Tuesday-29/10/2013#087*9 10 30 32 37 + 2 6|Friday-25/10/2013#086*2 3 10 31 38 + 6 10|Tuesday-22/10/2013#085*29 33 39 41 44 + 9 11|Friday-18/10/2013#084*5 25 36 46 47 + 2 6|Tuesday-15/10/2013#083*18 27 39 43 47 + 4 7|Friday-11/10/2013#082*6 12 17 23 43 + 5 9|Tuesday-08/10/2013#081*23 24 26 33 42 + 3 5|Friday-04/10/2013#080*6 20 24 35 50 + 5 10|Tuesday-01/10/2013#079*19 23 25 44 48 + 8 9|Friday-27/09/2013#078*11 15 38 41 43 + 2 6|Tuesday-24/09/2013#077*10 20 26 28 43 + 9 11|Friday-20/09/2013#076*5 11 35 38 45 + 2 3|Tuesday-17/09/2013#075*13 17 21 42 44 + 9 11|Friday-13/09/2013#074*4 6 14 27 33 + 5 10|Tuesday-10/09/2013#073*7 11 14 28 30 + 2 10|Friday-06/09/2013#072*11 23 25 32 37 + 4 7|Tuesday-03/09/2013#071*5 9 16 18 42 + 7 9|Friday-30/08/2013#070*2 17 25 36 45 + 5 9|Tuesday-27/08/2013#069*7 30 38 40 43 + 2 6|Friday-23/08/2013#068*1 6 26 30 37 + 5 8|Tuesday-20/08/2013#067*5 11 42 49 50 + 8 11|Friday-16/08/2013#066*20 24 27 37 39 + 5 10|Tuesday-13/08/2013#065*5 17 20 47 50 + 1 4|Friday-09/08/2013#064*4 7 9 23 24 + 8 9|Tuesday-06/08/2013#063*16 17 31 47 49 + 3 11|Friday-02/08/2013#062*21 36 37 42 48 + 4 7|Tuesday-30/07/2013#061*3 4 11 14 43 + 1 6|Friday-26/07/2013#060*12 23 29 38 49 + 3 4|Tuesday-23/07/2013#059*14 15 16 19 44 + 4 5|Friday-19/07/2013#058*13 16 24 26 35 + 2 5|Tuesday-16/07/2013#057*19 23 34 47 50 + 4 6|Friday-12/07/2013#056*18 26 32 33 42 + 2 3|Tuesday-09/07/2013#055*16 18 31 38 49 + 4 10|Friday-05/07/2013#054*4 12 15 28 33 + 1 10|Tuesday-02/07/2013#053*11 13 14 28 30 + 4 5|Friday-28/06/2013#052*1 15 28 35 47 + 1 7|Tuesday-25/06/2013#051*4 5 13 27 35 + 1 2|Friday-21/06/2013#050*10 11 30 36 45 + 1 2|Tuesday-18/06/2013#049*17 24 33 41 44 + 1 11|Friday-14/06/2013#048*10 25 41 47 48 + 6 10|Tuesday-11/06/2013#047*5 7 9 25 41 + 1 5|Friday-07/06/2013#046*7 14 26 45 50 + 2 7|Tuesday-04/06/2013#045*31 33 34 37 40 + 1 6|Friday-31/05/2013#044*27 28 29 34 43 + 5 10|Tuesday-28/05/2013#043*8 13 26 34 38 + 3 11|Friday-24/05/2013#042*7 17 22 27 40 + 2 3|Tuesday-21/05/2013#041*7 8 19 28 29 + 5 9|Friday-17/05/2013#040*6 20 24 25 50 + 9 10|Tuesday-14/05/2013#039*7 8 24 27 36 + 5 11|Friday-10/05/2013#038*1 32 35 45 48 + 4 11|Tuesday-07/05/2013#037*13 27 28 42 43 + 4 6|Friday-03/05/2013#036*3 5 34 40 49 + 2 3|Tuesday-30/04/2013#035*13 36 40 43 50 + 5 9|Friday-26/04/2013#034*11 16 24 38 40 + 2 5|Tuesday-23/04/2013#033*1 4 7 10 50 + 4 11|Friday-19/04/2013#032*1 8 42 46 48 + 4 7|Tuesday-16/04/2013#031*1 11 22 33 50 + 4 6|Friday-12/04/2013#030*5 10 15 28 45 + 3 9|Tuesday-09/04/2013#029*15 35 38 44 48 + 5 10|Friday-05/04/2013#028*1 11 17 32 39 + 2 7|Tuesday-02/04/2013#027*12 17 25 29 41 + 1 4|Friday-29/03/2013#026*13 30 43 44 46 + 5 9|Tuesday-26/03/2013#025*4 26 30 42 44 + 6 11|Friday-22/03/2013#024*12 27 32 34 49 + 8 9|Tuesday-19/03/2013#023*19 32 35 37 44 + 1 9|Friday-15/03/2013#022*4 14 21 24 39 + 3 10|Tuesday-12/03/2013#021*2 4 10 22 50 + 5 8|Friday-08/03/2013#020*3 20 23 28 42 + 8 11|Tuesday-05/03/2013#019*8 19 31 33 39 + 2 7|Friday-01/03/2013#018*1 11 29 36 42 + 4 5|Tuesday-26/02/2013#017*3 12 13 17 30 + 2 6|Friday-22/02/2013#016*15 16 28 36 37 + 2 11|Tuesday-19/02/2013#015*12 15 28 30 44 + 8 9|Friday-15/02/2013#014*2 4 22 28 42 + 4 9|Tuesday-12/02/2013#013*5 11 16 25 28 + 7 9|Friday-08/02/2013#012*9 11 14 34 44 + 10 11|Tuesday-05/02/2013#011*6 25 31 40 45 + 6 7|Friday-01/02/2013#010*5 21 34 37 38 + 1 6|Tuesday-29/01/2013#009*9 16 26 36 39 + 2 6|Friday-25/01/2013#008*3 10 18 31 37 + 2 4|Tuesday-22/01/2013#007*1 10 44 45 48 + 1 4|Friday-18/01/2013#006*4 26 27 30 39 + 3 10|Tuesday-15/01/2013#005*22 38 40 42 47 + 1 11|Friday-11/01/2013#004*4 22 29 37 41 + 4 7|Tuesday-08/01/2013#003*2 20 22 26 47 + 5 9|Friday-04/01/2013#002*4 10 22 27 41 + 8 10|Tuesday-01/01/2013#001*2 7 8 36 49 + 1 11|Friday-28/12/2012#104*17 24 26 27 49 + 3 5|Tuesday-25/12/2012#103*14 18 20 23 32 + 3 10|Friday-21/12/2012#102*3 5 22 40 42 + 3 10|Tuesday-18/12/2012#101*14 18 20 35 44 + 2 5|Friday-14/12/2012#100*10 11 29 40 43 + 3 11|Tuesday-11/12/2012#099*1 4 9 43 50 + 6 8|Friday-07/12/2012#098*10 16 18 31 42 + 2 5|Tuesday-04/12/2012#097*5 10 28 29 44 + 2 4|Friday-30/11/2012#096*10 18 23 24 40 + 3 4|Tuesday-27/11/2012#095*6 10 23 44 49 + 1 7|Friday-23/11/2012#094*1 9 11 20 40 + 1 5|Tuesday-20/11/2012#093*28 30 42 45 49 + 5 10|Friday-16/11/2012#092*10 15 19 23 41 + 2 9|Tuesday-13/11/2012#091*11 16 21 24 29 + 2 6|Friday-09/11/2012#090*14 21 22 28 47 + 4 5|Tuesday-06/11/2012#089*7 20 25 35 41 + 1 9|Friday-02/11/2012#088*3 6 10 11 44 + 3 4|Tuesday-30/10/2012#087*23 24 25 31 44 + 2 3|Friday-26/10/2012#086*5 6 9 27 38 + 5 11|Tuesday-23/10/2012#085*1 28 35 38 50 + 2 10|Friday-19/10/2012#084*16 29 37 40 44 + 8 10|Tuesday-16/10/2012#083*10 32 40 41 49 + 2 8|Friday-12/10/2012#082*6 7 17 35 43 + 2 8|Tuesday-09/10/2012#081*2 8 10 23 25 + 8 9|Friday-05/10/2012#080*9 16 18 19 21 + 2 3|Tuesday-02/10/2012#079*4 16 21 36 42 + 7 8|Friday-28/09/2012#078*20 23 26 30 33 + 6 9|Tuesday-25/09/2012#077*7 25 27 48 49 + 1 4|Friday-21/09/2012#076*4 19 34 41 43 + 7 11|Tuesday-18/09/2012#075*6 7 38 39 44 + 7 9|Friday-14/09/2012#074*3 10 23 27 44 + 7 9|Tuesday-11/09/2012#073*6 15 22 37 44 + 2 4|Friday-07/09/2012#072*13 15 30 35 42 + 4 6|Tuesday-04/09/2012#071*11 17 18 39 44 + 5 10|Friday-31/08/2012#070*16 28 31 33 48 + 7 11|Tuesday-28/08/2012#069*1 18 25 26 44 + 4 5|Friday-24/08/2012#068*5 6 12 19 37 + 3 7|Tuesday-21/08/2012#067*4 5 17 38 48 + 3 4|Friday-17/08/2012#066*19 25 28 33 44 + 2 8|Tuesday-14/08/2012#065*1 16 38 42 45 + 9 10|Friday-10/08/2012#064*11 17 21 48 50 + 9 10|Tuesday-07/08/2012#063*20 27 34 46 50 + 2 3|Friday-03/08/2012#062*24 34 35 42 46 + 1 5|Tuesday-31/07/2012#061*4 29 35 36 39 + 8 9|Friday-27/07/2012#060*14 15 21 23 48 + 2 10|Tuesday-24/07/2012#059*4 16 18 25 44 + 1 11|Friday-20/07/2012#058*10 19 23 45 49 + 9 10|Tuesday-17/07/2012#057*2 7 24 43 46 + 8 10|Friday-13/07/2012#056*8 18 25 35 46 + 4 9|Tuesday-10/07/2012#055*1 3 16 24 37 + 1 8|Friday-06/07/2012#054*31 32 38 40 42 + 1 3|Tuesday-03/07/2012#053*2 7 22 27 40 + 3 6|Friday-29/06/2012#052*14 17 28 29 39 + 1 11|Tuesday-26/06/2012#051*1 11 20 22 35 + 8 10|Friday-22/06/2012#050*14 18 19 43 49 + 3 7|Tuesday-19/06/2012#049*7 17 20 35 50 + 5 11|Friday-15/06/2012#048*10 22 27 38 48 + 3 7|Tuesday-12/06/2012#047*8 15 26 30 48 + 9 10|Friday-08/06/2012#046*5 11 22 34 40 + 9 11|Tuesday-05/06/2012#045*13 34 37 47 49 + 8 9|Friday-01/06/2012#044*2 4 14 26 36 + 9 10|Tuesday-29/05/2012#043*8 15 17 25 28 + 3 11|Friday-25/05/2012#042*12 22 35 46 49 + 2 8|Tuesday-22/05/2012#041*16 31 32 37 41 + 1 7|Friday-18/05/2012#040*13 29 43 47 50 + 9 11|Tuesday-15/05/2012#039*2 11 13 26 50 + 2 5|Friday-11/05/2012#038*1 13 17 38 44 + 2 11|Tuesday-08/05/2012#037*3 21 34 38 48 + 5 8|Friday-04/05/2012#036*3 26 39 40 41 + 1 2|Tuesday-01/05/2012#035*4 5 15 19 41 + 9 11|Friday-27/04/2012#034*20 27 30 36 43 + 1 6|Tuesday-24/04/2012#033*8 9 24 43 48 + 3 5|Friday-20/04/2012#032*3 6 29 32 41 + 10 11|Tuesday-17/04/2012#031*10 28 33 48 49 + 1 10|Friday-13/04/2012#030*8 13 26 39 43 + 3 5|Tuesday-10/04/2012#029*22 25 27 36 37 + 5 9|Friday-06/04/2012#028*11 20 30 35 45 + 2 3|Tuesday-03/04/2012#027*1 8 18 25 30 + 9 10|Friday-30/03/2012#026*4 17 23 36 46 + 6 10|Tuesday-27/03/2012#025*24 27 29 34 36 + 7 8|Friday-23/03/2012#024*9 15 23 31 50 + 8 11|Tuesday-20/03/2012#023*15 16 28 30 46 + 3 4|Friday-16/03/2012#022*3 4 12 23 50 + 4 7|Tuesday-13/03/2012#021*1 10 25 43 47 + 8 9|Friday-09/03/2012#020*3 32 36 39 47 + 6 9|Tuesday-06/03/2012#019*23 24 27 37 47 + 2 6|Friday-02/03/2012#018*5 6 11 30 44 + 2 6|Tuesday-28/02/2012#017*1 10 17 33 48 + 2 3|Friday-24/02/2012#016*3 7 12 26 34 + 8 10|Tuesday-21/02/2012#015*11 14 24 25 29 + 7 11|Friday-17/02/2012#014*4 11 28 38 47 + 10 11|Tuesday-14/02/2012#013*14 27 36 42 46 + 8 11|Friday-10/02/2012#012*3 8 14 31 41 + 7 11|Tuesday-07/02/2012#011*3 15 17 28 33 + 2 4|Friday-03/02/2012#010*16 19 20 25 28 + 1 10|Tuesday-31/01/2012#009*9 34 38 43 45 + 2 4|Friday-27/01/2012#008*10 13 19 39 44 + 2 6|Tuesday-24/01/2012#007*1 2 6 20 36 + 8 11|Friday-20/01/2012#006*2 10 22 27 28 + 6 8|Tuesday-17/01/2012#005*12 22 30 31 44 + 5 6|Friday-13/01/2012#004*13 14 21 27 39 + 6 8|Tuesday-10/01/2012#003*4 9 10 30 40 + 2 9|Friday-06/01/2012#002*1 6 10 12 31 + 2 7|Tuesday-03/01/2012#001*3 30 42 45 49 + 5 10|Friday-30/12/2011#086*16 36 43 44 50 + 7 8|Tuesday-27/12/2011#085*19 21 25 26 44 + 3 7|Friday-23/12/2011#084*7 21 22 24 28 + 1 11|Tuesday-20/12/2011#083*1 9 12 14 48 + 1 7|Friday-16/12/2011#082*2 5 10 23 31 + 2 5|Tuesday-13/12/2011#081*7 12 18 33 37 + 1 11|Friday-09/12/2011#080*12 21 29 44 47 + 1 2|Tuesday-06/12/2011#079*19 20 21 34 38 + 3 9|Friday-02/12/2011#078*7 27 30 40 43 + 8 9|Tuesday-29/11/2011#077*11 25 41 45 50 + 2 7|Friday-25/11/2011#076*14 19 26 28 34 + 5 8|Tuesday-22/11/2011#075*16 18 24 38 40 + 2 4|Friday-18/11/2011#074*4 12 24 39 44 + 2 4|Tuesday-15/11/2011#073*6 17 22 45 47 + 3 11|Friday-11/11/2011#072*1 4 18 23 30 + 3 7|Tuesday-08/11/2011#071*1 4 15 29 40 + 1 5|Friday-04/11/2011#070*11 14 41 43 50 + 2 9|Tuesday-01/11/2011#069*14 20 23 45 46 + 1 11|Friday-28/10/2011#068*16 17 20 39 50 + 4 8|Tuesday-25/10/2011#067*12 22 27 28 39 + 4 10|Friday-21/10/2011#066*2 19 33 37 46 + 5 8|Tuesday-18/10/2011#065*18 23 37 46 48 + 2 10|Friday-14/10/2011#064*12 23 29 32 47 + 3 5|Tuesday-11/10/2011#063*1 4 12 16 48 + 9 10|Friday-07/10/2011#062*18 26 34 38 42 + 5 8|Tuesday-04/10/2011#061*14 16 23 38 45 + 8 11|Friday-30/09/2011#060*5 15 28 31 44 + 1 6|Tuesday-27/09/2011#059*18 27 28 35 40 + 3 5|Friday-23/09/2011#058*6 14 33 34 48 + 2 6|Tuesday-20/09/2011#057*9 19 25 36 38 + 7 11|Friday-16/09/2011#056*2 8 17 39 42 + 3 10|Tuesday-13/09/2011#055*9 28 30 32 49 + 9 10|Friday-09/09/2011#054*5 21 28 31 34 + 1 2|Tuesday-06/09/2011#053*35 42 47 48 50 + 8 9|Friday-02/09/2011#052*12 26 37 38 44 + 4 7|Tuesday-30/08/2011#051*2 8 10 19 46 + 5 9|Friday-26/08/2011#050*12 22 25 33 45 + 5 7|Tuesday-23/08/2011#049*4 6 14 42 50 + 2 4|Friday-19/08/2011#048*6 14 16 28 31 + 2 11|Tuesday-16/08/2011#047*1 13 17 18 45 + 3 8|Friday-12/08/2011#046*7 10 20 27 37 + 4 7|Tuesday-09/08/2011#045*7 23 24 34 36 + 8 11|Friday-05/08/2011#044*13 14 18 32 34 + 1 10|Tuesday-02/08/2011#043*5 8 14 24 33 + 3 8|Friday-29/07/2011#042*12 19 27 37 38 + 5 10|Tuesday-26/07/2011#041*1 5 22 25 48 + 3 11|Friday-22/07/2011#040*4 15 23 49 50 + 2 6|Tuesday-19/07/2011#039*3 16 25 26 35 + 5 9|Friday-15/07/2011#038*6 26 33 34 39 + 3 4|Tuesday-12/07/2011#037*17 19 38 42 45 + 9 10|Friday-08/07/2011#036*12 13 23 40 49 + 7 10|Tuesday-05/07/2011#035*11 28 29 47 49 + 1 5|Friday-01/07/2011#034*8 11 23 31 46 + 8 9|Tuesday-28/06/2011#033*15 16 30 44 50 + 2 3|Friday-24/06/2011#032*5 16 20 30 41 + 6 11|Tuesday-21/06/2011#031*17 20 35 49 50 + 3 4|Friday-17/06/2011#030*11 16 21 22 44 + 3 8|Tuesday-14/06/2011#029*5 12 19 41 48 + 8 10|Friday-10/06/2011#028*3 19 20 37 48 + 8 11|Tuesday-07/06/2011#027*6 25 36 38 40 + 4 10|Friday-03/06/2011#026*4 39 40 49 50 + 2 5|Tuesday-31/05/2011#025*1 9 10 22 50 + 5 11|Friday-27/05/2011#024*9 17 25 28 49 + 8 9|Tuesday-24/05/2011#023*16 23 24 26 29 + 2 9|Friday-20/05/2011#022*10 14 20 25 42 + 8 11|Tuesday-17/05/2011#021*20 21 37 45 46 + 2 3|Friday-13/05/2011#020*9 11 17 36 47 + 1 2|Tuesday-10/05/2011#019*3 10 15 28 45 + 5 7|Friday-06/05/2011#018*11 16 20 22 28 + 4 9|Friday-29/04/2011#017*15 25 38 40 41 + 1 2|Friday-22/04/2011#016*11 22 36 45 48 + 1 4|Friday-15/04/2011#015*4 6 21 39 41 + 2 6|Friday-08/04/2011#014*21 23 38 47 50 + 2 6|Friday-01/04/2011#013*4 17 21 22 33 + 4 8|Friday-25/03/2011#012*6 12 21 27 33 + 3 7|Friday-18/03/2011#011*1 13 20 26 50 + 6 7|Friday-11/03/2011#010*17 19 24 37 46 + 2 7|Friday-04/03/2011#009*11 25 27 28 41 + 5 8|Friday-25/02/2011#008*12 13 42 45 48 + 3 9|Friday-18/02/2011#007*2 3 15 45 49 + 5 9|Friday-11/02/2011#006*12 14 15 19 23 + 7 8|Friday-04/02/2011#005*2 11 24 35 47 + 5 9|Friday-28/01/2011#004*13 23 24 41 42 + 1 5|Friday-21/01/2011#003*3 11 13 18 21 + 4 5|Friday-14/01/2011#002*2 14 24 39 44 + 6 7|Friday-07/01/2011#001*1 22 32 48 50 + 6 7|Friday-31/12/2010#053*2 24 34 38 43 + 1 7|Friday-24/12/2010#052*19 36 38 42 46 + 2 8|Friday-17/12/2010#051*3 20 29 35 42 + 3 8|Friday-10/12/2010#050*2 3 10 33 46 + 7 8|Friday-03/12/2010#049*8 19 28 32 46 + 4 7|Friday-26/11/2010#048*9 28 36 41 49 + 5 7|Friday-19/11/2010#047*12 15 32 36 45 + 7 9|Friday-12/11/2010#046*7 19 23 29 47 + 1 6|Friday-05/11/2010#045*21 23 33 40 50 + 4 5|Friday-29/10/2010#044*16 20 22 32 42 + 8 9|Friday-22/10/2010#043*4 5 9 11 39 + 3 5|Friday-15/10/2010#042*2 31 36 38 43 + 3 7|Friday-08/10/2010#041*9 30 35 39 46 + 6 8|Friday-01/10/2010#040*1 4 6 27 48 + 1 6|Friday-24/09/2010#039*1 4 16 40 48 + 1 9|Friday-17/09/2010#038*17 27 29 38 50 + 1 3|Friday-10/09/2010#037*17 21 35 41 45 + 1 5|Friday-03/09/2010#036*13 24 26 47 49 + 4 8|Friday-27/08/2010#035*1 6 13 30 49 + 1 9|Friday-20/08/2010#034*5 27 31 40 42 + 1 6|Friday-13/08/2010#033*4 9 15 21 47 + 2 7|Friday-06/08/2010#032*13 25 28 29 42 + 4 5|Friday-30/07/2010#031*3 4 11 28 39 + 2 8|Friday-23/07/2010#030*4 13 35 37 46 + 3 9|Friday-16/07/2010#029*38 39 45 46 49 + 7 8|Friday-09/07/2010#028*9 24 37 39 49 + 3 9|Friday-02/07/2010#027*12 13 36 41 46 + 1 8|Friday-25/06/2010#026*1 8 18 28 31 + 8 9|Friday-18/06/2010#025*2 29 31 32 38 + 1 4|Friday-11/06/2010#024*2 22 24 36 44 + 1 2|Friday-04/06/2010#023*4 17 34 40 42 + 4 9|Friday-28/05/2010#022*4 9 31 32 33 + 3 7|Friday-21/05/2010#021*7 19 30 38 50 + 4 7|Friday-14/05/2010#020*1 17 31 43 47 + 2 3|Friday-07/05/2010#019*3 6 15 21 32 + 7 9|Friday-30/04/2010#018*6 22 24 25 36 + 3 8|Friday-23/04/2010#017*3 7 8 43 46 + 6 8|Friday-16/04/2010#016*9 11 17 26 40 + 3 9|Friday-09/04/2010#015*7 21 23 24 44 + 3 4|Friday-02/04/2010#014*12 18 24 26 45 + 4 5|Friday-26/03/2010#013*8 16 18 37 43 + 2 6|Friday-19/03/2010#012*10 28 30 38 39 + 2 7|Friday-12/03/2010#011*1 26 33 36 46 + 6 7|Friday-05/03/2010#010*12 18 19 43 49 + 3 9|Friday-26/02/2010#009*7 11 18 29 42 + 6 7|Friday-19/02/2010#008*12 31 37 38 43 + 2 3|Friday-12/02/2010#007*1 5 18 38 45 + 4 6|Friday-05/02/2010#006*34 35 38 39 46 + 3 4|Friday-29/01/2010#005*9 17 30 39 43 + 5 7|Friday-22/01/2010#004*4 22 27 36 44 + 7 9|Friday-15/01/2010#003*11 26 29 49 50 + 4 7|Friday-08/01/2010#002*4 5 14 44 46 + 8 9|Friday-01/01/2010#001*9 22 24 27 36 + 5 7|Friday-25/12/2009#052*4 5 14 17 34 + 3 5|Friday-18/12/2009#051*14 30 32 35 49 + 3 8|Friday-11/12/2009#050*20 41 43 44 46 + 2 9|Friday-04/12/2009#049*18 19 25 30 44 + 1 3|Friday-27/11/2009#048*5 8 13 15 33 + 8 9|Friday-20/11/2009#047*5 9 28 43 47 + 2 9|Friday-13/11/2009#046*13 15 25 26 32 + 3 4|Friday-06/11/2009#045*11 19 34 43 45 + 5 9|Friday-30/10/2009#044*9 33 35 38 40 + 2 6|Friday-23/10/2009#043*6 18 20 29 31 + 2 8|Friday-16/10/2009#042*12 23 30 31 47 + 3 4|Friday-09/10/2009#041*7 11 29 46 50 + 4 7|Friday-02/10/2009#040*22 23 24 29 44 + 1 5|Friday-25/09/2009#039*6 17 18 21 34 + 3 9|Friday-18/09/2009#038*6 16 30 38 41 + 2 4|Friday-11/09/2009#037*12 15 35 42 43 + 4 6|Friday-04/09/2009#036*6 9 20 38 39 + 3 9|Friday-28/08/2009#035*8 36 37 41 49 + 5 7|Friday-21/08/2009#034*4 7 16 31 42 + 3 5|Friday-14/08/2009#033*5 8 24 30 49 + 3 9|Friday-07/08/2009#032*10 20 22 24 31 + 2 7|Friday-31/07/2009#031*5 9 20 21 26 + 3 6|Friday-24/07/2009#030*14 15 25 35 47 + 5 9|Friday-17/07/2009#029*2 8 17 32 50 + 3 7|Friday-10/07/2009#028*6 16 20 42 46 + 1 6|Friday-03/07/2009#027*21 29 34 46 47 + 6 8|Friday-26/06/2009#026*6 11 21 30 39 + 2 8|Friday-19/06/2009#025*4 16 17 20 29 + 5 7|Friday-12/06/2009#024*6 14 16 34 50 + 4 6|Friday-05/06/2009#023*11 19 26 35 40 + 2 5|Friday-29/05/2009#022*2 5 30 37 47 + 3 6|Friday-22/05/2009#021*4 13 14 33 43 + 1 6|Friday-15/05/2009#020*8 18 19 20 42 + 5 9|Friday-08/05/2009#019*4 23 24 29 31 + 8 9|Friday-01/05/2009#018*5 19 31 38 47 + 3 5|Friday-24/04/2009#017*4 14 21 24 41 + 5 8|Friday-17/04/2009#016*4 7 21 44 47 + 1 5|Friday-10/04/2009#015*9 14 16 37 46 + 2 4|Friday-03/04/2009#014*2 20 24 32 46 + 1 9|Friday-27/03/2009#013*25 33 36 38 42 + 6 7|Friday-20/03/2009#012*12 16 23 31 35 + 4 6|Friday-13/03/2009#011*12 24 26 36 42 + 1 4|Friday-06/03/2009#010*13 17 19 25 35 + 5 6|Friday-27/02/2009#009*5 9 37 44 45 + 6 9|Friday-20/02/2009#008*9 12 13 14 48 + 1 2|Friday-13/02/2009#007*22 33 36 40 42 + 1 2|Friday-06/02/2009#006*10 20 30 36 40 + 3 5|Friday-30/01/2009#005*4 29 34 35 46 + 5 8|Friday-23/01/2009#004*32 33 36 40 49 + 2 8|Friday-16/01/2009#003*3 17 22 49 50 + 3 6|Friday-09/01/2009#002*7 15 22 28 48 + 1 4|Friday-02/01/2009#001*29 30 36 37 48 + 1 6|Friday-26/12/2008#052*1 2 26 44 50 + 1 7|Friday-19/12/2008#051*28 29 40 46 50 + 5 7|Friday-12/12/2008#050*2 19 28 42 49 + 2 7|Friday-05/12/2008#049*4 8 21 35 45 + 5 8|Friday-28/11/2008#048*8 11 16 25 41 + 2 4|Friday-21/11/2008#047*9 14 21 49 50 + 3 8|Friday-14/11/2008#046*8 10 14 21 26 + 3 4|Friday-07/11/2008#045*1 9 12 17 18 + 3 4|Friday-31/10/2008#044*3 18 25 34 41 + 2 5|Friday-24/10/2008#043*7 15 16 17 45 + 6 9|Friday-17/10/2008#042*3 10 12 42 50 + 1 5|Friday-10/10/2008#041*4 15 22 31 41 + 1 6|Friday-03/10/2008#040*4 13 19 23 38 + 2 3|Friday-26/09/2008#039*14 29 31 33 37 + 1 2|Friday-19/09/2008#038*14 16 19 20 31 + 6 9|Friday-12/09/2008#037*19 23 33 37 50 + 3 7|Friday-05/09/2008#036*7 12 16 17 39 + 3 8|Friday-29/08/2008#035*2 20 25 37 39 + 5 8|Friday-22/08/2008#034*7 27 29 39 50 + 5 7|Friday-15/08/2008#033*11 17 18 26 31 + 5 6|Friday-08/08/2008#032*4 5 15 16 45 + 4 7|Friday-01/08/2008#031*1 22 25 40 50 + 1 8|Friday-25/07/2008#030*7 11 15 24 29 + 2 7|Friday-18/07/2008#029*10 14 16 29 44 + 5 6|Friday-11/07/2008#028*9 11 13 19 37 + 3 4|Friday-04/07/2008#027*7 19 22 27 48 + 5 7|Friday-27/06/2008#026*5 20 26 44 50 + 5 7|Friday-20/06/2008#025*8 11 36 37 45 + 3 5|Friday-13/06/2008#024*13 16 37 44 50 + 1 9|Friday-06/06/2008#023*7 19 21 40 50 + 2 9|Friday-30/05/2008#022*5 7 14 20 49 + 2 8|Friday-23/05/2008#021*5 9 19 21 38 + 1 7|Friday-16/05/2008#020*6 9 15 25 38 + 4 9|Friday-09/05/2008#019*8 9 40 42 45 + 6 7|Friday-02/05/2008#018*2 26 37 45 48 + 4 8|Friday-25/04/2008#017*4 19 26 27 30 + 3 8|Friday-18/04/2008#016*3 6 7 27 50 + 5 9|Friday-11/04/2008#015*6 25 30 45 50 + 5 7|Friday-04/04/2008#014*11 13 18 37 47 + 1 6|Friday-28/03/2008#013*5 9 17 29 39 + 3 6|Friday-21/03/2008#012*2 10 18 22 36 + 4 6|Friday-14/03/2008#011*13 21 25 35 48 + 4 8|Friday-07/03/2008#010*2 7 14 17 35 + 1 6|Friday-29/02/2008#009*12 37 40 47 49 + 2 9|Friday-22/02/2008#008*4 27 32 46 50 + 8 9|Friday-15/02/2008#007*12 27 29 45 46 + 4 7|Friday-08/02/2008#006*17 28 30 38 44 + 1 4|Friday-01/02/2008#005*22 30 45 47 49 + 4 9|Friday-25/01/2008#004*2 6 9 19 45 + 7 8|Friday-18/01/2008#003*14 16 23 40 46 + 4 8|Friday-11/01/2008#002*8 24 36 49 50 + 4 8|Friday-04/01/2008#001*10 12 24 25 41 + 3 5|Friday-28/12/2007#052*20 21 22 31 45 + 7 9|Friday-21/12/2007#051*7 9 28 37 44 + 6 7|Friday-14/12/2007#050*8 25 30 36 44 + 3 4|Friday-07/12/2007#049*2 4 32 43 48 + 1 7|Friday-30/11/2007#048*12 19 20 30 38 + 7 9|Friday-23/11/2007#047*2 10 22 29 48 + 3 9|Friday-16/11/2007#046*9 18 23 33 37 + 1 8|Friday-09/11/2007#045*5 14 22 25 36 + 5 6|Friday-02/11/2007#044*3 16 18 19 40 + 1 2|Friday-26/10/2007#043*7 20 38 40 43 + 1 8|Friday-19/10/2007#042*7 18 34 35 40 + 7 8|Friday-12/10/2007#041*21 32 36 46 47 + 3 4|Friday-05/10/2007#040*11 20 27 35 44 + 2 5|Friday-28/09/2007#039*22 30 34 35 44 + 4 5|Friday-21/09/2007#038*1 17 32 35 37 + 1 8|Friday-14/09/2007#037*5 9 11 29 33 + 7 9|Friday-07/09/2007#036*2 3 33 34 42 + 3 5|Friday-31/08/2007#035*6 18 22 23 37 + 5 6|Friday-24/08/2007#034*1 3 16 42 48 + 2 3|Friday-17/08/2007#033*2 3 13 38 42 + 7 8|Friday-10/08/2007#032*23 40 42 43 49 + 2 6|Friday-03/08/2007#031*10 30 33 37 41 + 1 8|Friday-27/07/2007#030*1 4 21 29 41 + 7 8|Friday-20/07/2007#029*10 21 25 26 50 + 4 9|Friday-13/07/2007#028*9 13 15 31 48 + 3 6|Friday-06/07/2007#027*4 5 19 39 41 + 8 9|Friday-29/06/2007#026*8 12 28 33 45 + 1 3|Friday-22/06/2007#025*11 16 17 22 34 + 5 6|Friday-15/06/2007#024*5 7 14 21 40 + 3 8|Friday-08/06/2007#023*1 15 17 25 45 + 2 8|Friday-01/06/2007#022*6 22 37 41 42 + 6 9|Friday-25/05/2007#021*25 26 29 49 50 + 7 8|Friday-18/05/2007#020*26 34 37 39 49 + 2 6|Friday-11/05/2007#019*7 12 26 29 49 + 2 6|Friday-04/05/2007#018*6 17 35 41 45 + 1 5|Friday-27/04/2007#017*7 18 27 36 44 + 1 2|Friday-20/04/2007#016*23 26 32 41 45 + 3 7|Friday-13/04/2007#015*7 20 25 38 41 + 3 7|Friday-06/04/2007#014*15 23 29 41 48 + 3 6|Friday-30/03/2007#013*9 17 19 41 46 + 1 8|Friday-23/03/2007#012*5 13 17 40 43 + 1 3|Friday-16/03/2007#011*4 14 31 45 49 + 4 9|Friday-09/03/2007#010*2 3 25 43 48 + 6 9|Friday-02/03/2007#009*3 16 34 38 48 + 5 8|Friday-23/02/2007#008*2 15 18 20 22 + 2 5|Friday-16/02/2007#007*8 19 20 39 50 + 6 9|Friday-09/02/2007#006*14 16 30 36 46 + 2 8|Friday-02/02/2007#005*14 23 27 30 36 + 1 6|Friday-26/01/2007#004*11 15 23 30 38 + 4 9|Friday-19/01/2007#003*5 13 27 33 42 + 2 4|Friday-12/01/2007#002*8 11 14 19 25 + 3 5|Friday-05/01/2007#001*17 19 29 36 45 + 5 6|Friday-29/12/2006#052*6 9 13 14 35 + 3 4|Friday-22/12/2006#051*9 11 20 38 43 + 2 3|Friday-15/12/2006#050*9 23 35 37 42 + 3 7|Friday-08/12/2006#049*16 17 18 36 47 + 1 2|Friday-01/12/2006#048*4 8 16 37 41 + 2 5|Friday-24/11/2006#047*5 8 17 25 40 + 1 5|Friday-17/11/2006#046*12 22 32 33 36 + 2 6|Friday-10/11/2006#045*14 21 27 30 36 + 2 3|Friday-03/11/2006#044*11 13 24 44 49 + 3 9|Friday-27/10/2006#043*3 4 8 44 50 + 7 8|Friday-20/10/2006#042*10 19 34 45 47 + 3 6|Friday-13/10/2006#041*2 25 32 38 41 + 3 5|Friday-06/10/2006#040*5 11 22 35 38 + 7 8|Friday-29/09/2006#039*1 3 6 18 24 + 5 8|Friday-22/09/2006#038*10 29 30 45 49 + 3 8|Friday-15/09/2006#037*6 10 16 26 49 + 7 9|Friday-08/09/2006#036*1 10 12 32 33 + 1 8|Friday-01/09/2006#035*3 7 25 45 50 + 6 9|Friday-25/08/2006#034*10 28 40 47 48 + 6 8|Friday-18/08/2006#033*12 37 39 40 50 + 1 2|Friday-11/08/2006#032*27 28 31 46 47 + 2 5|Friday-04/08/2006#031*1 14 15 26 32 + 3 7|Friday-28/07/2006#030*3 8 12 29 43 + 6 7|Friday-21/07/2006#029*2 4 9 38 50 + 6 8|Friday-14/07/2006#028*1 7 17 31 36 + 2 8|Friday-07/07/2006#027*7 9 18 35 43 + 5 7|Friday-30/06/2006#026*6 15 16 40 43 + 1 2|Friday-23/06/2006#025*9 21 30 43 44 + 1 9|Friday-16/06/2006#024*1 16 26 30 36 + 3 9|Friday-09/06/2006#023*3 12 15 34 39 + 4 6|Friday-02/06/2006#022*7 8 27 41 48 + 1 6|Friday-26/05/2006#021*2 12 21 41 49 + 3 7|Friday-19/05/2006#020*3 5 25 34 49 + 5 8|Friday-12/05/2006#019*5 20 23 34 50 + 1 5|Friday-05/05/2006#018*4 8 14 16 50 + 3 9|Friday-28/04/2006#017*5 10 17 22 33 + 5 7|Friday-21/04/2006#016*1 20 22 37 46 + 1 9|Friday-14/04/2006#015*16 26 34 35 49 + 2 6|Friday-07/04/2006#014*12 13 29 44 50 + 4 5|Friday-31/03/2006#013*3 20 31 45 50 + 6 7|Friday-24/03/2006#012*17 28 33 35 47 + 4 9|Friday-17/03/2006#011*5 32 44 45 50 + 1 7|Friday-10/03/2006#010*1 21 33 45 49 + 4 8|Friday-03/03/2006#009*3 5 8 10 44 + 3 5|Friday-24/02/2006#008*1 11 18 19 47 + 3 7|Friday-17/02/2006#007*4 23 24 26 38 + 2 4|Friday-10/02/2006#006*5 6 38 48 50 + 6 7|Friday-03/02/2006#005*9 21 30 39 50 + 1 3|Friday-27/01/2006#004*9 15 21 40 49 + 1 4|Friday-20/01/2006#003*12 15 33 44 50 + 2 6|Friday-13/01/2006#002*8 12 19 33 34 + 1 6|Friday-06/01/2006#001*2 6 9 14 26 + 4 5|Friday-30/12/2005#052*8 16 19 43 45 + 1 4|Friday-23/12/2005#051*15 31 36 37 42 + 1 7|Friday-16/12/2005#050*2 3 15 18 32 + 6 7|Friday-09/12/2005#049*11 18 35 38 42 + 1 5|Friday-02/12/2005#048*1 9 20 23 30 + 4 7|Friday-25/11/2005#047*1 6 27 39 47 + 1 6|Friday-18/11/2005#046*17 18 25 34 48 + 2 3|Friday-11/11/2005#045*15 16 36 41 42 + 3 5|Friday-04/11/2005#044*26 36 37 38 42 + 2 6|Friday-28/10/2005#043*14 36 44 47 50 + 3 5|Friday-21/10/2005#042*1 14 19 29 33 + 1 8|Friday-14/10/2005#041*10 11 19 20 23 + 1 6|Friday-07/10/2005#040*2 13 21 26 44 + 3 9|Friday-30/09/2005#039*6 11 47 48 50 + 1 6|Friday-23/09/2005#038*1 26 31 34 47 + 4 9|Friday-16/09/2005#037*12 13 19 21 38 + 3 9|Friday-09/09/2005#036*8 12 19 31 50 + 6 7|Friday-02/09/2005#035*3 4 14 43 50 + 3 6|Friday-26/08/2005#034*9 29 35 40 41 + 1 6|Friday-19/08/2005#033*11 24 29 31 41 + 1 3|Friday-12/08/2005#032*15 23 30 37 40 + 7 9|Friday-05/08/2005#031*2 11 21 22 30 + 4 6|Friday-29/07/2005#030*3 19 26 49 50 + 4 5|Friday-22/07/2005#029*3 14 41 48 49 + 1 4|Friday-15/07/2005#028*1 11 12 23 42 + 3 6|Friday-08/07/2005#027*35 36 42 46 49 + 2 8|Friday-01/07/2005#026*4 5 23 25 28 + 3 4|Friday-24/06/2005#025*6 8 14 15 45 + 7 8|Friday-17/06/2005#024*4 8 10 18 21 + 1 7|Friday-10/06/2005#023*6 7 32 37 47 + 1 7|Friday-03/06/2005#022*3 8 11 17 50 + 1 5|Friday-27/05/2005#021*2 24 31 48 50 + 4 9|Friday-20/05/2005#020*6 7 13 28 47 + 5 8|Friday-13/05/2005#019*12 17 31 32 40 + 2 9|Friday-06/05/2005#018*7 12 21 26 44 + 6 8|Friday-29/04/2005#017*3 9 35 39 42 + 1 8|Friday-22/04/2005#016*3 10 13 24 47 + 5 9|Friday-15/04/2005#015*6 28 31 38 42 + 3 9|Friday-08/04/2005#014*7 11 25 31 50 + 1 3|Friday-01/04/2005#013*25 26 41 44 47 + 3 7|Friday-25/03/2005#012*4 29 33 37 38 + 6 9|Friday-18/03/2005#011*6 23 39 43 48 + 5 7|Friday-11/03/2005#010*8 12 23 40 43 + 1 4|Friday-04/03/2005#009*12 24 32 37 39 + 7 9|Friday-25/02/2005#008*3 27 30 43 44 + 4 8|Friday-18/02/2005#007*20 21 26 32 46 + 8 9|Friday-11/02/2005#006*11 13 25 32 50 + 4 7|Friday-04/02/2005#005*1 8 11 30 40 + 7 8|Friday-28/01/2005#004*7 21 26 43 45 + 5 7|Friday-21/01/2005#003*10 12 14 24 26 + 5 8|Friday-14/01/2005#002*6 11 14 19 29 + 1 3|Friday-07/01/2005#001*3 23 27 47 50 + 2 3|Friday-31/12/2004#047*7 8 24 25 47 + 8 9|Friday-24/12/2004#046*3 4 27 29 37 + 5 6|Friday-17/12/2004#045*15 19 22 46 49 + 2 9|Friday-10/12/2004#044*1 3 13 16 43 + 2 7|Friday-03/12/2004#043*1 11 15 42 49 + 3 4|Friday-26/11/2004#042*1 4 24 34 36 + 6 8|Friday-19/11/2004#041*1 18 29 34 37 + 2 6|Friday-12/11/2004#040*4 11 12 13 32 + 3 9|Friday-05/11/2004#039*6 19 25 42 49 + 1 7|Friday-29/10/2004#038*1 8 32 35 38 + 4 9|Friday-22/10/2004#037*1 9 23 25 40 + 3 9|Friday-15/10/2004#036*14 21 22 37 43 + 5 8|Friday-08/10/2004#035*1 10 12 16 48 + 2 6|Friday-01/10/2004#034*12 20 21 45 48 + 5 6|Friday-24/09/2004#033*21 26 27 44 48 + 1 7|Friday-17/09/2004#032*15 18 29 39 41 + 5 8|Friday-10/09/2004#031*5 25 33 36 38 + 2 5|Friday-03/09/2004#030*8 12 14 15 34 + 6 7|Friday-27/08/2004#029*1 11 22 28 44 + 1 9|Friday-20/08/2004#028*6 9 10 27 35 + 6 8|Friday-13/08/2004#027*20 27 41 43 50 + 5 8|Friday-06/08/2004#026*5 15 24 35 44 + 5 6|Friday-30/07/2004#025*9 10 19 37 50 + 1 6|Friday-23/07/2004#024*7 10 27 31 34 + 3 8|Friday-16/07/2004#023*24 26 31 38 50 + 5 8|Friday-09/07/2004#022*2 5 12 19 44 + 8 9|Friday-02/07/2004#021*4 23 24 28 34 + 1 3|Friday-25/06/2004#020*3 21 30 34 35 + 1 2|Friday-18/06/2004#019*2 23 28 40 43 + 2 6|Friday-11/06/2004#018*2 7 8 10 47 + 1 7|Friday-04/06/2004#017*9 13 34 41 42 + 3 7|Friday-28/05/2004#016*6 11 35 41 44 + 5 6|Friday-21/05/2004#015*15 29 37 39 49 + 4 9|Friday-14/05/2004#014*1 3 21 32 39 + 2 6|Friday-07/05/2004#013*15 16 21 36 38 + 1 5|Friday-30/04/2004#012*5 6 16 23 27 + 6 7|Friday-23/04/2004#011*6 10 21 45 49 + 3 5|Friday-16/04/2004#010*14 15 28 35 40 + 1 3|Friday-09/04/2004#009*1 4 10 19 23 + 2 8|Friday-02/04/2004#008*4 12 24 27 36 + 2 9|Friday-26/03/2004#007*3 4 10 23 43 + 2 4|Friday-19/03/2004#006*33 36 37 42 45 + 4 9|Friday-12/03/2004#005*15 24 28 44 47 + 4 5|Friday-05/03/2004#004*4 7 33 37 39 + 1 5|Friday-27/02/2004#003*14 18 19 31 37 + 4 5|Friday-20/02/2004#002*7 13 39 47 50 + 2 5|Friday-13/02/2004#001*16 29 32 36 41 + 7 9'
		/*
			2004:	(047 Drafts)
			'Friday-31/12/2004#047*7 8 24 25 47 + 8 9|Friday-24/12/2004#046*3 4 27 29 37 + 5 6|Friday-17/12/2004#045*15 19 22 46 49 + 2 9|Friday-10/12/2004#044*1 3 13 16 43 + 2 7|Friday-03/12/2004#043*1 11 15 42 49 + 3 4|Friday-26/11/2004#042*1 4 24 34 36 + 6 8|Friday-19/11/2004#041*1 18 29 34 37 + 2 6|Friday-12/11/2004#040*4 11 12 13 32 + 3 9|Friday-05/11/2004#039*6 19 25 42 49 + 1 7|Friday-29/10/2004#038*1 8 32 35 38 + 4 9|Friday-22/10/2004#037*1 9 23 25 40 + 3 9|Friday-15/10/2004#036*14 21 22 37 43 + 5 8|Friday-08/10/2004#035*1 10 12 16 48 + 2 6|Friday-01/10/2004#034*12 20 21 45 48 + 5 6|Friday-24/09/2004#033*21 26 27 44 48 + 1 7|Friday-17/09/2004#032*15 18 29 39 41 + 5 8|Friday-10/09/2004#031*5 25 33 36 38 + 2 5|Friday-03/09/2004#030*8 12 14 15 34 + 6 7|Friday-27/08/2004#029*1 11 22 28 44 + 1 9|Friday-20/08/2004#028*6 9 10 27 35 + 6 8|Friday-13/08/2004#027*20 27 41 43 50 + 5 8|Friday-06/08/2004#026*5 15 24 35 44 + 5 6|Friday-30/07/2004#025*9 10 19 37 50 + 1 6|Friday-23/07/2004#024*7 10 27 31 34 + 3 8|Friday-16/07/2004#023*24 26 31 38 50 + 5 8|Friday-09/07/2004#022*2 5 12 19 44 + 8 9|Friday-02/07/2004#021*4 23 24 28 34 + 1 3|Friday-25/06/2004#020*3 21 30 34 35 + 1 2|Friday-18/06/2004#019*2 23 28 40 43 + 2 6|Friday-11/06/2004#018*2 7 8 10 47 + 1 7|Friday-04/06/2004#017*9 13 34 41 42 + 3 7|Friday-28/05/2004#016*6 11 35 41 44 + 5 6|Friday-21/05/2004#015*15 29 37 39 49 + 4 9|Friday-14/05/2004#014*1 3 21 32 39 + 2 6|Friday-07/05/2004#013*15 16 21 36 38 + 1 5|Friday-30/04/2004#012*5 6 16 23 27 + 6 7|Friday-23/04/2004#011*6 10 21 45 49 + 3 5|Friday-16/04/2004#010*14 15 28 35 40 + 1 3|Friday-09/04/2004#009*1 4 10 19 23 + 2 8|Friday-02/04/2004#008*4 12 24 27 36 + 2 9|Friday-26/03/2004#007*3 4 10 23 43 + 2 4|Friday-19/03/2004#006*33 36 37 42 45 + 4 9|Friday-12/03/2004#005*15 24 28 44 47 + 4 5|Friday-05/03/2004#004*4 7 33 37 39 + 1 5|Friday-27/02/2004#003*14 18 19 31 37 + 4 5|Friday-20/02/2004#002*7 13 39 47 50 + 2 5|Friday-13/02/2004#001*16 29 32 36 41 + 7 9'
			
			2005:	(052 Drafts)
			'Friday-30/12/2005#052*8 16 19 43 45 + 1 4|Friday-23/12/2005#051*15 31 36 37 42 + 1 7|Friday-16/12/2005#050*2 3 15 18 32 + 6 7|Friday-09/12/2005#049*11 18 35 38 42 + 1 5|Friday-02/12/2005#048*1 9 20 23 30 + 4 7|Friday-25/11/2005#047*1 6 27 39 47 + 1 6|Friday-18/11/2005#046*17 18 25 34 48 + 2 3|Friday-11/11/2005#045*15 16 36 41 42 + 3 5|Friday-04/11/2005#044*26 36 37 38 42 + 2 6|Friday-28/10/2005#043*14 36 44 47 50 + 3 5|Friday-21/10/2005#042*1 14 19 29 33 + 1 8|Friday-14/10/2005#041*10 11 19 20 23 + 1 6|Friday-07/10/2005#040*2 13 21 26 44 + 3 9|Friday-30/09/2005#039*6 11 47 48 50 + 1 6|Friday-23/09/2005#038*1 26 31 34 47 + 4 9|Friday-16/09/2005#037*12 13 19 21 38 + 3 9|Friday-09/09/2005#036*8 12 19 31 50 + 6 7|Friday-02/09/2005#035*3 4 14 43 50 + 3 6|Friday-26/08/2005#034*9 29 35 40 41 + 1 6|Friday-19/08/2005#033*11 24 29 31 41 + 1 3|Friday-12/08/2005#032*15 23 30 37 40 + 7 9|Friday-05/08/2005#031*2 11 21 22 30 + 4 6|Friday-29/07/2005#030*3 19 26 49 50 + 4 5|Friday-22/07/2005#029*3 14 41 48 49 + 1 4|Friday-15/07/2005#028*1 11 12 23 42 + 3 6|Friday-08/07/2005#027*35 36 42 46 49 + 2 8|Friday-01/07/2005#026*4 5 23 25 28 + 3 4|Friday-24/06/2005#025*6 8 14 15 45 + 7 8|Friday-17/06/2005#024*4 8 10 18 21 + 1 7|Friday-10/06/2005#023*6 7 32 37 47 + 1 7|Friday-03/06/2005#022*3 8 11 17 50 + 1 5|Friday-27/05/2005#021*2 24 31 48 50 + 4 9|Friday-20/05/2005#020*6 7 13 28 47 + 5 8|Friday-13/05/2005#019*12 17 31 32 40 + 2 9|Friday-06/05/2005#018*7 12 21 26 44 + 6 8|Friday-29/04/2005#017*3 9 35 39 42 + 1 8|Friday-22/04/2005#016*3 10 13 24 47 + 5 9|Friday-15/04/2005#015*6 28 31 38 42 + 3 9|Friday-08/04/2005#014*7 11 25 31 50 + 1 3|Friday-01/04/2005#013*25 26 41 44 47 + 3 7|Friday-25/03/2005#012*4 29 33 37 38 + 6 9|Friday-18/03/2005#011*6 23 39 43 48 + 5 7|Friday-11/03/2005#010*8 12 23 40 43 + 1 4|Friday-04/03/2005#009*12 24 32 37 39 + 7 9|Friday-25/02/2005#008*3 27 30 43 44 + 4 8|Friday-18/02/2005#007*20 21 26 32 46 + 8 9|Friday-11/02/2005#006*11 13 25 32 50 + 4 7|Friday-04/02/2005#005*1 8 11 30 40 + 7 8|Friday-28/01/2005#004*7 21 26 43 45 + 5 7|Friday-21/01/2005#003*10 12 14 24 26 + 5 8|Friday-14/01/2005#002*6 11 14 19 29 + 1 3|Friday-07/01/2005#001*3 23 27 47 50 + 2 3'
			
			2006:	(052 Drafts)
			'Friday-29/12/2006#052*6 9 13 14 35 + 3 4|Friday-22/12/2006#051*9 11 20 38 43 + 2 3|Friday-15/12/2006#050*9 23 35 37 42 + 3 7|Friday-08/12/2006#049*16 17 18 36 47 + 1 2|Friday-01/12/2006#048*4 8 16 37 41 + 2 5|Friday-24/11/2006#047*5 8 17 25 40 + 1 5|Friday-17/11/2006#046*12 22 32 33 36 + 2 6|Friday-10/11/2006#045*14 21 27 30 36 + 2 3|Friday-03/11/2006#044*11 13 24 44 49 + 3 9|Friday-27/10/2006#043*3 4 8 44 50 + 7 8|Friday-20/10/2006#042*10 19 34 45 47 + 3 6|Friday-13/10/2006#041*2 25 32 38 41 + 3 5|Friday-06/10/2006#040*5 11 22 35 38 + 7 8|Friday-29/09/2006#039*1 3 6 18 24 + 5 8|Friday-22/09/2006#038*10 29 30 45 49 + 3 8|Friday-15/09/2006#037*6 10 16 26 49 + 7 9|Friday-08/09/2006#036*1 10 12 32 33 + 1 8|Friday-01/09/2006#035*3 7 25 45 50 + 6 9|Friday-25/08/2006#034*10 28 40 47 48 + 6 8|Friday-18/08/2006#033*12 37 39 40 50 + 1 2|Friday-11/08/2006#032*27 28 31 46 47 + 2 5|Friday-04/08/2006#031*1 14 15 26 32 + 3 7|Friday-28/07/2006#030*3 8 12 29 43 + 6 7|Friday-21/07/2006#029*2 4 9 38 50 + 6 8|Friday-14/07/2006#028*1 7 17 31 36 + 2 8|Friday-07/07/2006#027*7 9 18 35 43 + 5 7|Friday-30/06/2006#026*6 15 16 40 43 + 1 2|Friday-23/06/2006#025*9 21 30 43 44 + 1 9|Friday-16/06/2006#024*1 16 26 30 36 + 3 9|Friday-09/06/2006#023*3 12 15 34 39 + 4 6|Friday-02/06/2006#022*7 8 27 41 48 + 1 6|Friday-26/05/2006#021*2 12 21 41 49 + 3 7|Friday-19/05/2006#020*3 5 25 34 49 + 5 8|Friday-12/05/2006#019*5 20 23 34 50 + 1 5|Friday-05/05/2006#018*4 8 14 16 50 + 3 9|Friday-28/04/2006#017*5 10 17 22 33 + 5 7|Friday-21/04/2006#016*1 20 22 37 46 + 1 9|Friday-14/04/2006#015*16 26 34 35 49 + 2 6|Friday-07/04/2006#014*12 13 29 44 50 + 4 5|Friday-31/03/2006#013*3 20 31 45 50 + 6 7|Friday-24/03/2006#012*17 28 33 35 47 + 4 9|Friday-17/03/2006#011*5 32 44 45 50 + 1 7|Friday-10/03/2006#010*1 21 33 45 49 + 4 8|Friday-03/03/2006#009*3 5 8 10 44 + 3 5|Friday-24/02/2006#008*1 11 18 19 47 + 3 7|Friday-17/02/2006#007*4 23 24 26 38 + 2 4|Friday-10/02/2006#006*5 6 38 48 50 + 6 7|Friday-03/02/2006#005*9 21 30 39 50 + 1 3|Friday-27/01/2006#004*9 15 21 40 49 + 1 4|Friday-20/01/2006#003*12 15 33 44 50 + 2 6|Friday-13/01/2006#002*8 12 19 33 34 + 1 6|Friday-06/01/2006#001*2 6 9 14 26 + 4 5'
			
			2007:	(052 Drafts)
			'Friday-28/12/2007#052*20 21 22 31 45 + 7 9|Friday-21/12/2007#051*7 9 28 37 44 + 6 7|Friday-14/12/2007#050*8 25 30 36 44 + 3 4|Friday-07/12/2007#049*2 4 32 43 48 + 1 7|Friday-30/11/2007#048*12 19 20 30 38 + 7 9|Friday-23/11/2007#047*2 10 22 29 48 + 3 9|Friday-16/11/2007#046*9 18 23 33 37 + 1 8|Friday-09/11/2007#045*5 14 22 25 36 + 5 6|Friday-02/11/2007#044*3 16 18 19 40 + 1 2|Friday-26/10/2007#043*7 20 38 40 43 + 1 8|Friday-19/10/2007#042*7 18 34 35 40 + 7 8|Friday-12/10/2007#041*21 32 36 46 47 + 3 4|Friday-05/10/2007#040*11 20 27 35 44 + 2 5|Friday-28/09/2007#039*22 30 34 35 44 + 4 5|Friday-21/09/2007#038*1 17 32 35 37 + 1 8|Friday-14/09/2007#037*5 9 11 29 33 + 7 9|Friday-07/09/2007#036*2 3 33 34 42 + 3 5|Friday-31/08/2007#035*6 18 22 23 37 + 5 6|Friday-24/08/2007#034*1 3 16 42 48 + 2 3|Friday-17/08/2007#033*2 3 13 38 42 + 7 8|Friday-10/08/2007#032*23 40 42 43 49 + 2 6|Friday-03/08/2007#031*10 30 33 37 41 + 1 8|Friday-27/07/2007#030*1 4 21 29 41 + 7 8|Friday-20/07/2007#029*10 21 25 26 50 + 4 9|Friday-13/07/2007#028*9 13 15 31 48 + 3 6|Friday-06/07/2007#027*4 5 19 39 41 + 8 9|Friday-29/06/2007#026*8 12 28 33 45 + 1 3|Friday-22/06/2007#025*11 16 17 22 34 + 5 6|Friday-15/06/2007#024*5 7 14 21 40 + 3 8|Friday-08/06/2007#023*1 15 17 25 45 + 2 8|Friday-01/06/2007#022*6 22 37 41 42 + 6 9|Friday-25/05/2007#021*25 26 29 49 50 + 7 8|Friday-18/05/2007#020*26 34 37 39 49 + 2 6|Friday-11/05/2007#019*7 12 26 29 49 + 2 6|Friday-04/05/2007#018*6 17 35 41 45 + 1 5|Friday-27/04/2007#017*7 18 27 36 44 + 1 2|Friday-20/04/2007#016*23 26 32 41 45 + 3 7|Friday-13/04/2007#015*7 20 25 38 41 + 3 7|Friday-06/04/2007#014*15 23 29 41 48 + 3 6|Friday-30/03/2007#013*9 17 19 41 46 + 1 8|Friday-23/03/2007#012*5 13 17 40 43 + 1 3|Friday-16/03/2007#011*4 14 31 45 49 + 4 9|Friday-09/03/2007#010*2 3 25 43 48 + 6 9|Friday-02/03/2007#009*3 16 34 38 48 + 5 8|Friday-23/02/2007#008*2 15 18 20 22 + 2 5|Friday-16/02/2007#007*8 19 20 39 50 + 6 9|Friday-09/02/2007#006*14 16 30 36 46 + 2 8|Friday-02/02/2007#005*14 23 27 30 36 + 1 6|Friday-26/01/2007#004*11 15 23 30 38 + 4 9|Friday-19/01/2007#003*5 13 27 33 42 + 2 4|Friday-12/01/2007#002*8 11 14 19 25 + 3 5|Friday-05/01/2007#001*17 19 29 36 45 + 5 6'
			
			2008:	(052 Drafts)
			'Friday-26/12/2008#052*1 2 26 44 50 + 1 7|Friday-19/12/2008#051*28 29 40 46 50 + 5 7|Friday-12/12/2008#050*2 19 28 42 49 + 2 7|Friday-05/12/2008#049*4 8 21 35 45 + 5 8|Friday-28/11/2008#048*8 11 16 25 41 + 2 4|Friday-21/11/2008#047*9 14 21 49 50 + 3 8|Friday-14/11/2008#046*8 10 14 21 26 + 3 4|Friday-07/11/2008#045*1 9 12 17 18 + 3 4|Friday-31/10/2008#044*3 18 25 34 41 + 2 5|Friday-24/10/2008#043*7 15 16 17 45 + 6 9|Friday-17/10/2008#042*3 10 12 42 50 + 1 5|Friday-10/10/2008#041*4 15 22 31 41 + 1 6|Friday-03/10/2008#040*4 13 19 23 38 + 2 3|Friday-26/09/2008#039*14 29 31 33 37 + 1 2|Friday-19/09/2008#038*14 16 19 20 31 + 6 9|Friday-12/09/2008#037*19 23 33 37 50 + 3 7|Friday-05/09/2008#036*7 12 16 17 39 + 3 8|Friday-29/08/2008#035*2 20 25 37 39 + 5 8|Friday-22/08/2008#034*7 27 29 39 50 + 5 7|Friday-15/08/2008#033*11 17 18 26 31 + 5 6|Friday-08/08/2008#032*4 5 15 16 45 + 4 7|Friday-01/08/2008#031*1 22 25 40 50 + 1 8|Friday-25/07/2008#030*7 11 15 24 29 + 2 7|Friday-18/07/2008#029*10 14 16 29 44 + 5 6|Friday-11/07/2008#028*9 11 13 19 37 + 3 4|Friday-04/07/2008#027*7 19 22 27 48 + 5 7|Friday-27/06/2008#026*5 20 26 44 50 + 5 7|Friday-20/06/2008#025*8 11 36 37 45 + 3 5|Friday-13/06/2008#024*13 16 37 44 50 + 1 9|Friday-06/06/2008#023*7 19 21 40 50 + 2 9|Friday-30/05/2008#022*5 7 14 20 49 + 2 8|Friday-23/05/2008#021*5 9 19 21 38 + 1 7|Friday-16/05/2008#020*6 9 15 25 38 + 4 9|Friday-09/05/2008#019*8 9 40 42 45 + 6 7|Friday-02/05/2008#018*2 26 37 45 48 + 4 8|Friday-25/04/2008#017*4 19 26 27 30 + 3 8|Friday-18/04/2008#016*3 6 7 27 50 + 5 9|Friday-11/04/2008#015*6 25 30 45 50 + 5 7|Friday-04/04/2008#014*11 13 18 37 47 + 1 6|Friday-28/03/2008#013*5 9 17 29 39 + 3 6|Friday-21/03/2008#012*2 10 18 22 36 + 4 6|Friday-14/03/2008#011*13 21 25 35 48 + 4 8|Friday-07/03/2008#010*2 7 14 17 35 + 1 6|Friday-29/02/2008#009*12 37 40 47 49 + 2 9|Friday-22/02/2008#008*4 27 32 46 50 + 8 9|Friday-15/02/2008#007*12 27 29 45 46 + 4 7|Friday-08/02/2008#006*17 28 30 38 44 + 1 4|Friday-01/02/2008#005*22 30 45 47 49 + 4 9|Friday-25/01/2008#004*2 6 9 19 45 + 7 8|Friday-18/01/2008#003*14 16 23 40 46 + 4 8|Friday-11/01/2008#002*8 24 36 49 50 + 4 8|Friday-04/01/2008#001*10 12 24 25 41 + 3 5'
			
			2009:	(052 Drafts)
			'Friday-25/12/2009#052*4 5 14 17 34 + 3 5|Friday-18/12/2009#051*14 30 32 35 49 + 3 8|Friday-11/12/2009#050*20 41 43 44 46 + 2 9|Friday-04/12/2009#049*18 19 25 30 44 + 1 3|Friday-27/11/2009#048*5 8 13 15 33 + 8 9|Friday-20/11/2009#047*5 9 28 43 47 + 2 9|Friday-13/11/2009#046*13 15 25 26 32 + 3 4|Friday-06/11/2009#045*11 19 34 43 45 + 5 9|Friday-30/10/2009#044*9 33 35 38 40 + 2 6|Friday-23/10/2009#043*6 18 20 29 31 + 2 8|Friday-16/10/2009#042*12 23 30 31 47 + 3 4|Friday-09/10/2009#041*7 11 29 46 50 + 4 7|Friday-02/10/2009#040*22 23 24 29 44 + 1 5|Friday-25/09/2009#039*6 17 18 21 34 + 3 9|Friday-18/09/2009#038*6 16 30 38 41 + 2 4|Friday-11/09/2009#037*12 15 35 42 43 + 4 6|Friday-04/09/2009#036*6 9 20 38 39 + 3 9|Friday-28/08/2009#035*8 36 37 41 49 + 5 7|Friday-21/08/2009#034*4 7 16 31 42 + 3 5|Friday-14/08/2009#033*5 8 24 30 49 + 3 9|Friday-07/08/2009#032*10 20 22 24 31 + 2 7|Friday-31/07/2009#031*5 9 20 21 26 + 3 6|Friday-24/07/2009#030*14 15 25 35 47 + 5 9|Friday-17/07/2009#029*2 8 17 32 50 + 3 7|Friday-10/07/2009#028*6 16 20 42 46 + 1 6|Friday-03/07/2009#027*21 29 34 46 47 + 6 8|Friday-26/06/2009#026*6 11 21 30 39 + 2 8|Friday-19/06/2009#025*4 16 17 20 29 + 5 7|Friday-12/06/2009#024*6 14 16 34 50 + 4 6|Friday-05/06/2009#023*11 19 26 35 40 + 2 5|Friday-29/05/2009#022*2 5 30 37 47 + 3 6|Friday-22/05/2009#021*4 13 14 33 43 + 1 6|Friday-15/05/2009#020*8 18 19 20 42 + 5 9|Friday-08/05/2009#019*4 23 24 29 31 + 8 9|Friday-01/05/2009#018*5 19 31 38 47 + 3 5|Friday-24/04/2009#017*4 14 21 24 41 + 5 8|Friday-17/04/2009#016*4 7 21 44 47 + 1 5|Friday-10/04/2009#015*9 14 16 37 46 + 2 4|Friday-03/04/2009#014*2 20 24 32 46 + 1 9|Friday-27/03/2009#013*25 33 36 38 42 + 6 7|Friday-20/03/2009#012*12 16 23 31 35 + 4 6|Friday-13/03/2009#011*12 24 26 36 42 + 1 4|Friday-06/03/2009#010*13 17 19 25 35 + 5 6|Friday-27/02/2009#009*5 9 37 44 45 + 6 9|Friday-20/02/2009#008*9 12 13 14 48 + 1 2|Friday-13/02/2009#007*22 33 36 40 42 + 1 2|Friday-06/02/2009#006*10 20 30 36 40 + 3 5|Friday-30/01/2009#005*4 29 34 35 46 + 5 8|Friday-23/01/2009#004*32 33 36 40 49 + 2 8|Friday-16/01/2009#003*3 17 22 49 50 + 3 6|Friday-09/01/2009#002*7 15 22 28 48 + 1 4|Friday-02/01/2009#001*29 30 36 37 48 + 1 6'
			
			2010:	(053 Drafts)
			'Friday-31/12/2010#053*2 24 34 38 43 + 1 7|Friday-24/12/2010#052*19 36 38 42 46 + 2 8|Friday-17/12/2010#051*3 20 29 35 42 + 3 8|Friday-10/12/2010#050*2 3 10 33 46 + 7 8|Friday-03/12/2010#049*8 19 28 32 46 + 4 7|Friday-26/11/2010#048*9 28 36 41 49 + 5 7|Friday-19/11/2010#047*12 15 32 36 45 + 7 9|Friday-12/11/2010#046*7 19 23 29 47 + 1 6|Friday-05/11/2010#045*21 23 33 40 50 + 4 5|Friday-29/10/2010#044*16 20 22 32 42 + 8 9|Friday-22/10/2010#043*4 5 9 11 39 + 3 5|Friday-15/10/2010#042*2 31 36 38 43 + 3 7|Friday-08/10/2010#041*9 30 35 39 46 + 6 8|Friday-01/10/2010#040*1 4 6 27 48 + 1 6|Friday-24/09/2010#039*1 4 16 40 48 + 1 9|Friday-17/09/2010#038*17 27 29 38 50 + 1 3|Friday-10/09/2010#037*17 21 35 41 45 + 1 5|Friday-03/09/2010#036*13 24 26 47 49 + 4 8|Friday-27/08/2010#035*1 6 13 30 49 + 1 9|Friday-20/08/2010#034*5 27 31 40 42 + 1 6|Friday-13/08/2010#033*4 9 15 21 47 + 2 7|Friday-06/08/2010#032*13 25 28 29 42 + 4 5|Friday-30/07/2010#031*3 4 11 28 39 + 2 8|Friday-23/07/2010#030*4 13 35 37 46 + 3 9|Friday-16/07/2010#029*38 39 45 46 49 + 7 8|Friday-09/07/2010#028*9 24 37 39 49 + 3 9|Friday-02/07/2010#027*12 13 36 41 46 + 1 8|Friday-25/06/2010#026*1 8 18 28 31 + 8 9|Friday-18/06/2010#025*2 29 31 32 38 + 1 4|Friday-11/06/2010#024*2 22 24 36 44 + 1 2|Friday-04/06/2010#023*4 17 34 40 42 + 4 9|Friday-28/05/2010#022*4 9 31 32 33 + 3 7|Friday-21/05/2010#021*7 19 30 38 50 + 4 7|Friday-14/05/2010#020*1 17 31 43 47 + 2 3|Friday-07/05/2010#019*3 6 15 21 32 + 7 9|Friday-30/04/2010#018*6 22 24 25 36 + 3 8|Friday-23/04/2010#017*3 7 8 43 46 + 6 8|Friday-16/04/2010#016*9 11 17 26 40 + 3 9|Friday-09/04/2010#015*7 21 23 24 44 + 3 4|Friday-02/04/2010#014*12 18 24 26 45 + 4 5|Friday-26/03/2010#013*8 16 18 37 43 + 2 6|Friday-19/03/2010#012*10 28 30 38 39 + 2 7|Friday-12/03/2010#011*1 26 33 36 46 + 6 7|Friday-05/03/2010#010*12 18 19 43 49 + 3 9|Friday-26/02/2010#009*7 11 18 29 42 + 6 7|Friday-19/02/2010#008*12 31 37 38 43 + 2 3|Friday-12/02/2010#007*1 5 18 38 45 + 4 6|Friday-05/02/2010#006*34 35 38 39 46 + 3 4|Friday-29/01/2010#005*9 17 30 39 43 + 5 7|Friday-22/01/2010#004*4 22 27 36 44 + 7 9|Friday-15/01/2010#003*11 26 29 49 50 + 4 7|Friday-08/01/2010#002*4 5 14 44 46 + 8 9|Friday-01/01/2010#001*9 22 24 27 36 + 5 7'
			
			2011:	(086 Drafts)
			'Friday-30/12/2011#086*16 36 43 44 50 + 7 8|Tuesday-27/12/2011#085*19 21 25 26 44 + 3 7|Friday-23/12/2011#084*7 21 22 24 28 + 1 11|Tuesday-20/12/2011#083*1 9 12 14 48 + 1 7|Friday-16/12/2011#082*2 5 10 23 31 + 2 5|Tuesday-13/12/2011#081*7 12 18 33 37 + 1 11|Friday-09/12/2011#080*12 21 29 44 47 + 1 2|Tuesday-06/12/2011#079*19 20 21 34 38 + 3 9|Friday-02/12/2011#078*7 27 30 40 43 + 8 9|Tuesday-29/11/2011#077*11 25 41 45 50 + 2 7|Friday-25/11/2011#076*14 19 26 28 34 + 5 8|Tuesday-22/11/2011#075*16 18 24 38 40 + 2 4|Friday-18/11/2011#074*4 12 24 39 44 + 2 4|Tuesday-15/11/2011#073*6 17 22 45 47 + 3 11|Friday-11/11/2011#072*1 4 18 23 30 + 3 7|Tuesday-08/11/2011#071*1 4 15 29 40 + 1 5|Friday-04/11/2011#070*11 14 41 43 50 + 2 9|Tuesday-01/11/2011#069*14 20 23 45 46 + 1 11|Friday-28/10/2011#068*16 17 20 39 50 + 4 8|Tuesday-25/10/2011#067*12 22 27 28 39 + 4 10|Friday-21/10/2011#066*2 19 33 37 46 + 5 8|Tuesday-18/10/2011#065*18 23 37 46 48 + 2 10|Friday-14/10/2011#064*12 23 29 32 47 + 3 5|Tuesday-11/10/2011#063*1 4 12 16 48 + 9 10|Friday-07/10/2011#062*18 26 34 38 42 + 5 8|Tuesday-04/10/2011#061*14 16 23 38 45 + 8 11|Friday-30/09/2011#060*5 15 28 31 44 + 1 6|Tuesday-27/09/2011#059*18 27 28 35 40 + 3 5|Friday-23/09/2011#058*6 14 33 34 48 + 2 6|Tuesday-20/09/2011#057*9 19 25 36 38 + 7 11|Friday-16/09/2011#056*2 8 17 39 42 + 3 10|Tuesday-13/09/2011#055*9 28 30 32 49 + 9 10|Friday-09/09/2011#054*5 21 28 31 34 + 1 2|Tuesday-06/09/2011#053*35 42 47 48 50 + 8 9|Friday-02/09/2011#052*12 26 37 38 44 + 4 7|Tuesday-30/08/2011#051*2 8 10 19 46 + 5 9|Friday-26/08/2011#050*12 22 25 33 45 + 5 7|Tuesday-23/08/2011#049*4 6 14 42 50 + 2 4|Friday-19/08/2011#048*6 14 16 28 31 + 2 11|Tuesday-16/08/2011#047*1 13 17 18 45 + 3 8|Friday-12/08/2011#046*7 10 20 27 37 + 4 7|Tuesday-09/08/2011#045*7 23 24 34 36 + 8 11|Friday-05/08/2011#044*13 14 18 32 34 + 1 10|Tuesday-02/08/2011#043*5 8 14 24 33 + 3 8|Friday-29/07/2011#042*12 19 27 37 38 + 5 10|Tuesday-26/07/2011#041*1 5 22 25 48 + 3 11|Friday-22/07/2011#040*4 15 23 49 50 + 2 6|Tuesday-19/07/2011#039*3 16 25 26 35 + 5 9|Friday-15/07/2011#038*6 26 33 34 39 + 3 4|Tuesday-12/07/2011#037*17 19 38 42 45 + 9 10|Friday-08/07/2011#036*12 13 23 40 49 + 7 10|Tuesday-05/07/2011#035*11 28 29 47 49 + 1 5|Friday-01/07/2011#034*8 11 23 31 46 + 8 9|Tuesday-28/06/2011#033*15 16 30 44 50 + 2 3|Friday-24/06/2011#032*5 16 20 30 41 + 6 11|Tuesday-21/06/2011#031*17 20 35 49 50 + 3 4|Friday-17/06/2011#030*11 16 21 22 44 + 3 8|Tuesday-14/06/2011#029*5 12 19 41 48 + 8 10|Friday-10/06/2011#028*3 19 20 37 48 + 8 11|Tuesday-07/06/2011#027*6 25 36 38 40 + 4 10|Friday-03/06/2011#026*4 39 40 49 50 + 2 5|Tuesday-31/05/2011#025*1 9 10 22 50 + 5 11|Friday-27/05/2011#024*9 17 25 28 49 + 8 9|Tuesday-24/05/2011#023*16 23 24 26 29 + 2 9|Friday-20/05/2011#022*10 14 20 25 42 + 8 11|Tuesday-17/05/2011#021*20 21 37 45 46 + 2 3|Friday-13/05/2011#020*9 11 17 36 47 + 1 2|Tuesday-10/05/2011#019*3 10 15 28 45 + 5 7|Friday-06/05/2011#018*11 16 20 22 28 + 4 9|Friday-29/04/2011#017*15 25 38 40 41 + 1 2|Friday-22/04/2011#016*11 22 36 45 48 + 1 4|Friday-15/04/2011#015*4 6 21 39 41 + 2 6|Friday-08/04/2011#014*21 23 38 47 50 + 2 6|Friday-01/04/2011#013*4 17 21 22 33 + 4 8|Friday-25/03/2011#012*6 12 21 27 33 + 3 7|Friday-18/03/2011#011*1 13 20 26 50 + 6 7|Friday-11/03/2011#010*17 19 24 37 46 + 2 7|Friday-04/03/2011#009*11 25 27 28 41 + 5 8|Friday-25/02/2011#008*12 13 42 45 48 + 3 9|Friday-18/02/2011#007*2 3 15 45 49 + 5 9|Friday-11/02/2011#006*12 14 15 19 23 + 7 8|Friday-04/02/2011#005*2 11 24 35 47 + 5 9|Friday-28/01/2011#004*13 23 24 41 42 + 1 5|Friday-21/01/2011#003*3 11 13 18 21 + 4 5|Friday-14/01/2011#002*2 14 24 39 44 + 6 7|Friday-07/01/2011#001*1 22 32 48 50 + 6 7'
			
			2012:	(104 Drafts)
			'Friday-28/12/2012#104*17 24 26 27 49 + 3 5|Tuesday-25/12/2012#103*14 18 20 23 32 + 3 10|Friday-21/12/2012#102*3 5 22 40 42 + 3 10|Tuesday-18/12/2012#101*14 18 20 35 44 + 2 5|Friday-14/12/2012#100*10 11 29 40 43 + 3 11|Tuesday-11/12/2012#099*1 4 9 43 50 + 6 8|Friday-07/12/2012#098*10 16 18 31 42 + 2 5|Tuesday-04/12/2012#097*5 10 28 29 44 + 2 4|Friday-30/11/2012#096*10 18 23 24 40 + 3 4|Tuesday-27/11/2012#095*6 10 23 44 49 + 1 7|Friday-23/11/2012#094*1 9 11 20 40 + 1 5|Tuesday-20/11/2012#093*28 30 42 45 49 + 5 10|Friday-16/11/2012#092*10 15 19 23 41 + 2 9|Tuesday-13/11/2012#091*11 16 21 24 29 + 2 6|Friday-09/11/2012#090*14 21 22 28 47 + 4 5|Tuesday-06/11/2012#089*7 20 25 35 41 + 1 9|Friday-02/11/2012#088*3 6 10 11 44 + 3 4|Tuesday-30/10/2012#087*23 24 25 31 44 + 2 3|Friday-26/10/2012#086*5 6 9 27 38 + 5 11|Tuesday-23/10/2012#085*1 28 35 38 50 + 2 10|Friday-19/10/2012#084*16 29 37 40 44 + 8 10|Tuesday-16/10/2012#083*10 32 40 41 49 + 2 8|Friday-12/10/2012#082*6 7 17 35 43 + 2 8|Tuesday-09/10/2012#081*2 8 10 23 25 + 8 9|Friday-05/10/2012#080*9 16 18 19 21 + 2 3|Tuesday-02/10/2012#079*4 16 21 36 42 + 7 8|Friday-28/09/2012#078*20 23 26 30 33 + 6 9|Tuesday-25/09/2012#077*7 25 27 48 49 + 1 4|Friday-21/09/2012#076*4 19 34 41 43 + 7 11|Tuesday-18/09/2012#075*6 7 38 39 44 + 7 9|Friday-14/09/2012#074*3 10 23 27 44 + 7 9|Tuesday-11/09/2012#073*6 15 22 37 44 + 2 4|Friday-07/09/2012#072*13 15 30 35 42 + 4 6|Tuesday-04/09/2012#071*11 17 18 39 44 + 5 10|Friday-31/08/2012#070*16 28 31 33 48 + 7 11|Tuesday-28/08/2012#069*1 18 25 26 44 + 4 5|Friday-24/08/2012#068*5 6 12 19 37 + 3 7|Tuesday-21/08/2012#067*4 5 17 38 48 + 3 4|Friday-17/08/2012#066*19 25 28 33 44 + 2 8|Tuesday-14/08/2012#065*1 16 38 42 45 + 9 10|Friday-10/08/2012#064*11 17 21 48 50 + 9 10|Tuesday-07/08/2012#063*20 27 34 46 50 + 2 3|Friday-03/08/2012#062*24 34 35 42 46 + 1 5|Tuesday-31/07/2012#061*4 29 35 36 39 + 8 9|Friday-27/07/2012#060*14 15 21 23 48 + 2 10|Tuesday-24/07/2012#059*4 16 18 25 44 + 1 11|Friday-20/07/2012#058*10 19 23 45 49 + 9 10|Tuesday-17/07/2012#057*2 7 24 43 46 + 8 10|Friday-13/07/2012#056*8 18 25 35 46 + 4 9|Tuesday-10/07/2012#055*1 3 16 24 37 + 1 8|Friday-06/07/2012#054*31 32 38 40 42 + 1 3|Tuesday-03/07/2012#053*2 7 22 27 40 + 3 6|Friday-29/06/2012#052*14 17 28 29 39 + 1 11|Tuesday-26/06/2012#051*1 11 20 22 35 + 8 10|Friday-22/06/2012#050*14 18 19 43 49 + 3 7|Tuesday-19/06/2012#049*7 17 20 35 50 + 5 11|Friday-15/06/2012#048*10 22 27 38 48 + 3 7|Tuesday-12/06/2012#047*8 15 26 30 48 + 9 10|Friday-08/06/2012#046*5 11 22 34 40 + 9 11|Tuesday-05/06/2012#045*13 34 37 47 49 + 8 9|Friday-01/06/2012#044*2 4 14 26 36 + 9 10|Tuesday-29/05/2012#043*8 15 17 25 28 + 3 11|Friday-25/05/2012#042*12 22 35 46 49 + 2 8|Tuesday-22/05/2012#041*16 31 32 37 41 + 1 7|Friday-18/05/2012#040*13 29 43 47 50 + 9 11|Tuesday-15/05/2012#039*2 11 13 26 50 + 2 5|Friday-11/05/2012#038*1 13 17 38 44 + 2 11|Tuesday-08/05/2012#037*3 21 34 38 48 + 5 8|Friday-04/05/2012#036*3 26 39 40 41 + 1 2|Tuesday-01/05/2012#035*4 5 15 19 41 + 9 11|Friday-27/04/2012#034*20 27 30 36 43 + 1 6|Tuesday-24/04/2012#033*8 9 24 43 48 + 3 5|Friday-20/04/2012#032*3 6 29 32 41 + 10 11|Tuesday-17/04/2012#031*10 28 33 48 49 + 1 10|Friday-13/04/2012#030*8 13 26 39 43 + 3 5|Tuesday-10/04/2012#029*22 25 27 36 37 + 5 9|Friday-06/04/2012#028*11 20 30 35 45 + 2 3|Tuesday-03/04/2012#027*1 8 18 25 30 + 9 10|Friday-30/03/2012#026*4 17 23 36 46 + 6 10|Tuesday-27/03/2012#025*24 27 29 34 36 + 7 8|Friday-23/03/2012#024*9 15 23 31 50 + 8 11|Tuesday-20/03/2012#023*15 16 28 30 46 + 3 4|Friday-16/03/2012#022*3 4 12 23 50 + 4 7|Tuesday-13/03/2012#021*1 10 25 43 47 + 8 9|Friday-09/03/2012#020*3 32 36 39 47 + 6 9|Tuesday-06/03/2012#019*23 24 27 37 47 + 2 6|Friday-02/03/2012#018*5 6 11 30 44 + 2 6|Tuesday-28/02/2012#017*1 10 17 33 48 + 2 3|Friday-24/02/2012#016*3 7 12 26 34 + 8 10|Tuesday-21/02/2012#015*11 14 24 25 29 + 7 11|Friday-17/02/2012#014*4 11 28 38 47 + 10 11|Tuesday-14/02/2012#013*14 27 36 42 46 + 8 11|Friday-10/02/2012#012*3 8 14 31 41 + 7 11|Tuesday-07/02/2012#011*3 15 17 28 33 + 2 4|Friday-03/02/2012#010*16 19 20 25 28 + 1 10|Tuesday-31/01/2012#009*9 34 38 43 45 + 2 4|Friday-27/01/2012#008*10 13 19 39 44 + 2 6|Tuesday-24/01/2012#007*1 2 6 20 36 + 8 11|Friday-20/01/2012#006*2 10 22 27 28 + 6 8|Tuesday-17/01/2012#005*12 22 30 31 44 + 5 6|Friday-13/01/2012#004*13 14 21 27 39 + 6 8|Tuesday-10/01/2012#003*4 9 10 30 40 + 2 9|Friday-06/01/2012#002*1 6 10 12 31 + 2 7|Tuesday-03/01/2012#001*3 30 42 45 49 + 5 10'
			
			2013:	(105 Drafts)
			'Tuesday-31/12/2013#105*13 20 24 29 45 + 3 7|Friday-27/12/2013#104*1 6 13 22 28 + 5 10|Tuesday-24/12/2013#103*5 19 31 43 50 + 2 6|Friday-20/12/2013#102*12 13 17 22 43 + 3 10|Tuesday-17/12/2013#101*6 8 27 37 41 + 7 10|Friday-13/12/2013#100*1 22 23 24 31 + 6 11|Tuesday-10/12/2013#099*6 24 35 49 50 + 1 7|Friday-06/12/2013#098*1 2 18 31 36 + 7 10|Tuesday-03/12/2013#097*6 13 15 29 32 + 2 9|Friday-29/11/2013#096*2 7 10 23 43 + 4 7|Tuesday-26/11/2013#095*19 23 27 42 44 + 3 5|Friday-22/11/2013#094*13 25 26 40 50 + 8 9|Tuesday-19/11/2013#093*14 15 19 36 45 + 1 10|Friday-15/11/2013#092*3 13 15 29 42 + 1 4|Tuesday-12/11/2013#091*14 29 37 40 48 + 2 11|Friday-08/11/2013#090*20 28 35 42 43 + 8 10|Tuesday-05/11/2013#089*6 12 13 35 38 + 2 3|Friday-01/11/2013#088*7 19 29 30 33 + 3 8|Tuesday-29/10/2013#087*9 10 30 32 37 + 2 6|Friday-25/10/2013#086*2 3 10 31 38 + 6 10|Tuesday-22/10/2013#085*29 33 39 41 44 + 9 11|Friday-18/10/2013#084*5 25 36 46 47 + 2 6|Tuesday-15/10/2013#083*18 27 39 43 47 + 4 7|Friday-11/10/2013#082*6 12 17 23 43 + 5 9|Tuesday-08/10/2013#081*23 24 26 33 42 + 3 5|Friday-04/10/2013#080*6 20 24 35 50 + 5 10|Tuesday-01/10/2013#079*19 23 25 44 48 + 8 9|Friday-27/09/2013#078*11 15 38 41 43 + 2 6|Tuesday-24/09/2013#077*10 20 26 28 43 + 9 11|Friday-20/09/2013#076*5 11 35 38 45 + 2 3|Tuesday-17/09/2013#075*13 17 21 42 44 + 9 11|Friday-13/09/2013#074*4 6 14 27 33 + 5 10|Tuesday-10/09/2013#073*7 11 14 28 30 + 2 10|Friday-06/09/2013#072*11 23 25 32 37 + 4 7|Tuesday-03/09/2013#071*5 9 16 18 42 + 7 9|Friday-30/08/2013#070*2 17 25 36 45 + 5 9|Tuesday-27/08/2013#069*7 30 38 40 43 + 2 6|Friday-23/08/2013#068*1 6 26 30 37 + 5 8|Tuesday-20/08/2013#067*5 11 42 49 50 + 8 11|Friday-16/08/2013#066*20 24 27 37 39 + 5 10|Tuesday-13/08/2013#065*5 17 20 47 50 + 1 4|Friday-09/08/2013#064*4 7 9 23 24 + 8 9|Tuesday-06/08/2013#063*16 17 31 47 49 + 3 11|Friday-02/08/2013#062*21 36 37 42 48 + 4 7|Tuesday-30/07/2013#061*3 4 11 14 43 + 1 6|Friday-26/07/2013#060*12 23 29 38 49 + 3 4|Tuesday-23/07/2013#059*14 15 16 19 44 + 4 5|Friday-19/07/2013#058*13 16 24 26 35 + 2 5|Tuesday-16/07/2013#057*19 23 34 47 50 + 4 6|Friday-12/07/2013#056*18 26 32 33 42 + 2 3|Tuesday-09/07/2013#055*16 18 31 38 49 + 4 10|Friday-05/07/2013#054*4 12 15 28 33 + 1 10|Tuesday-02/07/2013#053*11 13 14 28 30 + 4 5|Friday-28/06/2013#052*1 15 28 35 47 + 1 7|Tuesday-25/06/2013#051*4 5 13 27 35 + 1 2|Friday-21/06/2013#050*10 11 30 36 45 + 1 2|Tuesday-18/06/2013#049*17 24 33 41 44 + 1 11|Friday-14/06/2013#048*10 25 41 47 48 + 6 10|Tuesday-11/06/2013#047*5 7 9 25 41 + 1 5|Friday-07/06/2013#046*7 14 26 45 50 + 2 7|Tuesday-04/06/2013#045*31 33 34 37 40 + 1 6|Friday-31/05/2013#044*27 28 29 34 43 + 5 10|Tuesday-28/05/2013#043*8 13 26 34 38 + 3 11|Friday-24/05/2013#042*7 17 22 27 40 + 2 3|Tuesday-21/05/2013#041*7 8 19 28 29 + 5 9|Friday-17/05/2013#040*6 20 24 25 50 + 9 10|Tuesday-14/05/2013#039*7 8 24 27 36 + 5 11|Friday-10/05/2013#038*1 32 35 45 48 + 4 11|Tuesday-07/05/2013#037*13 27 28 42 43 + 4 6|Friday-03/05/2013#036*3 5 34 40 49 + 2 3|Tuesday-30/04/2013#035*13 36 40 43 50 + 5 9|Friday-26/04/2013#034*11 16 24 38 40 + 2 5|Tuesday-23/04/2013#033*1 4 7 10 50 + 4 11|Friday-19/04/2013#032*1 8 42 46 48 + 4 7|Tuesday-16/04/2013#031*1 11 22 33 50 + 4 6|Friday-12/04/2013#030*5 10 15 28 45 + 3 9|Tuesday-09/04/2013#029*15 35 38 44 48 + 5 10|Friday-05/04/2013#028*1 11 17 32 39 + 2 7|Tuesday-02/04/2013#027*12 17 25 29 41 + 1 4|Friday-29/03/2013#026*13 30 43 44 46 + 5 9|Tuesday-26/03/2013#025*4 26 30 42 44 + 6 11|Friday-22/03/2013#024*12 27 32 34 49 + 8 9|Tuesday-19/03/2013#023*19 32 35 37 44 + 1 9|Friday-15/03/2013#022*4 14 21 24 39 + 3 10|Tuesday-12/03/2013#021*2 4 10 22 50 + 5 8|Friday-08/03/2013#020*3 20 23 28 42 + 8 11|Tuesday-05/03/2013#019*8 19 31 33 39 + 2 7|Friday-01/03/2013#018*1 11 29 36 42 + 4 5|Tuesday-26/02/2013#017*3 12 13 17 30 + 2 6|Friday-22/02/2013#016*15 16 28 36 37 + 2 11|Tuesday-19/02/2013#015*12 15 28 30 44 + 8 9|Friday-15/02/2013#014*2 4 22 28 42 + 4 9|Tuesday-12/02/2013#013*5 11 16 25 28 + 7 9|Friday-08/02/2013#012*9 11 14 34 44 + 10 11|Tuesday-05/02/2013#011*6 25 31 40 45 + 6 7|Friday-01/02/2013#010*5 21 34 37 38 + 1 6|Tuesday-29/01/2013#009*9 16 26 36 39 + 2 6|Friday-25/01/2013#008*3 10 18 31 37 + 2 4|Tuesday-22/01/2013#007*1 10 44 45 48 + 1 4|Friday-18/01/2013#006*4 26 27 30 39 + 3 10|Tuesday-15/01/2013#005*22 38 40 42 47 + 1 11|Friday-11/01/2013#004*4 22 29 37 41 + 4 7|Tuesday-08/01/2013#003*2 20 22 26 47 + 5 9|Friday-04/01/2013#002*4 10 22 27 41 + 8 10|Tuesday-01/01/2013#001*2 7 8 36 49 + 1 11'
			
			2014:	(104 Drafts)
			'Tuesday-30/12/2014#104*6 18 39 44 50 + 8 11|Friday-26/12/2014#103*17 26 27 45 49 + 2 3|Tuesday-23/12/2014#102*8 9 19 25 49 + 2 10|Friday-19/12/2014#101*23 29 31 39 44 + 5 8|Tuesday-16/12/2014#100*3 7 12 13 25 + 5 8|Friday-12/12/2014#099*2 15 28 31 37 + 4 6|Tuesday-09/12/2014#098*1 3 31 42 46 + 4 11|Friday-05/12/2014#097*5 8 37 47 48 + 2 3|Tuesday-02/12/2014#096*3 15 25 44 49 + 1 9|Friday-28/11/2014#095*6 10 15 23 41 + 4 10|Tuesday-25/11/2014#094*3 7 25 32 36 + 1 6|Friday-21/11/2014#093*4 7 28 32 37 + 5 10|Tuesday-18/11/2014#092*2 3 17 36 38 + 4 11|Friday-14/11/2014#091*17 32 36 38 48 + 5 8|Tuesday-11/11/2014#090*2 14 21 36 46 + 7 11|Friday-07/11/2014#089*13 25 32 38 46 + 1 10|Tuesday-04/11/2014#088*1 6 13 17 26 + 3 5|Friday-31/10/2014#087*10 13 20 33 41 + 3 9|Tuesday-28/10/2014#086*10 15 17 40 45 + 1 2|Friday-24/10/2014#085*3 9 20 30 42 + 1 6|Tuesday-21/10/2014#084*20 21 27 33 40 + 3 10|Friday-17/10/2014#083*1 13 40 48 49 + 8 10|Tuesday-14/10/2014#082*4 5 15 23 32 + 3 7|Friday-10/10/2014#081*6 29 42 45 47 + 9 10|Tuesday-07/10/2014#080*9 21 28 30 38 + 1 8|Friday-03/10/2014#079*4 13 23 48 50 + 5 10|Tuesday-30/09/2014#078*3 13 15 33 42 + 5 7|Friday-26/09/2014#077*13 27 35 46 47 + 1 2|Tuesday-23/09/2014#076*12 13 14 29 35 + 1 7|Friday-19/09/2014#075*6 8 34 38 48 + 3 9|Tuesday-16/09/2014#074*4 29 30 35 50 + 2 4|Friday-12/09/2014#073*9 13 26 31 33 + 7 11|Tuesday-09/09/2014#072*8 15 19 24 35 + 8 10|Friday-05/09/2014#071*1 18 23 46 50 + 3 9|Tuesday-02/09/2014#070*5 25 31 39 45 + 1 8|Friday-29/08/2014#069*2 9 26 32 38 + 3 6|Tuesday-26/08/2014#068*10 22 36 45 48 + 4 11|Friday-22/08/2014#067*4 17 29 35 49 + 1 2|Tuesday-19/08/2014#066*4 7 11 34 47 + 7 8|Friday-15/08/2014#065*4 5 21 23 30 + 8 10|Tuesday-12/08/2014#064*7 16 19 22 33 + 2 5|Friday-08/08/2014#063*21 29 35 43 46 + 1 9|Tuesday-05/08/2014#062*5 7 19 21 42 + 5 11|Friday-01/08/2014#061*24 44 46 48 50 + 5 10|Tuesday-29/07/2014#060*10 23 35 40 43 + 3 9|Friday-25/07/2014#059*9 10 12 24 43 + 5 9|Tuesday-22/07/2014#058*1 24 43 45 50 + 5 8|Friday-18/07/2014#057*1 11 29 41 43 + 3 11|Tuesday-15/07/2014#056*15 18 20 27 34 + 1 3|Friday-11/07/2014#055*5 22 35 38 49 + 4 7|Tuesday-08/07/2014#054*8 18 22 24 27 + 4 11|Friday-04/07/2014#053*4 18 39 43 47 + 2 6|Tuesday-01/07/2014#052*18 22 25 27 39 + 5 10|Friday-27/06/2014#051*31 33 34 39 45 + 2 10|Tuesday-24/06/2014#050*1 7 20 21 48 + 4 7|Friday-20/06/2014#049*5 15 25 38 49 + 1 2|Tuesday-17/06/2014#048*11 13 37 40 48 + 8 9|Friday-13/06/2014#047*16 18 22 28 46 + 9 11|Tuesday-10/06/2014#046*12 18 21 32 33 + 1 11|Friday-06/06/2014#045*7 25 34 40 49 + 9 11|Tuesday-03/06/2014#044*2 15 32 39 44 + 5 10|Friday-30/05/2014#043*5 24 27 41 45 + 6 7|Tuesday-27/05/2014#042*7 13 16 25 26 + 1 6|Friday-23/05/2014#041*3 8 31 34 47 + 9 11|Tuesday-20/05/2014#040*5 33 36 38 47 + 4 9|Friday-16/05/2014#039*23 26 29 37 40 + 3 4|Tuesday-13/05/2014#038*4 13 30 34 47 + 2 6|Friday-09/05/2014#037*3 21 26 28 45 + 7 10|Tuesday-06/05/2014#036*5 19 24 31 37 + 1 9|Friday-02/05/2014#035*4 30 31 38 42 + 2 11|Tuesday-29/04/2014#034*18 23 26 35 44 + 3 11|Friday-25/04/2014#033*13 21 24 44 49 + 1 9|Tuesday-22/04/2014#032*13 15 20 24 46 + 1 8|Friday-18/04/2014#031*21 24 31 39 47 + 3 7|Tuesday-15/04/2014#030*3 14 26 47 50 + 7 11|Friday-11/04/2014#029*8 12 19 30 33 + 4 11|Tuesday-08/04/2014#028*11 18 29 42 49 + 4 11|Friday-04/04/2014#027*6 10 28 45 50 + 10 11|Tuesday-01/04/2014#026*16 18 26 38 44 + 8 10|Friday-28/03/2014#025*3 4 19 28 43 + 3 7|Tuesday-25/03/2014#024*7 20 26 28 50 + 2 8|Friday-21/03/2014#023*7 30 37 39 42 + 5 7|Tuesday-18/03/2014#022*8 27 34 36 39 + 5 10|Friday-14/03/2014#021*6 24 25 27 30 + 5 9|Tuesday-11/03/2014#020*1 4 23 33 44 + 7 8|Friday-07/03/2014#019*5 10 38 40 41 + 1 8|Tuesday-04/03/2014#018*3 5 22 27 44 + 1 6|Friday-28/02/2014#017*12 32 38 43 44 + 2 7|Tuesday-25/02/2014#016*21 25 28 35 42 + 4 6|Friday-21/02/2014#015*13 17 28 30 32 + 5 7|Tuesday-18/02/2014#014*23 26 36 37 49 + 6 7|Friday-14/02/2014#013*2 4 6 19 39 + 2 7|Tuesday-11/02/2014#012*8 17 25 41 47 + 1 2|Friday-07/02/2014#011*3 17 19 46 47 + 9 10|Tuesday-04/02/2014#010*1 21 33 37 38 + 4 8|Friday-31/01/2014#009*8 10 15 16 31 + 8 9|Tuesday-28/01/2014#008*18 20 23 42 48 + 2 9|Friday-24/01/2014#007*5 19 34 35 41 + 1 5|Tuesday-21/01/2014#006*4 12 35 42 48 + 5 8|Friday-17/01/2014#005*19 26 32 33 42 + 4 10|Tuesday-14/01/2014#004*18 20 25 26 37 + 10 11|Friday-10/01/2014#003*1 2 11 27 29 + 1 10|Tuesday-07/01/2014#002*2 20 27 33 45 + 6 10|Friday-03/01/2014#001*3 27 31 38 44 + 3 8'
			
			2015:	(104 Drafts)
			'Tuesday-29/12/2015#104*5 20 31 32 36 + 6 7|Friday-25/12/2015#103*3 10 25 27 40 + 3 9|Tuesday-22/12/2015#102*18 19 20 40 41 + 7 10|Friday-18/12/2015#101*6 22 26 29 48 + 5 6|Tuesday-15/12/2015#100*8 11 23 27 35 + 4 11|Friday-11/12/2015#099*3 5 21 40 43 + 6 11|Tuesday-08/12/2015#098*12 17 29 38 48 + 9 11|Friday-04/12/2015#097*8 17 18 27 39 + 1 7|Tuesday-01/12/2015#096*2 15 25 35 45 + 8 10|Friday-27/11/2015#095*16 29 30 37 50 + 6 8|Tuesday-24/11/2015#094*9 14 16 17 26 + 10 11|Friday-20/11/2015#093*4 30 34 46 49 + 7 8|Tuesday-17/11/2015#092*6 7 23 37 38 + 10 11|Friday-13/11/2015#091*10 17 18 33 40 + 2 8|Tuesday-10/11/2015#090*6 13 18 39 43 + 2 8|Friday-06/11/2015#089*3 17 26 38 40 + 4 10|Tuesday-03/11/2015#088*8 27 39 46 49 + 2 6|Friday-30/10/2015#087*8 13 17 21 34 + 6 7|Tuesday-27/10/2015#086*11 12 20 25 36 + 6 9|Friday-23/10/2015#085*7 25 30 32 39 + 2 8|Tuesday-20/10/2015#084*17 19 21 30 45 + 8 10|Friday-16/10/2015#083*7 28 29 43 48 + 3 10|Tuesday-13/10/2015#082*12 15 26 29 47 + 3 11|Friday-09/10/2015#081*1 40 42 43 47 + 9 11|Tuesday-06/10/2015#080*11 20 22 29 32 + 1 8|Friday-02/10/2015#079*7 18 21 32 35 + 2 11|Tuesday-29/09/2015#078*11 14 26 29 49 + 3 9|Friday-25/09/2015#077*13 14 23 30 37 + 2 8|Tuesday-22/09/2015#076*14 23 26 27 29 + 7 10|Friday-18/09/2015#075*7 29 33 34 39 + 7 8|Tuesday-15/09/2015#074*8 15 17 44 49 + 5 8|Friday-11/09/2015#073*10 18 19 29 50 + 1 9|Tuesday-08/09/2015#072*14 16 39 40 42 + 1 4|Friday-04/09/2015#071*8 9 27 45 50 + 8 10|Tuesday-01/09/2015#070*6 19 21 27 45 + 1 8|Friday-28/08/2015#069*11 29 30 31 34 + 4 7|Tuesday-25/08/2015#068*27 31 33 42 50 + 2 5|Friday-21/08/2015#067*4 16 18 43 47 + 6 10|Tuesday-18/08/2015#066*7 10 11 12 19 + 2 9|Friday-14/08/2015#065*4 7 39 44 45 + 3 5|Tuesday-11/08/2015#064*2 3 8 15 16 + 4 11|Friday-07/08/2015#063*1 5 21 39 44 + 4 11|Tuesday-04/08/2015#062*10 15 39 45 50 + 9 10|Friday-31/07/2015#061*16 21 34 40 50 + 6 9|Tuesday-28/07/2015#060*23 32 36 43 49 + 7 8|Friday-24/07/2015#059*2 9 21 35 46 + 2 11|Tuesday-21/07/2015#058*14 20 27 29 44 + 7 10|Friday-17/07/2015#057*1 21 22 43 48 + 7 9|Tuesday-14/07/2015#056*6 18 19 34 36 + 1 8|Friday-10/07/2015#055*5 8 15 35 41 + 4 5|Tuesday-07/07/2015#054*6 7 18 33 41 + 3 10|Friday-03/07/2015#053*11 12 15 18 44 + 3 9|Tuesday-30/06/2015#052*11 15 28 34 37 + 1 8|Friday-26/06/2015#051*3 6 10 19 24 + 5 7|Tuesday-23/06/2015#050*4 16 22 38 49 + 6 9|Friday-19/06/2015#049*7 14 20 31 42 + 3 9|Tuesday-16/06/2015#048*10 15 16 36 37 + 3 9|Friday-12/06/2015#047*5 8 10 11 37 + 7 9|Tuesday-09/06/2015#046*5 9 17 32 34 + 6 8|Friday-05/06/2015#045*2 7 8 45 48 + 1 9|Tuesday-02/06/2015#044*7 23 29 37 41 + 1 8|Friday-29/05/2015#043*3 4 20 45 48 + 6 8|Tuesday-26/05/2015#042*5 6 7 21 24 + 5 6|Friday-22/05/2015#041*18 24 35 44 45 + 5 11|Tuesday-19/05/2015#040*26 30 31 35 37 + 8 11|Friday-15/05/2015#039*5 35 42 44 47 + 8 9|Tuesday-12/05/2015#038*14 29 30 40 46 + 3 6|Friday-08/05/2015#037*7 14 19 47 49 + 3 10|Tuesday-05/05/2015#036*1 10 17 20 42 + 8 9|Friday-01/05/2015#035*3 19 20 25 26 + 6 10|Tuesday-28/04/2015#034*24 26 28 36 45 + 7 10|Friday-24/04/2015#033*5 19 29 31 40 + 3 10|Tuesday-21/04/2015#032*6 14 17 42 45 + 1 8|Friday-17/04/2015#031*2 24 30 34 39 + 8 11|Tuesday-14/04/2015#030*24 32 34 35 49 + 1 2|Friday-10/04/2015#029*22 23 25 30 43 + 5 9|Tuesday-07/04/2015#028*18 25 39 44 50 + 5 8|Friday-03/04/2015#027*27 29 37 39 49 + 2 4|Tuesday-31/03/2015#026*8 20 24 28 49 + 8 9|Friday-27/03/2015#025*2 30 32 39 44 + 6 10|Tuesday-24/03/2015#024*10 24 26 39 40 + 3 10|Friday-20/03/2015#023*3 14 37 42 48 + 1 10|Tuesday-17/03/2015#022*11 23 26 38 44 + 1 8|Friday-13/03/2015#021*4 5 18 22 23 + 1 3|Tuesday-10/03/2015#020*2 6 23 30 31 + 2 10|Friday-06/03/2015#019*23 30 47 49 50 + 2 7|Tuesday-03/03/2015#018*6 8 11 13 21 + 7 8|Friday-27/02/2015#017*5 14 17 25 47 + 9 10|Tuesday-24/02/2015#016*3 25 28 34 50 + 1 11|Friday-20/02/2015#015*4 10 14 37 46 + 4 7|Tuesday-17/02/2015#014*2 5 18 30 43 + 1 10|Friday-13/02/2015#013*12 24 39 42 44 + 3 11|Tuesday-10/02/2015#012*13 17 20 30 45 + 9 10|Friday-06/02/2015#011*10 26 30 39 50 + 7 8|Tuesday-03/02/2015#010*17 31 33 44 50 + 7 11|Friday-30/01/2015#009*9 13 15 19 24 + 3 8|Tuesday-27/01/2015#008*5 10 31 33 40 + 8 10|Friday-23/01/2015#007*6 29 30 38 45 + 1 8|Tuesday-20/01/2015#006*15 33 41 44 47 + 8 10|Friday-16/01/2015#005*29 30 32 34 46 + 3 6|Tuesday-13/01/2015#004*8 17 21 31 34 + 9 10|Friday-09/01/2015#003*6 21 24 32 45 + 1 11|Tuesday-06/01/2015#002*14 20 30 38 49 + 3 4|Friday-02/01/2015#001*22 24 25 28 49 + 3 6'
			
			2016:	(105 Drafts)
			'Friday-30/12/2016#105*8 10 22 29 47 + 1 3|Tuesday-27/12/2016#104*3 22 25 32 39 + 7 12|Friday-23/12/2016#103*4 16 20 39 46 + 2 5|Tuesday-20/12/2016#102*13 15 17 21 27 + 2 3|Friday-16/12/2016#101*6 10 30 41 45 + 4 11|Tuesday-13/12/2016#100*14 28 29 48 50 + 2 8|Friday-09/12/2016#099*6 12 28 37 40 + 1 5|Tuesday-06/12/2016#098*1 7 11 27 45 + 4 9|Friday-02/12/2016#097*6 11 23 31 32 + 2 12|Tuesday-29/11/2016#096*21 26 27 28 38 + 9 11|Friday-25/11/2016#095*5 11 17 23 28 + 10 11|Tuesday-22/11/2016#094*5 10 33 34 47 + 2 10|Friday-18/11/2016#093*3 12 27 32 47 + 6 8|Tuesday-15/11/2016#092*7 15 36 42 48 + 3 7|Friday-11/11/2016#091*3 22 23 38 49 + 2 9|Tuesday-08/11/2016#090*5 9 47 49 50 + 8 9|Friday-04/11/2016#089*7 11 12 44 48 + 3 7|Tuesday-01/11/2016#088*6 10 20 29 37 + 1 9|Friday-28/10/2016#087*10 16 19 23 43 + 2 8|Tuesday-25/10/2016#086*3 15 20 21 28 + 1 5|Friday-21/10/2016#085*9 20 23 44 48 + 8 10|Tuesday-18/10/2016#084*2 17 21 25 27 + 6 9|Friday-14/10/2016#083*7 13 19 31 34 + 1 11|Tuesday-11/10/2016#082*5 12 20 24 37 + 4 11|Friday-07/10/2016#081*2 12 20 27 30 + 9 11|Tuesday-04/10/2016#080*4 7 14 34 38 + 4 11|Friday-30/09/2016#079*17 35 37 43 44 + 2 10|Tuesday-27/09/2016#078*6 9 13 39 41 + 2 12|Friday-23/09/2016#077*14 16 39 42 49 + 3 9|Tuesday-20/09/2016#076*1 4 10 41 45 + 6 9|Friday-16/09/2016#075*5 8 14 22 32 + 2 11|Tuesday-13/09/2016#074*4 7 16 35 44 + 1 3|Friday-09/09/2016#073*4 11 15 17 28 + 1 3|Tuesday-06/09/2016#072*12 24 30 34 45 + 7 10|Friday-02/09/2016#071*8 16 32 40 50 + 2 11|Tuesday-30/08/2016#070*13 16 29 35 42 + 6 8|Friday-26/08/2016#069*1 9 28 30 48 + 7 8|Tuesday-23/08/2016#068*2 23 31 37 45 + 4 8|Friday-19/08/2016#067*5 6 22 25 34 + 5 7|Tuesday-16/08/2016#066*2 26 34 37 46 + 4 8|Friday-12/08/2016#065*2 15 28 36 50 + 2 11|Tuesday-09/08/2016#064*12 19 43 44 45 + 5 10|Friday-05/08/2016#063*16 19 24 35 37 + 2 7|Tuesday-02/08/2016#062*2 8 27 38 46 + 2 6|Friday-29/07/2016#061*1 21 26 40 50 + 2 4|Tuesday-26/07/2016#060*3 10 13 45 49 + 2 11|Friday-22/07/2016#059*7 24 26 37 45 + 5 9|Tuesday-19/07/2016#058*19 24 28 36 37 + 3 6|Friday-15/07/2016#057*2 11 13 14 21 + 1 8|Tuesday-12/07/2016#056*3 7 26 33 41 + 2 10|Friday-08/07/2016#055*8 12 18 33 44 + 4 8|Tuesday-05/07/2016#054*1 10 29 38 48 + 3 4|Friday-01/07/2016#053*2 11 13 40 50 + 1 10|Tuesday-28/06/2016#052*26 32 37 43 49 + 4 5|Friday-24/06/2016#051*11 19 27 28 39 + 3 10|Tuesday-21/06/2016#050*5 17 32 35 49 + 1 5|Friday-17/06/2016#049*1 7 18 27 43 + 4 8|Tuesday-14/06/2016#048*13 34 39 42 50 + 9 11|Friday-10/06/2016#047*14 21 35 42 43 + 7 9|Tuesday-07/06/2016#046*19 26 35 45 49 + 2 5|Friday-03/06/2016#045*7 23 31 33 39 + 6 10|Tuesday-31/05/2016#044*6 12 26 30 48 + 6 7|Friday-27/05/2016#043*13 25 27 43 46 + 4 8|Tuesday-24/05/2016#042*16 17 23 34 37 + 6 9|Friday-20/05/2016#041*9 14 30 41 45 + 4 9|Tuesday-17/05/2016#040*15 27 32 36 39 + 3 10|Friday-13/05/2016#039*7 15 28 31 42 + 10 11|Tuesday-10/05/2016#038*2 26 27 40 49 + 5 10|Friday-06/05/2016#037*32 34 40 45 48 + 1 10|Tuesday-03/05/2016#036*8 23 24 34 38 + 3 7|Friday-29/04/2016#035*4 5 25 28 43 + 6 11|Tuesday-26/04/2016#034*10 17 31 32 42 + 2 5|Friday-22/04/2016#033*17 26 32 34 43 + 2 10|Tuesday-19/04/2016#032*11 14 15 27 44 + 2 7|Friday-15/04/2016#031*13 14 32 37 48 + 1 7|Tuesday-12/04/2016#030*1 5 9 22 38 + 2 10|Friday-08/04/2016#029*6 8 26 43 49 + 6 10|Tuesday-05/04/2016#028*3 5 9 19 40 + 2 5|Friday-01/04/2016#027*2 16 23 25 49 + 6 9|Tuesday-29/03/2016#026*1 4 19 25 36 + 3 11|Friday-25/03/2016#025*12 19 36 42 43 + 5 8|Tuesday-22/03/2016#024*12 15 26 42 49 + 5 8|Friday-18/03/2016#023*14 19 21 24 49 + 5 11|Tuesday-15/03/2016#022*5 7 10 34 44 + 2 10|Friday-11/03/2016#021*1 21 26 40 43 + 6 9|Tuesday-08/03/2016#020*1 8 9 14 23 + 1 7|Friday-04/03/2016#019*9 14 16 23 40 + 1 5|Tuesday-01/03/2016#018*4 7 13 28 37 + 10 11|Friday-26/02/2016#017*5 13 15 33 50 + 9 11|Tuesday-23/02/2016#016*23 25 32 37 42 + 1 11|Friday-19/02/2016#015*13 14 30 32 39 + 3 9|Tuesday-16/02/2016#014*3 10 22 37 50 + 6 10|Friday-12/02/2016#013*3 20 28 31 49 + 2 5|Tuesday-09/02/2016#012*6 9 13 28 37 + 4 5|Friday-05/02/2016#011*3 27 32 41 46 + 4 8|Tuesday-02/02/2016#010*6 9 10 21 36 + 2 6|Friday-29/01/2016#009*1 5 23 29 32 + 1 7|Tuesday-26/01/2016#008*15 24 38 40 48 + 2 9|Friday-22/01/2016#007*10 12 27 30 47 + 8 9|Tuesday-19/01/2016#006*2 30 38 43 46 + 2 7|Friday-15/01/2016#005*10 19 38 43 46 + 1 11|Tuesday-12/01/2016#004*1 2 10 30 44 + 1 8|Friday-08/01/2016#003*5 26 33 35 40 + 3 8|Tuesday-05/01/2016#002*6 10 31 36 39 + 6 10|Friday-01/01/2016#001*4 37 38 39 44 + 4 7'
			
			2017:	(104 Drafts)
			'Friday-29/12/2017#104*4 8 22 23 48 + 1 12|Tuesday-26/12/2017#103*4 17 30 43 44 + 2 10|Friday-22/12/2017#102*5 24 30 31 43 + 3 6|Tuesday-19/12/2017#101*8 15 30 38 46 + 4 7|Friday-15/12/2017#100*25 30 31 42 50 + 2 11|Tuesday-12/12/2017#099*20 37 39 44 50 + 4 8|Friday-08/12/2017#098*4 22 30 32 34 + 3 4|Tuesday-05/12/2017#097*11 36 43 44 48 + 2 7|Friday-01/12/2017#096*5 24 29 35 46 + 11 12|Tuesday-28/11/2017#095*1 6 12 18 42 + 2 7|Friday-24/11/2017#094*19 24 28 30 50 + 3 10|Tuesday-21/11/2017#093*2 10 14 28 31 + 5 7|Friday-17/11/2017#092*20 26 35 36 42 + 5 12|Tuesday-14/11/2017#091*14 16 39 40 41 + 8 10|Friday-10/11/2017#090*13 22 29 36 37 + 1 9|Tuesday-07/11/2017#089*7 19 20 37 41 + 2 12|Friday-03/11/2017#088*5 12 17 33 41 + 4 9|Tuesday-31/10/2017#087*1 12 36 43 46 + 3 5|Friday-27/10/2017#086*3 16 23 32 39 + 1 4|Tuesday-24/10/2017#085*9 11 13 27 33 + 7 10|Friday-20/10/2017#084*4 17 23 27 30 + 3 8|Tuesday-17/10/2017#083*13 17 19 26 36 + 2 3|Friday-13/10/2017#082*23 29 37 45 50 + 5 11|Tuesday-10/10/2017#081*4 21 34 36 37 + 3 6|Friday-06/10/2017#080*1 9 15 19 25 + 1 7|Tuesday-03/10/2017#079*6 24 32 48 50 + 1 5|Friday-29/09/2017#078*7 18 19 32 48 + 3 7|Tuesday-26/09/2017#077*1 29 40 41 48 + 6 12|Friday-22/09/2017#076*6 11 31 39 42 + 1 3|Tuesday-19/09/2017#075*1 8 21 30 45 + 2 3|Friday-15/09/2017#074*13 18 37 44 49 + 9 12|Tuesday-12/09/2017#073*10 17 27 29 35 + 4 11|Friday-08/09/2017#072*9 24 42 47 49 + 1 5|Tuesday-05/09/2017#071*6 9 18 28 29 + 1 9|Friday-01/09/2017#070*3 7 8 14 49 + 5 8|Tuesday-29/08/2017#069*4 12 15 32 38 + 1 5|Friday-25/08/2017#068*1 5 7 15 47 + 9 12|Tuesday-22/08/2017#067*3 10 12 17 27 + 3 5|Friday-18/08/2017#066*2 24 39 42 45 + 2 8|Tuesday-15/08/2017#065*10 14 30 35 46 + 4 10|Friday-11/08/2017#064*18 28 39 46 48 + 5 12|Tuesday-08/08/2017#063*15 25 26 40 41 + 4 5|Friday-04/08/2017#062*29 30 36 40 41 + 2 9|Tuesday-01/08/2017#061*14 21 24 29 30 + 8 10|Friday-28/07/2017#060*5 9 29 31 41 + 2 4|Tuesday-25/07/2017#059*12 14 43 44 48 + 2 11|Friday-21/07/2017#058*1 8 9 26 49 + 5 9|Tuesday-18/07/2017#057*1 25 27 41 45 + 5 7|Friday-14/07/2017#056*11 14 20 21 47 + 7 10|Tuesday-11/07/2017#055*14 22 26 42 50 + 8 10|Friday-07/07/2017#054*11 20 35 37 45 + 3 6|Tuesday-04/07/2017#053*10 22 25 37 49 + 5 8|Friday-30/06/2017#052*17 35 39 47 50 + 6 8|Tuesday-27/06/2017#051*9 17 21 28 45 + 1 3|Friday-23/06/2017#050*3 4 21 31 38 + 3 7|Tuesday-20/06/2017#049*11 18 26 43 44 + 8 10|Friday-16/06/2017#048*15 17 38 41 42 + 9 12|Tuesday-13/06/2017#047*3 12 22 27 49 + 4 11|Friday-09/06/2017#046*9 20 27 39 43 + 10 11|Tuesday-06/06/2017#045*20 22 25 37 40 + 3 7|Friday-02/06/2017#044*8 10 24 33 42 + 3 9|Tuesday-30/05/2017#043*7 12 27 38 48 + 6 9|Friday-26/05/2017#042*5 7 26 36 39 + 2 10|Tuesday-23/05/2017#041*8 15 25 27 42 + 1 4|Friday-19/05/2017#040*9 11 12 19 30 + 4 9|Tuesday-16/05/2017#039*8 11 15 20 30 + 3 8|Friday-12/05/2017#038*2 20 28 29 44 + 3 9|Tuesday-09/05/2017#037*8 12 16 22 26 + 6 7|Friday-05/05/2017#036*3 7 30 35 43 + 1 3|Tuesday-02/05/2017#035*6 19 23 25 27 + 11 12|Friday-28/04/2017#034*14 20 25 30 39 + 2 8|Tuesday-25/04/2017#033*9 11 19 32 43 + 3 9|Friday-21/04/2017#032*2 13 16 22 49 + 4 5|Tuesday-18/04/2017#031*17 22 31 38 45 + 5 12|Friday-14/04/2017#030*4 14 20 23 33 + 6 10|Tuesday-11/04/2017#029*5 21 22 31 49 + 2 8|Friday-07/04/2017#028*2 10 19 35 50 + 6 7|Tuesday-04/04/2017#027*1 9 24 33 34 + 2 6|Friday-31/03/2017#026*17 24 26 28 45 + 4 12|Tuesday-28/03/2017#025*9 13 31 33 46 + 6 10|Friday-24/03/2017#024*2 17 21 27 34 + 5 9|Tuesday-21/03/2017#023*1 20 23 44 47 + 4 11|Friday-17/03/2017#022*6 10 19 29 36 + 3 9|Tuesday-14/03/2017#021*3 5 21 36 44 + 3 6|Friday-10/03/2017#020*31 36 38 47 49 + 8 11|Tuesday-07/03/2017#019*6 37 41 48 50 + 4 5|Friday-03/03/2017#018*2 11 29 30 47 + 1 12|Tuesday-28/02/2017#017*10 20 31 35 42 + 2 12|Friday-24/02/2017#016*2 4 13 22 43 + 8 9|Tuesday-21/02/2017#015*13 19 41 45 49 + 3 4|Friday-17/02/2017#014*19 25 33 36 48 + 2 9|Tuesday-14/02/2017#013*2 10 24 40 44 + 3 10|Friday-10/02/2017#012*7 21 26 35 43 + 2 9|Tuesday-07/02/2017#011*4 10 31 38 44 + 8 10|Friday-03/02/2017#010*3 4 15 46 50 + 5 9|Tuesday-31/01/2017#009*3 4 17 23 44 + 6 9|Friday-27/01/2017#008*17 20 28 45 48 + 5 9|Tuesday-24/01/2017#007*1 5 7 17 23 + 3 8|Friday-20/01/2017#006*10 17 27 31 49 + 3 5|Tuesday-17/01/2017#005*4 16 25 43 47 + 2 10|Friday-13/01/2017#004*3 7 16 26 50 + 4 7|Tuesday-10/01/2017#003*2 11 29 35 44 + 4 9|Friday-06/01/2017#002*10 14 18 21 49 + 9 11|Tuesday-03/01/2017#001*19 23 27 34 49 + 1 11'
			
			2018:	(104 Drafts)
			'Friday-28/12/2018#104*13 16 34 35 45 + 10 12|Tuesday-25/12/2018#103*4 5 8 31 43 + 2 9|Friday-21/12/2018#102*2 12 15 34 50 + 3 4|Tuesday-18/12/2018#101*1 9 18 39 48 + 5 7|Friday-14/12/2018#100*12 29 38 42 44 + 2 12|Tuesday-11/12/2018#099*4 7 13 23 42 + 1 3|Friday-07/12/2018#098*11 17 26 37 48 + 1 10|Tuesday-04/12/2018#097*19 20 21 42 45 + 8 9|Friday-30/11/2018#096*3 10 12 23 26 + 1 12|Tuesday-27/11/2018#095*4 16 17 18 32 + 2 11|Friday-23/11/2018#094*5 8 25 26 30 + 3 10|Tuesday-20/11/2018#093*6 19 39 45 48 + 7 12|Friday-16/11/2018#092*9 10 13 28 41 + 1 12|Tuesday-13/11/2018#091*2 7 10 13 42 + 3 6|Friday-09/11/2018#090*14 17 32 37 49 + 11 12|Tuesday-06/11/2018#089*14 24 36 40 43 + 2 9|Friday-02/11/2018#088*5 15 17 37 44 + 7 11|Tuesday-30/10/2018#087*17 23 27 43 44 + 1 12|Friday-26/10/2018#086*5 18 21 31 35 + 6 9|Tuesday-23/10/2018#085*1 2 5 21 32 + 2 12|Friday-19/10/2018#084*1 3 29 47 48 + 3 12|Tuesday-16/10/2018#083*15 28 37 40 42 + 1 6|Friday-12/10/2018#082*4 9 12 31 43 + 5 8|Tuesday-09/10/2018#081*3 12 36 44 45 + 8 11|Friday-05/10/2018#080*8 16 24 26 35 + 3 11|Tuesday-02/10/2018#079*7 17 29 37 45 + 3 11|Friday-28/09/2018#078*2 4 8 27 50 + 2 9|Tuesday-25/09/2018#077*6 15 20 30 38 + 4 7|Friday-21/09/2018#076*5 7 21 25 37 + 3 4|Tuesday-18/09/2018#075*3 8 10 32 45 + 4 12|Friday-14/09/2018#074*1 3 33 40 45 + 3 4|Tuesday-11/09/2018#073*9 18 32 38 46 + 2 3|Friday-07/09/2018#072*4 23 27 31 50 + 1 8|Tuesday-04/09/2018#071*5 14 28 30 47 + 4 11|Friday-31/08/2018#070*4 30 31 38 42 + 4 6|Tuesday-28/08/2018#069*4 16 32 42 46 + 8 12|Friday-24/08/2018#068*3 14 31 36 50 + 1 12|Tuesday-21/08/2018#067*16 23 42 43 49 + 10 12|Friday-17/08/2018#066*2 15 18 24 43 + 8 12|Tuesday-14/08/2018#065*1 15 18 25 31 + 9 11|Friday-10/08/2018#064*18 20 36 43 44 + 3 9|Tuesday-07/08/2018#063*16 28 29 30 36 + 8 10|Friday-03/08/2018#062*7 26 36 38 43 + 6 12|Tuesday-31/07/2018#061*20 25 34 42 45 + 6 11|Friday-27/07/2018#060*11 17 22 23 41 + 6 11|Tuesday-24/07/2018#059*2 4 23 39 40 + 3 9|Friday-20/07/2018#058*2 15 40 43 46 + 3 6|Tuesday-17/07/2018#057*4 6 27 48 50 + 1 11|Friday-13/07/2018#056*1 4 14 21 49 + 2 12|Tuesday-10/07/2018#055*3 8 26 33 45 + 7 10|Friday-06/07/2018#054*8 30 33 38 48 + 2 10|Tuesday-03/07/2018#053*1 12 15 29 48 + 3 5|Friday-29/06/2018#052*15 21 23 40 48 + 3 12|Tuesday-26/06/2018#051*15 16 20 34 50 + 4 7|Friday-22/06/2018#050*14 25 39 41 44 + 2 8|Tuesday-19/06/2018#049*7 19 26 42 50 + 4 9|Friday-15/06/2018#048*23 26 33 38 49 + 1 12|Tuesday-12/06/2018#047*7 21 23 36 38 + 6 8|Friday-08/06/2018#046*8 19 32 43 46 + 2 8|Tuesday-05/06/2018#045*9 15 22 39 46 + 4 5|Friday-01/06/2018#044*17 18 24 29 40 + 4 5|Tuesday-29/05/2018#043*6 11 20 38 43 + 2 4|Friday-25/05/2018#042*13 15 16 28 41 + 4 5|Tuesday-22/05/2018#041*1 11 37 41 48 + 8 12|Friday-18/05/2018#040*5 8 10 13 31 + 3 6|Tuesday-15/05/2018#039*4 16 20 31 39 + 2 12|Friday-11/05/2018#038*3 22 34 49 50 + 8 11|Tuesday-08/05/2018#037*17 25 35 39 44 + 2 5|Friday-04/05/2018#036*6 12 23 39 45 + 9 12|Tuesday-01/05/2018#035*6 15 17 42 48 + 4 6|Friday-27/04/2018#034*12 24 40 41 46 + 5 12|Tuesday-24/04/2018#033*20 23 28 30 44 + 3 7|Friday-20/04/2018#032*3 16 25 39 44 + 7 11|Tuesday-17/04/2018#031*15 27 33 39 50 + 4 6|Friday-13/04/2018#030*5 25 34 48 50 + 6 7|Tuesday-10/04/2018#029*14 27 39 46 48 + 11 12|Friday-06/04/2018#028*1 29 33 45 47 + 4 8|Tuesday-03/04/2018#027*3 8 16 40 43 + 5 8|Friday-30/03/2018#026*12 17 28 35 47 + 7 11|Tuesday-27/03/2018#025*17 20 23 40 46 + 9 10|Friday-23/03/2018#024*5 7 11 46 50 + 8 11|Tuesday-20/03/2018#023*26 29 37 39 44 + 9 11|Friday-16/03/2018#022*4 17 24 27 31 + 10 11|Tuesday-13/03/2018#021*9 11 13 33 49 + 6 12|Friday-09/03/2018#020*9 14 21 32 44 + 1 12|Tuesday-06/03/2018#019*15 20 26 31 44 + 2 9|Friday-02/03/2018#018*2 7 34 45 48 + 1 12|Tuesday-27/02/2018#017*3 31 41 48 50 + 8 11|Friday-23/02/2018#016*10 17 18 28 47 + 3 7|Tuesday-20/02/2018#015*6 14 19 25 29 + 5 11|Friday-16/02/2018#014*10 12 23 32 50 + 4 10|Tuesday-13/02/2018#013*10 13 17 21 44 + 1 10|Friday-09/02/2018#012*22 31 36 38 44 + 1 11|Tuesday-06/02/2018#011*8 17 28 34 38 + 6 12|Friday-02/02/2018#010*14 34 36 39 48 + 2 3|Tuesday-30/01/2018#009*11 15 21 27 35 + 4 5|Friday-26/01/2018#008*6 15 24 28 48 + 4 9|Tuesday-23/01/2018#007*5 8 9 23 24 + 7 8|Friday-19/01/2018#006*3 8 17 44 50 + 2 7|Tuesday-16/01/2018#005*20 23 31 34 46 + 3 12|Friday-12/01/2018#004*13 21 23 30 45 + 4 6|Tuesday-09/01/2018#003*6 12 15 38 49 + 2 9|Friday-05/01/2018#002*2 5 20 38 41 + 4 8|Tuesday-02/01/2018#001*10 20 21 28 48 + 1 8'
			
			2019:	(?-9 Drafts)
			'Tuesday-29/01/2019#009*14 24 26 32 39 + 3 8|Friday-25/01/2019#008*1 6 13 15 16 + 6 10|Tuesday-22/01/2019#007*9 23 29 41 49 + 8 10|Friday-18/01/2019#006*5 6 16 30 46 + 5 10|Tuesday-15/01/2019#005*22 25 29 33 35 + 3 6|Friday-11/01/2019#004*1 19 31 39 48 + 1 6|Tuesday-08/01/2019#003*3 19 22 31 32 + 2 11|Friday-04/01/2019#002*7 11 19 27 37 + 6 10|Tuesday-01/01/2019#001*1 8 11 25 28 + 4 6'
		*/
		
	},
	/* END Prized Keys */
	
/*-----------------------------------------------------------------------------------------------*/
	
	/* BEGIN Prizes List */
	'Prizes_List': [	// Last updated: 098/2018
		{
			/*
				https://www.euro-millions.com/prizes
				
				Score:
					1	100
					2	92,3076923076923
					3	84,61538461538461
					4	76,92307692307692
					5	69,23076923076923
					6	61,53846153846154
					7	53,84615384615384
					8	46,15384615384615
					9	38,46153846153846
					10	30,76923076923077
					11	23,07692307692308
					12	15,38461538461538
					13	7,692307692307692
			*/
		},
		{	//	5 + 2	(1st)
			'prize': '1st',
			'match': '5 + 2',
			'average_amount': 56236826.20,
			'winning_probability': 1/139838160,
			'creation_date': '07/02/2004'
		},
		{	//	5 + 1	(2nd)
			'prize': '2nd',
			'match': '5 + 1',
			'average_amount': 403706.93,
			'winning_probability': 	1/6991908,
			'creation_date': '07/02/2004'
		},
		{	//	5 + 0	(3rd)
			'prize': '3rd',
			'match': '5 + 0',
			'average_amount': 65111.42,
			'winning_probability': 1/3107515,
			'creation_date': '07/02/2004'
		},
		{	//	4 + 2	(4th)
			'prize': '4th',
			'match': '4 + 2',
			'average_amount': 3511.49,
			'winning_probability': 1/621503,
			'creation_date': '07/02/2004'
		},
		{	//	4 + 1	(5th)
			'prize': '5th',
			'match': '4 + 1',
			'average_amount': 169.92,
			'winning_probability': 1/31075,
			'creation_date': '07/02/2004'
		},
		{	//	3 + 2	(6th)
			'prize': '6th',
			'match': '3 + 2',
			'average_amount': 110.53,
			'winning_probability': 1/14125,
			'creation_date': '07/02/2004'
		},
		{	//	4 + 0	(7th)
			'prize': '7th',
			'match': '4 + 0',
			'average_amount': 59.03,
			'winning_probability': 1/13811,
			'creation_date': '07/02/2004'
		},
		{	//	2 + 2	(8th)
			'prize': '8th',
			'match': '2 + 2',
			'average_amount': 19.87,
			'winning_probability': 1/985,
			'creation_date': '07/02/2004'
		},
		{	//	3 + 1	(9th)
			'prize': '9th',
			'match': '3 + 1',
			'average_amount': 14.55,
			'winning_probability': 1/706,
			'creation_date': '07/02/2004'
		},
		{	//	3 + 0	(10th)
			'prize': '10th',
			'match': '3 + 0',
			'average_amount': 12.07,
			'winning_probability': 1/314,
			'creation_date': '07/02/2004'
		},
		{	//	1 + 2	(11th)
			'prize': '11th',
			'match': '1 + 2',
			'average_amount': 10.67,
			'winning_probability': 1/188,
			'creation_date': '07/02/2004'
		},
		{	// 2 + 1	(12th)
			'prize': '12th',
			'match': '2 + 1',
			'average_amount': 8.07,
			'winning_probability': 1/49,
			'creation_date': '07/02/2004'
		},
		{	//	2 + 0	(13th)
			'prize': '13th',
			'match': '2 + 0',
			'average_amount': 4.34,
			'winning_probability': 1/22,
			'creation_date': '10/05/2011'
		}
	]
	
	/* END Prizes List */
};

/*-----------------------------------------------------------------------------------------------*/

//	a-z (For Main Functions)

var a;
var b;
var c;
var d;
var e;
var f;
var g;
var h;
var i;
var j;
var k;
var l;
var m;
var n;
var o;
var p;
var q;
var r;
var s;
var t;
var u;
var v;
var w;
var x;
var y;
var z;

/*-----------------------------------------------------------------------------------------------*/

//	aa-zz (For General Functions)

var aa;
var bb;
var cc;
var dd;
var ee;
var ff;
var gg;
var hh;
var ii;
var jj;
var kk;
var ll;
var mm;
var nn;
var oo;
var pp;
var qq;
var rr;
var ss;
var tt;
var uu;
var vv;
var ww;
var xx;
var yy;
var zz;

	/* END GLOBAL VARIABLES */

/*-----------------------------------------------------------------------------------------------*/

//	LOAD

	/* BEGIN LOAD */
	
	/*	LOAD:
		  (N/A)	JSON_Get_Online_Prized_Keys();	//	(N/A)
		  
	(N/A)*	(a)	MF_Create_Json();	//	(N/A)*	(a)
	(N/A)*	(a)		JSON_Create_Overview();	//	(a)
			(a)			JSON_Create_Overview_Numbers_Stars_Stats_Details(type);	//	(a)
			(a)		JSON_Create_Prized_Keys_List();	//	(a)
			(a)		JSON_Create_Automatic_Keys();	//	(a)
		  
			(a)	MF_Loop_Years();	//	(a)
			(c)		STATS_Prizes_Checker(numbers, stars, draw_date);	//	(c)
			(d)			STATS_Fill_Automatic_Keys(automatic_key, type_array, type, variable);	//	(d)
	(N/A)*	(c)		STATS_Create_Overview_History(year, draw);	//	(N/A)*	(c)
			(c)			STATS_Create_Overview_History_Numbers_Stars(type, year, draw);	//	(c)
			(c)		STATS_Loop_Numbers_Stars(type, main_array, secondary_array, draw, year, draw_date);	//	(c)
	(N/A)*	(d)			STATS_Fill_Numbers_Stars_Groups(type, value);	//	(N/A)*	(d)
			(d)			STATS_Numbers_Stars_Synergy(type, synergy_type, array, value);	//	(d)
	(N/A)*  (c)		STATS_Drawn_Percentage(draw_date);	//	(N/A)*	(c)
			(c)			STATS_Numbers_Stars_Drawn_Percentage(type, draw_date);	//	(c)
			(d)				STATS_Numbers_Stars_Synergy_Drawn_Percentage(type, synergy_type, value);	//	(d)
	(N/A)*	(c)		STATS_Fill_Overview_History(year, draw);	//	(N/A)*	(c)
			(c)			STATS_Fill_Overview_History_Numbers_Stars(type, year, draw);	//	(c)
			(d)				STATS_Fill_Overview_History_Numbers_Stars_Synergy(type, synergy_type, value, year, draw);	//	(d)
			(c)			STATS_Fill_Overview_History_Automatic_Keys(year, draw);	//	(c)
	(N/A)*	(c)		AK_Generator(numbers, draw_date);	//	(N/A)*	(c)
	(N/A)*	(c)			AK_Highest_Percentage();	//	(N/A)*	(c)
	(N/A)*	(c)			AK_Lowest_Percentage();	//	(N/A)*	(c)
			(c)			AK_271(numbers, draw_date);	//	(c)
	(N/A)*	(c)				AK_271_Fill_List_Numbers_Stars(type, value, list, draw_date, limit);	//	(N/A)*	(c)
	(N/A)*	(c)			AK_Synergy(draw_date, year, draw);	//	(N/A)*	(c)
			(c)				AK_Synergy_Create_List_Numbers_Stars(type, draw_date);	//	(c)
			(c)				AK_Synergy_Fill_Key_List(list_json, keys_list);	//	(c)
	*/

setTimeout(function () {
	//	Gets keys from API
    JSON_Get_Online_Prized_Keys();	//	(N/A)
}, 500);

setTimeout(function () {
	
	//	Creates json
	MF_Create_Json();	//	(N/A)*	(a)
	
	//	Loop Years in 'Prized_Keys_List'	
	MF_Loop_Years();	//	(a)

	console.log(json);
	
}, 2000);

	/* END LOAD */

/*-----------------------------------------------------------------------------------------------*/

//	FUNCTIONS

	/* BEGIN FUNCTIONS */
	
/*-----------------------------------------------------------------------------------------------*/

	/* BEGIN General Functions */
	
	/*	List:
		   (aa)	GF_Filler(gf_variable, gf_filler, gf_length, gf_direction);	//	(aa)
		   (aa)	GF_Json_Reloop(gf_json);	//	(aa)
		   (bb)	*	GF_Array_Reloop(gf_array);	//	(bb)
		   (bb)	GF_Array_Reloop(gf_array);	//	(bb)
		  (N/A)	GF_Check_If_Array(gf_variable);	//	(N/A)
		  (N/A)	GF_Sort_Array(gf_array, gf_type);	//	(N/A)
		  (N/A)	GF_Compare_Dates(gf_date1, gf_type, gf_date2);	//	(N/A)
		  
		   (aa) GF_Filter_Keys_Array(gf_keys_list);	//	(aa)
		   (cc)		GF_Filter_Keys_Array_Counter(gf_type, gf_main_array, gf_secondary_array);	//	(cc)
		   (aa)	GF_Filter_Json(gf_list_json);	//	(aa)
		   (aa)	GF_Filter_Numbers_Stars(gf_type, gf_type_json);	//	(aa)
		   (aa)	GF_Keys_Generator_Numbers_Stars(gf_numbers, gf_stars, gf_automatic_key);	//	(aa)
		   (aa)		GF_Keys_Generator_Numbers_Stars_Union(gf_type, gf_type_json);	//	(aa)
		   (aa)	GF_Prizes_Checker(gf_numbers, gf_stars, gf_keys_array);	//	(aa)
		   (bb)		GF_Prizes_Checker_Numbers_Stars(gf_type, gf_main_array, gf_secondary_array);	//	(bb)
	(N/A)* (bb)		GF_Prizes_Checker_Sort(gf_total_numbers, gf_total_stars);	//	(N/A)*	(bb)
	*/

//	Fills 'gf_variable' with 'gf_filler', up to 'gf_length' in 'gf_direction'
function GF_Filler(gf_variable, gf_filler, gf_length, gf_direction) {	//	(aa)
	//	gf_variable === variable getting filled
	//	gf_filler === filler for the variable
	//	gf_length === total length for the variable to be filled
	//	gf_direction === 'left' || 'right'
	
	var gf_variable_length;
	var gf_checker;
	
	gf_checker = true;
	
	//	Check 'gf_variable'
	if ((typeof gf_variable) === 'number') {
		gf_variable = gf_variable.toString();
	}
	else if ((typeof gf_variable) !== 'string') {
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Filler (gf_variable === ' + gf_variable + ')';
		gf_checker = false;
	}
	
	//	Check 'gf_filler'
	if ((typeof gf_filler) === 'number') {
		gf_filler = gf_filler.toString();
	}
	else if ((typeof gf_filler) !== 'string') {
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Filler (gf_filler === ' + gf_filler + ')';
		gf_checker = false;
	}
	
	//	Check 'gf_length'
	if ((typeof gf_length) !== 'number') {
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Filler (gf_length === ' + gf_length + ')';
		gf_checker = false;
	}
	
	//	Check 'gf_direction'
	if (gf_direction !== 'left' && gf_direction !== 'right') {
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Filler (gf_direction === ' + gf_direction + ')';
		gf_checker = false;
	}
	
	//	If all checkers are clear
	if (gf_checker === true) {
		for (aa=0; aa<(gf_length + 1); aa++) {	//	BEGIN (aa)
			gf_variable_length = gf_variable.length;
			
			if (gf_variable_length < gf_length) {
				if (gf_direction === 'left') {
					gf_variable = gf_filler + gf_variable;
					
				}
				else if (gf_direction === 'right') {
					gf_variable = gf_variable +  gf_filler;
					
				}
			}
		}	//	END (aa)
	}
	
	return gf_variable;
}

//	Loop 'gf_json' (with a list array, and every 'gf_value' inside 'gf_json' should be an array) and return it
function GF_Json_Reloop(gf_json) {	//	(aa)
	//	gf_json === A json, with a list_array, and every value inside is an array
	
	var gf_relooped_json;
	var gf_list_array_length;
	var gf_length;
	var gf_value;
	
	gf_relooped_json = {
		'list_array': []
	};
	
	gf_value = gf_json.list_array[0];
	if (GF_Check_If_Array(gf_json[gf_value]) === true) {	//	(N/A)
		gf_list_array_length = gf_json.list_array.length;
		for (aa=0; aa<(gf_list_array_length); aa++) {	//	BEGIN (aa)
			gf_value = gf_json.list_array[aa];
			gf_length = gf_relooped_json.list_array.length;
			gf_relooped_json[gf_value] = GF_Array_Reloop(gf_json[gf_value]);	//	(bb)
			gf_relooped_json.list_array[gf_length] = gf_value;
		}	//	END (aa)
	}
	else {
		//	ERROR
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Json_Reloop (gf_json[gf_value] => (Not an array))';
	}
	
	return gf_relooped_json;
}

//	Loop 'gf_array' and return it (mainly for Overview>history)
function GF_Array_Reloop(gf_array) {	//	(bb)
	//	gf_array === An array
	
	var gf_relooped_array;
	var gf_relooped_array_length;
	
	gf_relooped_array = [];
	
	gf_relooped_array_length = gf_array.length;
	for (bb=0; bb<(gf_relooped_array_length); bb++) {	//	BEGIN (bb)
		gf_relooped_array[bb] = gf_array[bb];
	}	//	END (bb)
	
	return gf_relooped_array;
}

//	Checks if 'gf_variable' is an array
function GF_Check_If_Array(gf_variable) {	//	(N/A)
	//	gf_variable === Variable that will be checked

	var gf_array_checker;
	
	gf_array_checker = Array.isArray(gf_variable);
	
	return gf_array_checker;
}
	
//	Sorts an array
function GF_Sort_Array(gf_array, gf_type) {	//	(N/A)
	//	gf_array === Array that will be sorted
	//	gf_type === '<' (ascending) || '>' (descending)
	
	var gf_array_check;

	//	Checks if 'gf_array' is an actual array
	gf_array_check = GF_Check_If_Array(gf_array);	//	(N/A)
	
	//	If 'gf_array' is an actual array
	if (gf_array_check === true) {
		//	If the 'gf_array' length is bigger than 1
		if (gf_array.length > 1) {
			//	Checks if the contents of the 'gf_array' are strings
			if ((typeof gf_array[0]) === 'string') {
				//	Checks 'gf_type'
				if (gf_type === '<' || gf_type === undefined) {
					gf_array.sort();	//	(<) (string)
				}
				else if (gf_type === '>') {
					gf_array.sort();
					gf_array.reverse();	//	(>) (string)
				}
				else {
					//	ERROR
					json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Sort_Array (gf_type === ' + gf_type + ')';
				}
			}
			//	Checks if the contents of the 'gf_array' are numbers
			else if ((typeof gf_array[0]) === 'number') {
				//	Checks 'gf_type'
				if (gf_type === '<' || gf_type === undefined) {
					gf_array.sort(function(a, b){return a - b;});	//	(<) (number)
				}
				else if (gf_type === '>') {
					gf_array.sort(function(a, b){return b - a;});	//	(>) (number)
				}
				else {
					//	ERROR
					json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Sort_Array (gf_type === ' + gf_type + ')';
				}
			}
		}
	}
	else {
		//	ERROR
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Sort_Array (Not an array)';
	}
	
	return gf_array;
}

//	Compares 'gf_date1' to 'gf_date2', based on 'gf_type'
function GF_Compare_Dates(gf_date1, gf_type, gf_date2) {	//	(N/A)
	//	gf_date1 === first date
	//	gf_type === '=' || '==' || '===' || '<' || '<=' || '>' || '>='
	//	gf_date2 === second date

	if (gf_date1.includes("/") === true && gf_date2.includes("/") === true) {
		var gf_date_check = false;
		
		gf_date1 = gf_date1.split('/');
		gf_date1 = parseInt(gf_date1[2] + gf_date1[1] + gf_date1[0]);
		
		gf_date2 = gf_date2.split('/');
		gf_date2 = parseInt(gf_date2[2] + gf_date2[1] + gf_date2[0]);
		
		if (gf_type === '=' || gf_type === '==' || gf_type === '===') {
			if (gf_date1 === gf_date2) {
				gf_date_check = true;
			}
		}
		else if (gf_type  === '<') {
			if (gf_date1 < gf_date2) {
				gf_date_check = true;
			}
		}
		else if (gf_type === '<=') {
			if (gf_date1 <= gf_date2) {
				gf_date_check = true;
			}
		}
		else if (gf_type === '>') {
			if (gf_date1 > gf_date2) {
				gf_date_check = true;
			}
		}
		else if (gf_type === '>=') {
			if (gf_date1 >= gf_date2) {
				gf_date_check = true;
			}
		}
		
		return gf_date_check;
	}
	else {
		//	ERROR
		json.Overview.ERROR[json.Overview.ERROR.length] = "GF_Compare_Dates (Doesn't include '/')";
	}
}

//	Filters an array of keys, for duplicated keys
function GF_Filter_Keys_Array(gf_keys_list) {	//	(aa)
	//	gf_keys_list === Array of keys being filtered
	
	var gf_keys_list_length;
	var gf_list_key;
	
	var gf_filtered_keys_list;
	var gf_filtered_keys_list_length;
	var gf_filtered_list_key;
	
	var gf_check;
	var gf_numbers_checker;
	var gf_stars_checker;
	
	gf_filtered_keys_list = [];
	
	gf_keys_list_length = gf_keys_list.length;
	if (gf_keys_list_length > 0) {
		gf_filtered_keys_list[0] = gf_keys_list[0];
		
		for (aa=0; aa<(gf_keys_list_length); aa++) {	//	BEGIN (aa)
			gf_list_key = gf_keys_list[aa];
			gf_check = false;
			
			gf_filtered_keys_list_length = gf_filtered_keys_list.length;
			for (bb=0; bb<(gf_filtered_keys_list_length); bb++) {	//	BEGIN (bb)
				gf_filtered_list_key = gf_filtered_keys_list[bb];
			
				gf_numbers_checker = GF_Filter_Keys_Array_Counter('numbers', gf_list_key['numbers'], gf_filtered_list_key['numbers']);	//	(cc)
				gf_stars_checker = GF_Filter_Keys_Array_Counter('stars', gf_list_key['stars'], gf_filtered_list_key['stars']);	//	(cc)
				
				if (gf_numbers_checker === true && gf_numbers_checker === true) {
					gf_check = true;
				}
			}	//	END (bb)
			if (gf_check === false) {
				gf_filtered_keys_list_length = gf_filtered_keys_list.length;
				gf_filtered_keys_list[gf_filtered_keys_list_length] = gf_list_key;
			}
		}	//	(aa)
	}
	else {
		//	ERROR
		json.Overview.ERROR[json.Overview.ERROR.length] = 'GF_Filter_Keys_Array (gf_keys_list === ' + gf_keys_list + ')';
	}
	
	
	
	return gf_filtered_keys_list;
}

//	Checks if the arrays are equivalent
function GF_Filter_Keys_Array_Counter(gf_type, gf_main_array, gf_secondary_array) {	//	(cc)
	//	gf_type === 'numbers' || 'stars'
	//	gf_main_array === numbers/stars array from gf_list_key
	//	gf_secondary_array === numbers/stars array from gf_filtered_list_key
	
	var gf_max_draw;
	var gf_counter;
	var gf_checker;
	
	gf_checker = false;
	gf_counter = 0;
	gf_max_draw = json.Overview.details[gf_type].max_draw;
	for (cc=0; cc<(gf_max_draw); cc++) {	//	BEGIN (cc)
		for (dd=0; dd<(gf_max_draw); dd++) {	//	BEGIN (dd)
			if (gf_main_array[cc] === gf_secondary_array[dd]) {
				gf_counter += 1;
			}
		}	//	END (dd)
	}	//	END (cc)
	if (gf_counter === gf_max_draw) {
		gf_checker = true;
	}
	
	return gf_checker;
}


//	Filter a json with a list array
function GF_Filter_Json(gf_list_json) {	//	(aa)
	//	gf_list_json === Json with a list_array
	
	var gf_list_array;
	var gf_list_array_length;
	
	var gf_json;
	var gf_value;
	var gf_total;
	var gf_length;
	
	gf_json = {
		'list_array': []
	};
	
	gf_list_array = gf_list_json.list_array;
	gf_list_array_length = gf_list_array.length;
	for (aa=0; aa<(gf_list_array_length); aa++) {	//	BEGIN (aa)
		gf_value = gf_list_json.list_array[aa];
		gf_total = gf_list_json[gf_value];
		
		if (gf_json[gf_total] === undefined) {
			gf_json[gf_total] = [];
			gf_length = gf_json.list_array.length;
			gf_json.list_array[gf_length] = gf_total;
			gf_json.list_array = GF_Sort_Array(gf_json.list_array, '>');	//	(N/A)
		}
		
		gf_length = gf_json[gf_total].length;
		gf_json[gf_total][gf_length] = gf_value;
		gf_json[gf_total] = GF_Sort_Array(gf_json[gf_total], '<');	//	(N/A)
	}	//	END (aa)
	
	return gf_json;
}

//	Gets numbers/stars equivalent, or close (gf_extra_array), to max_draw
function GF_Filter_Numbers_Stars(gf_type, gf_type_json) {	//	(aa)
	//	gf_type === 'numbers' || 'stars'
	//	gf_type_json === json with a list_array (already filtered)

	var gf_json;
	var gf_max_draw;
	var gf_value;
	var gf_length;
	
	var gf_list_array;
	var gf_list_array_length;
	
	var gf_array;
	var gf_array_length;
	
	var gf_main_array;
	var gf_main_array_length;
	var gf_extra_array;
	var gf_extra_array_length;
	
	gf_max_draw = json.Overview.details[gf_type].max_draw;
	
	gf_list_array = gf_type_json.list_array;
	gf_list_array_length = gf_list_array.length;
	
	gf_main_array = [];
	gf_extra_array = [];
	
	for (aa=0; aa<(gf_list_array_length); aa++) {	//	BEGIN (aa)
		gf_main_array_length = gf_main_array.length;
		gf_extra_array_length = gf_extra_array.length;
		
		if ((gf_main_array_length + gf_extra_array_length) < gf_max_draw) {
			gf_value = gf_list_array[aa];
			gf_array = gf_type_json[gf_value];
			gf_array_length = gf_array.length;
			
			gf_length = undefined;
			for (bb=0; bb<(gf_array_length); bb++) {	//	BEGIN (bb)
				gf_main_array_length = gf_main_array.length;
				gf_extra_array_length = gf_extra_array.length;
				
				if (gf_length === undefined) {
					gf_length = gf_main_array_length;
				}
				if ((gf_length + gf_array_length) > gf_max_draw) {
					gf_extra_array[gf_extra_array_length] = gf_array[bb];
				}
				else {
					gf_main_array[gf_main_array_length] = gf_array[bb];
				}
			}	//	END (bb)
		}
	}	//	END (aa)
	
	//	Sort
	gf_main_array = GF_Sort_Array(gf_main_array, '<');	//	(N/A)
	gf_extra_array = GF_Sort_Array(gf_extra_array, '<');	//	(N/A)
	
	gf_json = {
		'main_array': gf_main_array,
		'extra_array': gf_extra_array
	};
	
	return gf_json;
};

//	Generates keys based on 'main_array' and 'extra_array', from numbers and stars
function GF_Keys_Generator_Numbers_Stars(gf_numbers, gf_stars, gf_automatic_key, gf_year, gf_draw) {	//	(aa)
	//	gf_numbers === Json of numbers (main_array && extra_array)
	//	gf_stars === Json of stars (main_array && extra_array)
	//	gf_automatic_key === Current automatic_key
	//	gf_year === The current year being looped
	//	gf_draw === The current draw being looped
	
	var gf_key_generator_limit;
	
	var gf_numbers_matrix;
	var gf_numbers_matrix_length;
	var gf_stars_matrix;
	var gf_stars_matrix_length;
	
	var gf_keys_array;
	var gf_keys_array_length;
	
	gf_keys_array = [];
	
	gf_numbers_matrix = GF_Keys_Generator_Numbers_Stars_Union('numbers', gf_numbers);	//	(aa)
	gf_stars_matrix = GF_Keys_Generator_Numbers_Stars_Union('stars', gf_stars);	//	(aa)
	
	gf_numbers_matrix_length = gf_numbers_matrix.length;
	gf_stars_matrix_length = gf_stars_matrix.length;
	
	//	Generates keys if their total is less, or equal, than key_generator_limit; (json.Overview.details.key_generator_limit)
	gf_key_generator_limit = json.Overview.details.key_generator_limit;
	if ((gf_numbers_matrix_length * gf_stars_matrix_length) <= gf_key_generator_limit) {
		for (aa=0; aa<(gf_numbers_matrix_length); aa++) {	//	BEGIN (aa)
			for (bb=0; bb<(gf_stars_matrix_length); bb++) {	//	BEGIN (bb)
				gf_keys_array_length = gf_keys_array.length;
				gf_keys_array[gf_keys_array_length] = {
					'numbers': gf_numbers_matrix[aa],
					'stars': gf_stars_matrix[bb]
				};
			}	//	END (bb)
		}	//	END (aa)
	}
	//	Returns amout of keys that would be generated
	else {
		gf_keys_array = (gf_numbers_matrix_length * gf_stars_matrix_length);
		if (gf_automatic_key !== undefined) {
			json.Overview.stats.automatic_keys[gf_automatic_key].WARNING[json.Overview.stats.automatic_keys[gf_automatic_key].WARNING.length] = gf_draw + '/' + gf_year + ': ' + gf_keys_array + ' keys';
		}
	}
	
	return gf_keys_array;
}

//	Creates a matrix with the various options from the junction of the json's 'main_array' with it's 'extra_array'
function GF_Keys_Generator_Numbers_Stars_Union(gf_type, gf_type_json) {	//	(aa)
	//	gf_type === 'numbers' || 'stars'
	//	gf_type_json === json of numbers/stars with 'main_array' and 'extra_array'
	
	var gf_max_draw;
	var gf_difference;
	var gf_counter;
	var gf_count;
	
	var gf_json_main_array;
	var gf_json_main_array_length;
	var gf_json_extra_array;
	var gf_json_extra_array_length;
	
	var gf_main_matrix;
	var gf_main_matrix_length;
	var gf_extra_matrix;
	var gf_extra_matrix_length;
	
	gf_max_draw = json.Overview.details[gf_type].max_draw;
	
	gf_json_main_array = gf_type_json.main_array;
	gf_json_extra_array = gf_type_json.extra_array;
	gf_json_main_array_length = gf_json_main_array.length;
	gf_json_extra_array_length =  gf_json_extra_array.length;
	
	gf_main_matrix = [];
	gf_extra_matrix = [];
	
	gf_difference = Math.abs((gf_json_main_array_length) - (gf_max_draw));
	
	//	if 'gf_json_main_array' ('gf_json_main_array_length') already has the equivalent to 'gf_max_draw'
	if (gf_json_main_array_length === gf_max_draw) {
		gf_main_matrix_length = gf_main_matrix.length;
		gf_main_matrix[gf_main_matrix_length] = [];
		for (aa=0; aa<(gf_max_draw); aa++) {	//	BEGIN (aa)
			gf_main_matrix[gf_main_matrix_length][aa] = gf_json_main_array[aa];
		}	//	END (aa)
	}
	
	//	if 'gf_json_extra_array' ('gf_json_extra_array_length') is not empty && 'gf_json_main_array' ('gf_json_main_array_length') is less than 'gf_max_draw'
	if ((gf_json_extra_array_length > 0) && (gf_json_main_array_length < gf_max_draw)) {
		gf_counter = gf_difference - 1;
		
		for (aa=0; aa<(gf_json_extra_array_length - gf_counter); aa++) {	//	BEGIN (aa)
			if (gf_difference > 1) {
				bb = (aa+1);	//	BEGIN (bb)
				for (cc=bb; cc<(gf_json_extra_array_length - (gf_counter - 1)); cc++) {	//	BEGIN (cc)
					if (gf_difference > 2) {
						dd = (cc+1);	//	BEGIN (dd)
						for (ee=dd; ee<(gf_json_extra_array_length - (gf_counter - 2)); ee++) {	//	BEGIN (ee)
							if (gf_difference > 3) {
								ff = (ee+1);	//	BEGIN (ff)
								for (gg=ff; gg<(gf_json_extra_array_length - (gf_counter - 3)); gg++) {	//	BEGIN (gg)
									if (gf_difference > 4) {
										hh = (gg+1);	//	BEGIN (hh)
										for (ii=hh; ii<(gf_json_extra_array_length - (gf_counter - 4)); ii++) {	//	BEGIN (ii)
											gf_extra_matrix_length = gf_extra_matrix.length;
											gf_extra_matrix[gf_extra_matrix_length] = [];
											gf_extra_matrix[gf_extra_matrix_length][0] = gf_json_extra_array[aa];
											gf_extra_matrix[gf_extra_matrix_length][1] = gf_json_extra_array[cc];
											gf_extra_matrix[gf_extra_matrix_length][2] = gf_json_extra_array[ee];
											gf_extra_matrix[gf_extra_matrix_length][3] = gf_json_extra_array[gg];
											gf_extra_matrix[gf_extra_matrix_length][4] = gf_json_extra_array[ii];
										}	//	END (ii) (hh)
									}	// (gf_difference > 4)
									else {
										gf_extra_matrix_length = gf_extra_matrix.length;
										gf_extra_matrix[gf_extra_matrix_length] = [];
										gf_extra_matrix[gf_extra_matrix_length][0] = gf_json_extra_array[aa];
										gf_extra_matrix[gf_extra_matrix_length][1] = gf_json_extra_array[cc];
										gf_extra_matrix[gf_extra_matrix_length][2] = gf_json_extra_array[ee];
										gf_extra_matrix[gf_extra_matrix_length][3] = gf_json_extra_array[gg];
									}	//	else (gf_difference <= 4)
								}	//	END (gg) (ff)
							}	// (gf_difference > 3)
							else {
								gf_extra_matrix_length = gf_extra_matrix.length;
								gf_extra_matrix[gf_extra_matrix_length] = [];
								gf_extra_matrix[gf_extra_matrix_length][0] = gf_json_extra_array[aa];
								gf_extra_matrix[gf_extra_matrix_length][1] = gf_json_extra_array[cc];
								gf_extra_matrix[gf_extra_matrix_length][2] = gf_json_extra_array[ee];
							}	//	else (gf_difference <= 3)
						}	//	END (ee) (dd)
					}	// (gf_difference > 2)
					else {
						gf_extra_matrix_length = gf_extra_matrix.length;
						gf_extra_matrix[gf_extra_matrix_length] = [];
						gf_extra_matrix[gf_extra_matrix_length][0] = gf_json_extra_array[aa];
						gf_extra_matrix[gf_extra_matrix_length][1] = gf_json_extra_array[cc];
					}	// (gf_difference <= 2)
				}	//	END (cc) (bb)
			}	// (gf_difference > 1)
			else {
				gf_extra_matrix_length = gf_extra_matrix.length;
				gf_extra_matrix[gf_extra_matrix_length] = [];
				gf_extra_matrix[gf_extra_matrix_length][0] = gf_json_extra_array[aa];
			}	// (gf_difference <= 1)
		}	//	END (aa)
		
		//	Fill 'gf_main_matrix' with 'gf_json_main_array' and 'gf_extra_matrix'
		gf_extra_matrix_length = gf_extra_matrix.length;
		for (aa=0; aa<(gf_extra_matrix_length); aa++) {	//	BEGIN (aa)
			gf_main_matrix_length = gf_main_matrix.length;
			gf_main_matrix[gf_main_matrix_length] = [];
			gf_count = 0;
			for (bb=0; bb<(gf_max_draw); bb++) {	//	BEGIN (bb)
				if (bb < (gf_max_draw - gf_difference)) {
					gf_main_matrix[gf_main_matrix_length][bb] = gf_json_main_array[bb];
				}
				else {
					gf_main_matrix[gf_main_matrix_length][bb] = gf_extra_matrix[aa][gf_count];
					gf_count++;
				}
				
				//	Sort
				if (bb === (gf_max_draw - 1)) {
					gf_main_matrix[gf_main_matrix_length] = GF_Sort_Array(gf_main_matrix[gf_main_matrix_length], '<');	//	(N/A)
				}
			}	//	END (bb)
		}	//	END (aa)
	}
	
	return gf_main_matrix;
}

//	Loop an array of keys for prizes based on 'numbers' and 'stars' from the draw
function GF_Prizes_Checker(gf_numbers, gf_stars, gf_keys_array) {	//	(aa)
	//	gf_numbers === array of the numbers from the current draw being looped
	//	gf_stars === array of the stars from the current draw being looped
	//	gf_keys_array === array of various keys (each key as 'numbers' and 'stars')
	
	var gf_keys_array_length;
	
	var gf_keys_array_numbers;
	var gf_keys_array_stars;
	
	var gf_total_numbers;
	var gf_total_stars;
	
	var gf_prizes_array;
	var gf_prizes_array_length;
	
	gf_prizes_array = [];
	
	//	Check if 'gf_keys_array' is an actual array
	if (GF_Check_If_Array(gf_keys_array) === true) {	//	(N/A)
		
		//	Loop 'gf_keys_array'
		gf_keys_array_length = gf_keys_array.length;
		for (aa=0; aa<(gf_keys_array_length); aa++) {	//	BEGIN (aa)
			gf_keys_array_numbers = gf_keys_array[aa].numbers;
			gf_keys_array_stars = gf_keys_array[aa].stars;
			
			//	Check if there are matches in the current array of numbers/stars from the key being looped, compared to the numbers/stars from the draw being looped
			//	Numbers
			gf_total_numbers = GF_Prizes_Checker_Numbers_Stars('numbers', gf_numbers, gf_keys_array_numbers);	//	(bb)
			//	Stars
			gf_total_stars = GF_Prizes_Checker_Numbers_Stars('stars', gf_stars, gf_keys_array_stars);	//	(bb)
			
			//	Sorts what prize is given based on 'gf_total_numbers' and 'gf_total_stars'
			gf_prizes_array_length = gf_prizes_array.length;
			gf_prizes_array[gf_prizes_array_length] = GF_Prizes_Checker_Sort(gf_total_numbers, gf_total_stars);	//	(N/A)*	(bb)
			
		}	//	END (aa)
	}
	
	return gf_prizes_array;
}

//	Check if there are matches in the current array of numbers/stars from the key being looped, compared to the numbers/stars from the draw being looped
function GF_Prizes_Checker_Numbers_Stars(gf_type, gf_main_array, gf_secondary_array) {	//	(bb)
	//	gf_type === 'numbers' || 'stars'
	//	gf_main_array === numbers (if gf_type === 'numbers') || stars (if gf_type === 'stars')
	//	gf_secondary_array === gf_keys_array_numbers (if gf_type === 'numbers') || gf_keys_array_stars (if gf_type === 'stars')
	
	var gf_counter;
	var gf_max_draw;
	
	gf_max_draw = json.Overview.details[gf_type].max_draw;
	
	gf_counter = 0;
	for (bb=0; bb<(gf_max_draw); bb++) {	//	BEGIN (bb)
		for (cc=0; cc<(gf_max_draw); cc++) {	//	BEGIN (cc)
			if (gf_main_array[bb] === gf_secondary_array[cc]) {
				gf_counter += 1;
			}
		}	//	END (cc)
	}	//	END (bb)
	
	return gf_counter;
}

//	Sorts what prize is given based on 'gf_total_numbers' and 'gf_total_stars'
function GF_Prizes_Checker_Sort(gf_total_numbers, gf_total_stars) {	//	(N/A)*	(bb)
	//	gf_total_numbers === total amount of correct numbers (based on the draw numbers vs key numbers)
	//	gf_total_stars === total amount of correct stars (based on the draw stars vs key stars)
	
	var gf_prize;
	
	gf_prize = undefined;
	if (gf_total_numbers > 0) {
		//	5 + X
		if (gf_total_numbers === 5) {
			//	5 + 2 (1st)
			if (gf_total_stars === 2) {
				gf_prize = 1;
			}
			//	5 + 1 (2nd)
			else if (gf_total_stars === 1) {
				gf_prize = 2;
			}
			//	5 + 0 (3rd)
			else if (gf_total_stars === 0) {
				gf_prize = 3;
			}
		}
		//	4 + X
		else if (gf_total_numbers === 4) {
			//	4 + 2 (4th)
			if (gf_total_stars === 2) {
				gf_prize = 4;
			}
			//	4 + 1 (5th)
			else if (gf_total_stars === 1) {
				gf_prize = 5;
			}
			//	4 + 0 (7th)
			else if (gf_total_stars === 0) {
				gf_prize = 7;
			}
		}
		//	3 + X
		else if (gf_total_numbers === 3) {
			//	3 + 2 (6th)
			if (gf_total_stars === 2) {
				gf_prize = 6;
			}
			//	3 + 1 (9th)
			else if (gf_total_stars === 1) {
				gf_prize = 9;
			}
			//	3 + 0 (10th)
			else if (gf_total_stars === 0) {
				gf_prize = 10;
			}
		}
		//	2 + X
		else if (gf_total_numbers === 2) {
			//	2 + 2 (8th)
			if (gf_total_stars === 2) {
				gf_prize = 8;
			}
			//	2 + 1 (12th)
			else if (gf_total_stars === 1) {
				gf_prize = 12;
			}
			//	2 + 0 (13th)
			else if (gf_total_stars === 0) {
				gf_prize = 13;
			}
		}
		//	1 + X
		else if (gf_total_numbers === 1) {
			//	1 + 2 (11th)
			if (gf_total_stars === 2) {
				gf_prize = 11;
			}
		}
	}
	
	return gf_prize;
}

	/* END General Functions */

/*-----------------------------------------------------------------------------------------------*/

	/* BEGIN Main Functions */
	
	/*	List:
    (N/A)*	(a)	MF_Create_Json();	//	(N/A)*	(a)
			(a)	MF_Loop_Years();	//	(a)
	*/
	
//	Creates json
function MF_Create_Json() {	//	(N/A)*	(a)
	
	//	Creates Overview (inside the json)
	JSON_Create_Overview();	//	(a)
	
	//	Creates Prized_Keys_List based on 'online_keys' or 'offline_keys' (inside the json)
	JSON_Create_Prized_Keys_List();	//	(a)
	
	//	Creates Automatic_Keys (inside the json)
	JSON_Create_Automatic_Keys();	//	(a)
}

//	Loop Years in 'Prized_Keys_List'	
function MF_Loop_Years() {	//	(a)
	var years_array;
	var years_array_length;
	var year;
	
	var draws_array;
	var draws_array_length;
	var draw;
	
	var numbers;
	var stars;
	
	var draw_date;
	
	years_array = json.Prized_Keys_List.list_array;
	years_array_length = years_array.length;
	
	//	Loop 'years_array'
	for (a=0; a<(years_array_length); a++) {	//	BEGIN (a)
		year = json.Prized_Keys_List.list_array[a];
		
		draws_array = json.Prized_Keys_List[year].list_array;
		draws_array_length = draws_array.length;
		
		//	Loop 'draws_array'
		for (b=0; b<(draws_array_length); b++) {	//	BEGIN (b)
			draw = json.Prized_Keys_List[year].list_array[b];
			
			numbers = json.Prized_Keys_List[year][draw].numbers;
			stars = json.Prized_Keys_List[year][draw].stars;
			
			draw_date = json.Prized_Keys_List[year][draw].details.date;
			
			//	Adds to 'draws_total' (Overview>stats>draws>draws_total)
			json.Overview.stats.draws.draws_total += 1;
			
			//	Checks for prizes in the Automatic_Keys generated in the previous draws
			STATS_Prizes_Checker(numbers, stars, draw_date);	//	(N/A)*	(c)
			
			//	Creates Overview>history (stats)
			STATS_Create_Overview_History(year, draw);	//	(N/A)*	(c)
			
			//	Loop 'numbers' from 'draw'
			STATS_Loop_Numbers_Stars('numbers', numbers, stars, draw, year, draw_date);	//	(c)
			
			//	Loop 'stars' from 'draw'
			STATS_Loop_Numbers_Stars('stars', stars, numbers, draw, year, draw_date);	//	(c)
			
			//	Calculates 'drawn_percentage', where is needed, in the json
			STATS_Drawn_Percentage(draw_date);	//	(c)
			
			//	Automatic keys generator
			AK_Generator(numbers, draw_date, year, draw);	//	(N/A)*	(c)
			
			//	Fills Overview>history (stats)
			STATS_Fill_Overview_History(year, draw);	//	(N/A)*	(c)
			
		}	//	END (b)
		
	}	//	END (a)
}

	/* END Main functions */
	
/*-----------------------------------------------------------------------------------------------*/

	/* BEGIN JSON*/
	
	/*	List:
		  (N/A)	JSON_Get_Online_Prized_Keys();	//	(N/A)
	(N/A)*	(a)	JSON_Create_Overview();	//	(a)
			(a)		JSON_Create_Overview_Numbers_Stars_Stats_Details(type);	//	(a)
			(a)	JSON_Create_Prized_Keys_List();	//	(a)
			(a)	JSON_Create_Automatic_Keys();	//	(a)
	*/

//	Gets keys from API
function JSON_Get_Online_Prized_Keys() {	//	(N/A)
	$.ajax({
		url: "https://euromillions-api.herokuapp.com/results",
		success: function (data) {
			json.Prized_Keys.online_keys = data;
		}
	});
}

//	Creates Overview (inside the json)
function JSON_Create_Overview() {	//	(a)
	
	var automatic_key;
	
	var automatic_keys_list;
	var automatic_keys_list_length;
	
	var prizes_list_max_length;

	json.Overview = {
		'stats': {
			'draws': {
				'draws_total': 0
			},
			'numbers': {
				'groups': {
					'list_array': ['1-10', '11-20', '21-30', '31-40', '41-50', 'odd', 'even', '1-25', '26-50']
				},
				'percentage': {
					'list_array': []
				}
			},
			'stars': {
				'percentage': {
					'list_array': []
				}
			},
			'automatic_keys': {}
		},
		'details': {
			'prizes_list_max_length': 13,
			'key_generator_limit': 1000,
			'key_cost': 2.5,
			'creation_date_list': ['07/02/2004', '10/05/2011', '24/09/2016'],
			'numbers': {
				'max_draw': 5,
				'total_length': 50
			},
			'stars': {
				'max_draw': 2,
				'total_length': 12
			},
			'automatic_keys_list': ['highest_percentage', 'lowest_percentage', '271', 'synergy']
		},
		'history': {
			'list_array': []
		},
		'ERROR': []
	};
	
	//	Create numbers/stars on Overview (stats/details)
	//	Numbers
	JSON_Create_Overview_Numbers_Stars_Stats_Details('numbers');	//	(a)
	
	//	Stars
	JSON_Create_Overview_Numbers_Stars_Stats_Details('stars');	//	(a)
	
	//	Create automatic_keys on Overview (stats)
	automatic_keys_list = json.Overview.details.automatic_keys_list;
	automatic_keys_list_length = automatic_keys_list.length;
	for (a=0; a<(automatic_keys_list_length); a++) {	//	BEGIN (a)
		automatic_key = automatic_keys_list[a];
		
		json.Overview.stats.automatic_keys[automatic_key] = {
			'total_cost': 0,
			'total_cost_array': [],
			'total_gain': 0,
			'total_gain_array': [],
			'balance': 0,
			'balance_percentage': 0,
			'prizes_list': {},
			'WARNING': []
		}
		//	Create prizes_list on Overview>automatic_keys>[automatic_key]>prizes_list (stats)
		prizes_list_max_length = json.Overview.details.prizes_list_max_length;
		for (b=1; b<(prizes_list_max_length + 1); b++) {	//	BEGIN (b)
			json.Overview.stats.automatic_keys[automatic_key].prizes_list[b] = {
				'drawn_counter': 0,
				'existence_counter': 0
			}
		}	//	END (b)
	}	//	END (a)
}

//	Create numbers/stars on Overview (stats/details)
function JSON_Create_Overview_Numbers_Stars_Stats_Details(type) {	//	(a)
	//	type === 'numbers' || 'stars'
	
	var groups_group;
	var groups_list_array;
	var groups_list_array_length;

	var total_length;
	
	var creation_date;
	
	var creation_date_list;
	var creation_date_list_length;
	
	var all_creation_dates_date;
	
	var all_creation_dates_list_array;
	var all_creation_dates_list_array_length;
	
	//	Gives to the numbers/stars groups, all types of groups (Overview>stats>[type]>groups>list_array) that exist within the numbers/stars (Overview>stats>[type]>groups>list_array>[group])
	if (json.Overview.stats[type].groups !== undefined) {
		groups_list_array = json.Overview.stats[type].groups.list_array;
		groups_list_array_length = groups_list_array.length;
		for (a=0; a<(groups_list_array_length); a++) {	//	BEGIN (a)
			groups_group = groups_list_array[a];
			
			json.Overview.stats[type].groups[groups_group] = {
				'drawn_counter': 0,
				'drawn_percentage': 0
			};
		}	//	END (a)
	}
	
	total_length = json.Overview.details[type].total_length;
	for (a=1; a<(total_length+1); a++) {	//	BEGIN (a)
		if (type === 'numbers') {
			creation_date = '07/02/2004';
		}
		else if (type === 'stars') {
			//	Stars '10' || '11'
			if (a === 10 || a === 11) {
				creation_date = '10/05/2011';
			}
			//	Star '12'
			else if (a === 12) {
				creation_date = '24/09/2016';
			}
			else {
				creation_date = '07/02/2004';
			}
		}
		
		//	stats
		json.Overview.stats[type][a] = {
			'drawn_percentage': 0,
			'existence_counter': 0,
			'drawn_counter': 0,
			'synergy': {
				'numbers': {
					'list_array': [],
					'percentage': {
						'list_array': []
					}
				},
				'stars': {
					'list_array': [],
					'percentage': {
						'list_array': []
					}
				}
			}
		};
		//	details
		json.Overview.details[type][a] = {
			'creation_date': creation_date,
			'first_draw_date': undefined
		};
		
		//	Gives to the number/star stats all_creation_dates that exist within the number/star creation_date
		creation_date_list = json.Overview.details.creation_date_list;
		creation_date_list_length = creation_date_list.length;
		for (b=0; b<(creation_date_list_length); b++) {	//	BEGIN (b)
			all_creation_dates_date = creation_date_list[b];
			
			if (json.Overview.stats[type][a].all_creation_dates === undefined) {
				json.Overview.stats[type][a].all_creation_dates = {
					'list_array': []
				};
			}
			
			json.Overview.stats[type][a].all_creation_dates[all_creation_dates_date] = {
				'drawn_counter': 0
			};
			all_creation_dates_list_array = json.Overview.stats[type][a].all_creation_dates.list_array;
			all_creation_dates_list_array_length = all_creation_dates_list_array.length;
			all_creation_dates_list_array[all_creation_dates_list_array_length] = all_creation_dates_date;
			json.Overview.stats[type][a].all_creation_dates.list_array = all_creation_dates_list_array;

		}	//	END (b)
		
	}	//	END (a)
	
}

//	Creates Prized_Keys_List based on 'online_keys' or 'offline_keys' (inside the json)
function JSON_Create_Prized_Keys_List() {	//	(a)
	var string;
	var keys_array;
	var keys_array_length;
	
	var key;
	var numbers;
	var stars;
	
	var details;
	var day;
	var date;
	var year;
	var draw;
	
	var year_list_array;
	var draw_list_array;
	
	var year_filler = '2000';
	
	json.Prized_Keys_List = {
		'list_array': []
	};
	
	//	Create Prized_Keys_List from online_keys
	if (json.Prized_Keys.online_keys !== undefined ) {
		keys_array = json.Prized_Keys.online_keys;
		keys_array_length = keys_array.length;
		
		//	Loop 'keys_array'
		for (a=0; a<(keys_array_length); a++) {	//	BEGIN (a)
			key = keys_array[a];
		
			draw = key.draw;
			day = key.day;
			
			date = key.date;
			if (date.indexOf('/') === -1) {
				date = (date.substr(6, 2)) + '/' + (date.substr(4, 2)) + '/' + (date.substr(0, 4));
			}
			
			year = date.split('/')[2];
			if (year.length < 4) {
				year = year_filler.substr(0, (4-(year.length))) + year;
				date = date.substr(0, (date.lastIndexOf('/'))) + '/' + year;
			}
			
			numbers = [];
			stars = [];
			
			//	Transform arrays from string to integer ('numbers' & 'stars')
			for (b=0; b<(4+1); b++) {	//	BEGIN (b)
				numbers[b] = parseInt(key['ball_' + (b+1)]);
			}	//	END (b)
			for (b=0; b<(1+1); b++) {	//	BEGIN (b)
				stars[b] = parseInt(key['star_' + (b+1)]);
			}	//	END (b)
			
			//	Sort 'numbers' & 'stars'
			numbers = GF_Sort_Array(numbers, '<');
			stars = GF_Sort_Array(stars, '<');
			
			//	Creates Year
			if (json.Prized_Keys_List[year] === undefined) {
				json.Prized_Keys_List[year] = {
					'list_array': []
				};
				year_list_array = json.Prized_Keys_List.list_array;
				year_list_array[year_list_array.length] = year;
				//	Sort 'year_list_array'
				json.Prized_Keys_List.list_array = GF_Sort_Array(year_list_array, '<');
			}
			
			//	Creates Draw
			if (json.Prized_Keys_List[year][draw] === undefined) {
				json.Prized_Keys_List[year][draw] = {
					'details': {
						'week_day': day,
						'date': date
					},
					'numbers': numbers,
					'stars': stars
				};
				draw_list_array = json.Prized_Keys_List[year].list_array;
				draw_list_array[draw_list_array.length] = draw;
				//	Sort 'draw_list_array'
				json.Prized_Keys_List[year].list_array = GF_Sort_Array(draw_list_array, '<');
			}
		}	//	END (a)
		
		/* //	Adds to 'draws_total' (Overview>stats>draws>draws_total)
		json.Overview.stats.draws.draws_total = keys_array_length; */
		
		console.log('online_keys (' + keys_array_length + ' keys)');
	}
	//	Create Prized_Keys_List from offline_keys
	else if (json.Prized_Keys.online_keys === undefined ) {
		string = json.Prized_Keys.offline_keys;
		keys_array = string.split('|');
		keys_array_length = keys_array.length;
		
		//	Loop 'keys_array'
		for (a=0; a<(keys_array_length); a++) {	//	BEGIN (a)
			string = keys_array[a];
			details = string.split('*')[0];
			key = string.split('*')[1];
			
			date = details.split('#')[0];
			draw = details.split('#')[1];
			day = date.split('-')[0];
			date = date.split('-')[1];
			year = date.split('/')[2];
			
			numbers = key.split(' + ')[0];
			numbers = numbers.split(' ');
			stars = key.split(' + ')[1];
			stars = stars.split(' ');
			
			//	Transform arrays from string to integer ('numbers' & 'stars')
			for (b=0; b<(numbers.length); b++) {	//	BEGIN (b)
				numbers[b] = parseInt(numbers[b]);
			}	//	END (b)
			for (b=0; b<(stars.length); b++) {	//	BEGIN (b)
				stars[b] = parseInt(stars[b]);
			}	//	END (b)
			
			//	Sort 'numbers' & 'stars'
			numbers = GF_Sort_Array(numbers, '<');
			stars = GF_Sort_Array(stars, '<');
			
			//	Creates Year
			if (json.Prized_Keys_List[year] === undefined) {
				json.Prized_Keys_List[year] = {
					'list_array': []
				};
				year_list_array = json.Prized_Keys_List.list_array;
				year_list_array[year_list_array.length] = year;
				//	Sort 'year_list_array'
				json.Prized_Keys_List.list_array = GF_Sort_Array(year_list_array, '<');
			}
			
			//	Creates Draw
			if (json.Prized_Keys_List[year][draw] === undefined) {
				json.Prized_Keys_List[year][draw] = {
					'details': {
						'week_day': day,
						'date': date
					},
					'numbers': numbers,
					'stars': stars
				};
				draw_list_array = json.Prized_Keys_List[year].list_array;
				draw_list_array[draw_list_array.length] = draw;
				//	Sort 'draw_list_array'
				json.Prized_Keys_List[year].list_array = GF_Sort_Array(draw_list_array, '<');
			}
		}	//	END (a)
		
		console.log('offline_keys');
	}
}

//	Creates Automatic_Keys (inside the json)
function JSON_Create_Automatic_Keys() {	//	(a)

	var list_array;
	var list_array_length;
	
	var value;
	
	list_array = json.Overview.details.automatic_keys_list;
	list_array_length = list_array.length;
	
	json.Automatic_Keys = {};
	
	for (a=0; a<(list_array_length); a++) {	//	BEGIN (a)
		value = list_array[a];
		
		json.Automatic_Keys[value] = {
			'draft': {}
		}
	}	//	END (a)
}

	/* END JSON*/

/*-----------------------------------------------------------------------------------------------*/

	/* BEGIN STATS */
	
	/*	List:
			(c)	STATS_Prizes_Checker(numbers, stars, draw_date);	//	(c)
			(d)		STATS_Fill_Automatic_Keys(automatic_key, type_array, type, variable);	//	(d)
	(N/A)*	(c)	STATS_Create_Overview_History(year, draw);	//	(N/A)*	(c)
			(c)		STATS_Create_Overview_History_Numbers_Stars(type, year, draw);	//	(c)
			(c)	STATS_Loop_Numbers_Stars(type, main_array, secondary_array, draw, year, draw_date);	//	(c)
	(N/A)*	(d)		STATS_Fill_Numbers_Stars_Groups(type, value);	//	(N/A)*	(d)
			(d)		STATS_Numbers_Stars_Synergy(type, synergy_type, array, value);	//	(d)
	(N/A)*  (c)	STATS_Drawn_Percentage(draw_date);	//	(N/A)*	(c)
			(c)		STATS_Numbers_Stars_Drawn_Percentage(type, draw_date);	//	(c)
			(d)			STATS_Numbers_Stars_Synergy_Drawn_Percentage(type, synergy_type, value);	//	(d)
	(N/A)*	(c)	STATS_Fill_Overview_History(year, draw);	//	(N/A)*	(c)
			(c)		STATS_Fill_Overview_History_Numbers_Stars(type, year, draw);	//	(c)
			(d)			STATS_Fill_Overview_History_Numbers_Stars_Synergy(type, synergy_type, value, year, draw);	//	(d)
			(c)		STATS_Fill_Overview_History_Automatic_Keys(year, draw);	//	(c)
	*/
	
//	Checks for prizes in the Automatic_Keys generated in the previous draws
function STATS_Prizes_Checker(numbers, stars, draw_date) {	//	(c)
	//	numbers === array of the numbers from the current draw being looped
	//	stars === array of the stars from the current draw being looped
	//	draw_date === The date of the current draw being looped
	
	var prizes_list_max_length;
	var prize_creation_date;
	
	var automatic_key;
	
	var automatic_keys_list;
	var automatic_keys_list_length;
	
	var keys_array;
	var keys_array_length;
	
	var prizes_array;
	var prizes_array_length;
	
	var prize;
	var key_cost;
	var gain;
	var cost;
	
	var total_cost;
	var total_gain;
	var balance;
	var balance_percentage;
	
	//	Loop automatic_keys (Overview>details>automatic_keys_list)
	automatic_keys_list = json.Overview.details.automatic_keys_list;
	automatic_keys_list_length = automatic_keys_list.length;
	for (c=0; c<(automatic_keys_list_length); c++) {	//	BEGIN (c)
		automatic_key = automatic_keys_list[c]
		
		//	Adds to existence_counter, from the respective prize (d); (Overview>stats>automatic_keys>[automatic_key]>prizes_list>[d]>existence_counter)
		prizes_list_max_length = json.Overview.details.prizes_list_max_length;
		for (d=1; d<(prizes_list_max_length + 1); d++) {	//	BEGIN (d)
			prize_creation_date = json.Prizes_List[d].creation_date;
			
			if (GF_Compare_Dates(prize_creation_date, '<=', draw_date) === true) {
				json.Overview.stats.automatic_keys[automatic_key].prizes_list[d].existence_counter += 1;
			}
		}	//	END (d)
		
		keys_array = json.Automatic_Keys[automatic_key].draft.keys;
		
		//	Gets a list of prizes the 'keys_array' gives based on 'numbers' and 'stars'
		prizes_array = GF_Prizes_Checker(numbers, stars, keys_array);
		
		// Loop prizes_array
		gain = 0;
		prizes_array_length = prizes_array.length;
		for (d=0; d<(prizes_array_length); d++) {	//	BEGIN (d)
			prize = prizes_array[d];
			
			if (prize !== undefined) {
				prize_creation_date = json.Prizes_List[prize].creation_date;
				
				if (GF_Compare_Dates(prize_creation_date, '<=', draw_date) === true) {
					gain += json.Prizes_List[prize].average_amount;
					
					//	Adds to drawn_counter, from the respective 'prize'; (Overview>stats>automatic_keys>[automatic_key]>prizes_list>[prize]>drawn_counter)
					json.Overview.stats.automatic_keys[automatic_key].prizes_list[prize].drawn_counter += 1;
				}
			}
		}	//	END (d)
		
		//	Check if keys_array is an actual array
		if (GF_Check_If_Array(keys_array) === true) {
			keys_array_length = keys_array.length;
			key_cost = json.Overview.details.key_cost;
			cost = (keys_array_length * key_cost);
			
			//	Fill stats on automatic_keys; (Overview>stats>automatic_keys>[automatic_key])
			//	total_cost_array/total_cost
			total_cost = STATS_Fill_Automatic_Keys(automatic_key, 'total_cost_array', 'total_cost', cost);	//	(d)
			//	total_gain_array/total_gain
			total_gain = STATS_Fill_Automatic_Keys(automatic_key, 'total_gain_array', 'total_gain', gain);	//	(d)
			
			balance = total_gain - total_cost;
			balance_percentage = (Math.round(((total_gain/total_cost)-1)*100)).toString() + '%';
			json.Overview.stats.automatic_keys[automatic_key].balance = balance;
			json.Overview.stats.automatic_keys[automatic_key].balance_percentage = balance_percentage;
		}
	}	//	END (c)
	
}

//	Fill stats on automatic_keys; (Overview>stats>automatic_keys>[automatic_key])
function STATS_Fill_Automatic_Keys(automatic_key, type_array, type, variable) {	//	(d)
	//	automatic_key === automatic_key being looped
	//	type_array === 'total_cost_array' || 'total_gain_array'
	//	type === 'total_cost' || 'total_gain'
	//	variable === cost || gain

	var total_array;
	var total_array_length;
	
	var total;
	
	total_array = json.Overview.stats.automatic_keys[automatic_key][type_array];
	total_array_length = total_array.length;
	json.Overview.stats.automatic_keys[automatic_key][type_array][total_array_length] = variable;
	
	total_array = json.Overview.stats.automatic_keys[automatic_key][type_array];
	total_array_length = total_array.length;
	total = 0;
	for (d=0; d<(total_array_length); d++) {	//	BEGIN (d)
		total += total_array[d];
	}	//	END (d)
	json.Overview.stats.automatic_keys[automatic_key][type] = total;
	
	return total;
}

//	Creates Overview>history (stats)
function STATS_Create_Overview_History(year, draw) {	//	(N/A)*	(c)
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var years_list_array;
	var draws_list_array;
	
	//	Years
	if (json.Overview.history[year] === undefined) {
		json.Overview.history[year] = {
			'list_array': []
		};
	}
	years_list_array = json.Prized_Keys_List.list_array;
	json.Overview.history.list_array = years_list_array;
	
	//	Draws
	if (json.Overview.history[year][draw] === undefined) {
		json.Overview.history[year][draw] = {
			'stats': {
				'numbers': {
					'groups': {
						'list_array': []
					},
					'percentage': {
						'list_array': []
					}
				},
				'stars': {
					'percentage': {
						'list_array': []
					}
				}
			}
		};
	}
	draws_list_array = json.Prized_Keys_List[year].list_array;
	json.Overview.history[year].list_array = draws_list_array;
	
	//	Creates numbers/stars on Overview>history (stats)
	//	Numbers
	STATS_Create_Overview_History_Numbers_Stars('numbers', year, draw);	//	(c)
	
	//	Stars
	STATS_Create_Overview_History_Numbers_Stars('stars', year, draw);	//	(c)
	
}

//	Creates numbers/stars on Overview>history (stats)
function STATS_Create_Overview_History_Numbers_Stars(type, year, draw) {	//	(c)
	//	type === 'numbers' || 'stars'
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var total_length;
	
	var creation_date_list;
	var creation_date_list_length;
	
	var all_creation_dates_date;
	var all_creation_dates_list_array;
	var all_creation_dates_list_array_length;
	
	total_length = json.Overview.details[type].total_length;
	for (c=1; c<(total_length+1); c++) {	//	BEGIN (c)
		
		//	stats
		json.Overview.history[year][draw].stats[type][c] = {
			'drawn_percentage': 0,
			'existence_counter': 0,
			'drawn_counter': 0,
			'synergy': {
				'numbers': {
					'list_array': [],
					'percentage': {
						'list_array': []
					}
				},
				'stars': {
					'list_array': [],
					'percentage': {
						'list_array': []
					}
				}
			}
		};
		
		//	Gives to the number/star stats all_creation_dates that exist within the number/star creation_date
		creation_date_list = json.Overview.details.creation_date_list;
		creation_date_list_length = creation_date_list.length;
		for (d=0; d<(creation_date_list_length); d++) {	//	BEGIN (d)
			all_creation_dates_date = creation_date_list[d];
			
			if (json.Overview.history[year][draw].stats[type][c].all_creation_dates === undefined) {
				json.Overview.history[year][draw].stats[type][c].all_creation_dates = {
					'list_array': []
				};
			}
			
			json.Overview.history[year][draw].stats[type][c].all_creation_dates[all_creation_dates_date] = {
				'drawn_counter': 0
			};
			all_creation_dates_list_array = json.Overview.history[year][draw].stats[type][c].all_creation_dates.list_array;
			all_creation_dates_list_array_length = all_creation_dates_list_array.length;
			all_creation_dates_list_array[all_creation_dates_list_array_length] = all_creation_dates_date;
			json.Overview.history[year][draw].stats[type][c].all_creation_dates.list_array = all_creation_dates_list_array;

		}	//	END (d)
		
	}	//	END (c)
	
}

//	Loop 'numbers' or 'stars' from current 'draw' being looped, of the current 'year' being looped
function STATS_Loop_Numbers_Stars(type, main_array, secondary_array, draw, year, draw_date) {	//	(c)
	//	type === 'numbers' || 'stars'
	//	main_array === numbers (if type === 'numbers') || stars (if type === 'stars')
	//	secondary_array === stars (if type === 'numbers') || numbers (if type === 'stars')
	//	draw === The current draw being looped
	//	year === The current year being looped
	//	draw_date === The date of the current draw being looped
	
	var main_array_length;
	var value;
	
	var numbers_array;
	var stars_array;
	
	var all_creation_dates_date;
	var all_creation_dates_list_array;
	var all_creation_dates_list_array_length;
	
	main_array_length = main_array.length;
	for (c=0; c<(main_array_length); c++) {	//	BEGIN (c)
		//	value === number || star
		value = main_array[c];
		
		//	Adds to drawn_counter, from the respective number or star (value); (Overview>stats>[type]>[value]>drawn_counter)
		json.Overview.stats[type][value].drawn_counter += 1;
		
		//	Adds to drawn_counter, from the respective number or star (value), into all_creation_dates, if the date is equal or higher than draw_date; (Overview>stats>[type]>[value]>all_creation_dates>[all_creation_dates_date]>drawn_counter)
		if (json.Overview.stats[type][value].all_creation_dates !== undefined) {
			all_creation_dates_list_array = json.Overview.stats[type][value].all_creation_dates.list_array;
			all_creation_dates_list_array_length = all_creation_dates_list_array.length;
			
			for (d=0; d<(all_creation_dates_list_array_length); d++) {	//	BEGIN (d)
				all_creation_dates_date = all_creation_dates_list_array[d];
				
				if (GF_Compare_Dates(draw_date, '>=', all_creation_dates_date) === true) {
					json.Overview.stats[type][value].all_creation_dates[all_creation_dates_date].drawn_counter += 1;
				}
			}	//	END (d)
		}
		
		//	Adds to drawn_counter, from the respective number or star (value), into a 'groups_group' in groups, if it matches the group conditions; (Overview>stats>[type]>groups>[groups_group]>drawn_counter)
		STATS_Fill_Numbers_Stars_Groups(type, value);	//	(N/A)*	(d)
		
		//	Records first 'draw' and 'year' the number or star (value) was drawed (DETAILS)
		if (json.Overview.details[type][value].first_draw_date === undefined) {
			json.Overview.details[type][value].first_draw_date = draw + '/' + year;
		}
		
		if (type === 'numbers') {
			numbers_array = main_array;
			stars_array = secondary_array;
		}
		else if (type === 'stars') {
			numbers_array = secondary_array;
			stars_array = main_array;
		}
		
		//	Adds on numbers or stars, on the 'number' synergy
		STATS_Numbers_Stars_Synergy(type, 'numbers', numbers_array, value);	//	(d)
		
		//	Adds on numbers or stars, on the 'star' synergy
		STATS_Numbers_Stars_Synergy(type, 'stars', stars_array, value);	//	(d)
		
	}	//	END (c)
}

//	Adds to drawn_counter, from the respective number or star (value), into a 'groups_group' in groups, if it matches the group conditions; (Overview>stats>[type]>groups>[groups_group]>drawn_counter)
function STATS_Fill_Numbers_Stars_Groups(type, value) {	//	(N/A)*	(d)
	//	type === 'numbers' || 'stars'
	//	value === current value from the numbers/stars array being looped
	
	if (json.Overview.stats[type].groups !== undefined) {
		
		var drawn_counter;
		var draws_total;
		
		draws_total = json.Overview.stats.draws.draws_total;
		
		if (type === 'numbers') {
			//	'1-10' && '11-20' && '21-30' && '31-40' && 41-50
			if (value > 0 && value < 11) {	//	1-10
				json.Overview.stats[type].groups['1-10'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['1-10'].drawn_counter;
				json.Overview.stats[type].groups['1-10'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if (value > 10 && value < 21) {	//	11-20
				json.Overview.stats[type].groups['11-20'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['11-20'].drawn_counter;
				json.Overview.stats[type].groups['11-20'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if (value > 20 && value < 31) {	//	21-30
				json.Overview.stats[type].groups['21-30'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['21-30'].drawn_counter;
				json.Overview.stats[type].groups['21-30'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if (value > 30 && value < 41) {	//	31-40
				json.Overview.stats[type].groups['31-40'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['31-40'].drawn_counter;
				json.Overview.stats[type].groups['31-40'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if (value > 40 && value < 51) {	//	41-50
				json.Overview.stats[type].groups['41-50'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['41-50'].drawn_counter;
				json.Overview.stats[type].groups['41-50'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			
			//	'1-25' && '26-50'
			if (value > 0 && value < 26) {	//	'1-25'
				json.Overview.stats[type].groups['1-25'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['1-25'].drawn_counter;
				json.Overview.stats[type].groups['1-25'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if (value > 25 && value < 51) {	//	'1-25'
				json.Overview.stats[type].groups['26-50'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['26-50'].drawn_counter;
				json.Overview.stats[type].groups['26-50'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			
			//	'odd' && 'even'
			if ((value % 2) === 1) {	//	odd
				json.Overview.stats[type].groups['odd'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['odd'].drawn_counter;
				json.Overview.stats[type].groups['odd'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
			else if ((value % 2) === 0) {	//	even
				json.Overview.stats[type].groups['even'].drawn_counter += 1;
				drawn_counter = json.Overview.stats[type].groups['even'].drawn_counter;
				json.Overview.stats[type].groups['even'].drawn_percentage = Math.round(((drawn_counter/(draws_total*5))*100)*100)/100
			}
		}
		else if (type === 'stars') {
			
		}
	}
}

//	Adds on numbers or stars, on the 'number' or 'star' synergy drawn_counter
function STATS_Numbers_Stars_Synergy(type, synergy_type, array, value) {	//	(d)
	//	type === 'numbers' || 'stars'
	//	synergy_type === 'numbers' || 'stars'
	//	array === numbers_array (if synergy_type === 'numbers') || stars_array (if synergy_type === 'stars')
	//	value === Current number or star being looped
	
	var array_length;
	var synergy_value;
	var synergy_list_array;
	var synergy_list_array_length;
	
	var drawn_counter;
	
	var check;
	
	array_length = array.length;
	for (d=0; d<(array_length); d++) {	//	BEGIN (d)
		synergy_value = array[d];
		
		//	Checks if both 'type' and 'synergy_type' AND 'value' and 'synergy_value' are the same, so there isn't duplicates
		check = false;
		if (type === synergy_type && value === synergy_value) {
			check = true;
		}
		if (check === false) {
			if (json.Overview.stats[type][value].synergy[synergy_type][synergy_value] === undefined) {
				json.Overview.stats[type][value].synergy[synergy_type][synergy_value] = {
					'drawn_counter': 0,
					'drawn_percentage': 0
				};
				
				synergy_list_array = json.Overview.stats[type][value].synergy[synergy_type].list_array;
				synergy_list_array_length = synergy_list_array.length;
				synergy_list_array[synergy_list_array_length] = synergy_value;
				json.Overview.stats[type][value].synergy[synergy_type].list_array = GF_Sort_Array(synergy_list_array, '<');
			}
		
			//	Adds on numbers or stars, on the 'number' or 'star' synergy drawn_counter
			drawn_counter = json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_counter;
			drawn_counter += 1;
			json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_counter = drawn_counter;
		}
		
	}	//	END (d)
	
}

//	Calculates 'drawn_percentage', where is needed, in the json
function STATS_Drawn_Percentage(draw_date) {	//	(N/A)*	(c)
	//	draw_date === The date of the current draw being looped
	
	//	Calculates 'drawn_percentage' for every number; (Overview>stats>numbers>percentage)
	STATS_Numbers_Stars_Drawn_Percentage('numbers', draw_date);	//	(c)
	
	//	Calculates 'drawn_percentage' for every star; (Overview>stats>stars>percentage)
	STATS_Numbers_Stars_Drawn_Percentage('stars', draw_date);	//	(c)
}

//	Calculates 'drawn_percentage' for every number and star; (Overview>stats>[type]>percentage)
function STATS_Numbers_Stars_Drawn_Percentage(type, draw_date) {	//	(c)
	//	type === 'numbers' || 'stars'
	//	draw_date === The date of the current draw being looped

	var total_length;
	
	var creation_date;
	
	var existence_counter;
	var drawn_counter;
	var drawn_percentage;
	
	var percentage_array;
	var percentage_array_length;
	
	var percentage_list_array;
	var percentage_list_array_length;
	
	//	Clr
	json.Overview.stats[type].percentage = {
		'list_array': []
	};
	
	total_length = json.Overview.details[type].total_length;
	percentage_list_array = [];
	for (c=1; c<(total_length+1); c++) {	//	BEGIN (c)
		creation_date = json.Overview.details[type][c].creation_date;
		
		if (GF_Compare_Dates(creation_date, '<=', draw_date) === true) {
			//	Adds to existence_counter, from the respective 'number' or 'star'; (Overview>stats>[type]>[number/star]>existence_counter)
			json.Overview.stats[type][c].existence_counter += 1;
		}
		
		existence_counter = json.Overview.stats[type][c].existence_counter;
		drawn_counter = json.Overview.stats[type][c].drawn_counter;
		
		//	Calculates 'drawn_percentage' for every number or star
		drawn_percentage = Math.round(((drawn_counter/existence_counter)*100)*100)/100;
		if (isNaN(drawn_percentage) === true) {
			drawn_percentage = 'N/A';
		}
		json.Overview.stats[type][c].drawn_percentage = drawn_percentage;
		
		//	Adds 'drawn_percentage' to 'percentage_list_array' if it doesn't exist
		if (percentage_list_array.includes(drawn_percentage) === false && isNaN(drawn_percentage) === false) {
			json.Overview.stats[type].percentage[drawn_percentage] = [];
			
			percentage_list_array_length = percentage_list_array.length;
			percentage_list_array[percentage_list_array_length] = drawn_percentage;
		}
		
		//	Adds 'drawn_percentage' to percentage; (Overview>stats>[type]>percentage>[+[drawn_percentage]])
		if (json.Overview.stats[type].percentage[drawn_percentage] !== undefined) {
			percentage_array = json.Overview.stats[type].percentage[drawn_percentage];
			percentage_array_length = percentage_array.length;
			percentage_array[percentage_array_length] = c;
			
			json.Overview.stats[type].percentage[drawn_percentage] = GF_Sort_Array(percentage_array, '<');
		}
		
		//	Calculates 'drawn_percentage' for every number in synergy; (Overview>stats>[type]>[value]>synergy>numbers>[synergy_value]>percentage)
		STATS_Numbers_Stars_Synergy_Drawn_Percentage(type, 'numbers', c);	//	(d)
		//	Calculates 'drawn_percentage' for every star in synergy; (Overview>stats>[type]>[value]>synergy>stars>[synergy_value]>percentage)
		STATS_Numbers_Stars_Synergy_Drawn_Percentage(type, 'stars', c);	//	(d)
		
	}	//	END (c)
	
	//	Makes list_array equal to 'percentage_list_array'; (Overview>stats>[type]>percentage>list_array)
	json.Overview.stats[type].percentage.list_array = GF_Sort_Array(percentage_list_array, '>');
	
}

//	Calculates 'drawn_percentage' for every number and star in synergy; (Overview>stats>[type]>[value]>synergy>[synergy_type]>[synergy_value]>percentage)
function STATS_Numbers_Stars_Synergy_Drawn_Percentage(type, synergy_type, value) {	//	(d)
	//	type === 'numbers' || 'stars'
	//	synergy_type === 'numbers' || 'stars'
	//	value === Current number or star being looped
	
	var synergy_list_array;
	var synergy_list_array_length;
	
	var synergy_value;
	var synergy_date;
	
	var drawn_counter;
	var synergy_drawn_counter;
	var synergy_drawn_percentage;
	
	var synergy_percentage_list_array;
	var synergy_percentage_list_array_length;
	
	var synergy_percentage_array;
	var synergy_percentage_array_length;
	
	//	Clr
	json.Overview.stats[type][value].synergy[synergy_type].percentage = {
		'list_array': []
	};
	
	synergy_list_array = json.Overview.stats[type][value].synergy[synergy_type].list_array;
	synergy_list_array_length = synergy_list_array.length;
	synergy_percentage_list_array = [];
	for (d=0; d<(synergy_list_array_length); d++) {	//	BEGIN (d)
		synergy_value = synergy_list_array[d];
		
		//	Gets drawn_counter of 'value' based on the creation_date of 'synergy_value'
		synergy_date = json.Overview.details[synergy_type][synergy_value].creation_date;
		drawn_counter = json.Overview.stats[type][value].all_creation_dates[synergy_date].drawn_counter;
		
		synergy_drawn_counter = json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_counter;
		
		//	Calculates 'drawn_percentage' for every number or star in synergy
		synergy_drawn_percentage = Math.round(((synergy_drawn_counter/drawn_counter)*100)*100)/100;
		if (isNaN(synergy_drawn_percentage) === true) {
			synergy_drawn_percentage = 'N/A';
		}
		json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_percentage = synergy_drawn_percentage;
		
		//	Adds 'synergy_drawn_percentage' to 'synergy_percentage_list_array' if it doesn't exist
		if (synergy_percentage_list_array.includes(synergy_drawn_percentage) === false && isNaN(synergy_drawn_percentage) === false) {
			json.Overview.stats[type][value].synergy[synergy_type].percentage[synergy_drawn_percentage] = [];
			
			synergy_percentage_list_array_length = synergy_percentage_list_array.length;
			synergy_percentage_list_array[synergy_percentage_list_array_length] = synergy_drawn_percentage;
		}
		
		//	Adds 'synergy_drawn_percentage' to percentage in synergy; (Overview>stats>[type]>[value]>synergy>[synergy_type]>percentage>[+[synergy_drawn_percentage]])
		if (json.Overview.stats[type][value].synergy[synergy_type].percentage[synergy_drawn_percentage] !== undefined) {
			synergy_percentage_array = json.Overview.stats[type][value].synergy[synergy_type].percentage[synergy_drawn_percentage];
			synergy_percentage_array_length = synergy_percentage_array.length;
			synergy_percentage_array[synergy_percentage_array_length] = synergy_value;
			
			json.Overview.stats[type][value].synergy[synergy_type].percentage[synergy_drawn_percentage] = GF_Sort_Array(synergy_percentage_array, '<');
		}
		
	}	//	END (d)
	
	//	Makes list_array equal to 'synergy_percentage_list_array'; (Overview>stats>[type]>[value]>synergy>[synergy_type]>percentage>list_array)
	json.Overview.stats[type][value].synergy[synergy_type].percentage.list_array = GF_Sort_Array(synergy_percentage_list_array, '>');
}

//	Fills Overview>history (stats)
function STATS_Fill_Overview_History(year, draw) {	//	(N/A)*	(c)
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	//	Fills numbers/stars on Overview>history (stats)
	//	Numbers
	STATS_Fill_Overview_History_Numbers_Stars('numbers', year, draw);	//	(c)
	//	Stars
	STATS_Fill_Overview_History_Numbers_Stars('stars', year, draw);	//	(c)
	
	//	Fills automatic_keys on Overview>history (stats)
	STATS_Fill_Overview_History_Automatic_Keys(year, draw);	//	(c)

}

//	Fills numbers/stars on Overview>history (stats)
function STATS_Fill_Overview_History_Numbers_Stars(type, year, draw) {	//	(c)
	//	type === 'numbers' || 'stars'
	//	year === The current year being looped
	//	draw === The current draw being looped

	var total_length;
	
	var all_creation_dates_date;
	var all_creation_dates_list_array;
	var all_creation_dates_list_array_length;
	
	var drawn_counter;
	var drawn_percentage;
	var existence_counter;
	
	var groups_group;
	var groups_group_drawn_counter;
	var groups_group_drawn_percentage;
	var groups_list_array;
	var groups_list_array_length;
	
	var percentage;
	var percentage_array;
	var percentage_list_array;
	var percentage_list_array_length;
	
	//	numbers/stars
	total_length = json.Overview.details[type].total_length;
	for (c=1; c<(total_length+1); c++) {	//	BEGIN (c)
		
		//	all_creation_dates
		all_creation_dates_list_array = json.Overview.stats[type][c].all_creation_dates.list_array;
		all_creation_dates_list_array_length = all_creation_dates_list_array.length;
		for (d=0; d<(all_creation_dates_list_array_length); d++) {	//	BEGIN (d)
			all_creation_dates_date = all_creation_dates_list_array[d];
		
			drawn_counter = json.Overview.stats[type][c].all_creation_dates[all_creation_dates_date].drawn_counter;
			json.Overview.history[year][draw].stats[type][c].all_creation_dates[all_creation_dates_date].drawn_counter = drawn_counter;
		}	//	END (d)
		
		//	drawn_counter
		drawn_counter = json.Overview.stats[type][c].drawn_counter;
		json.Overview.history[year][draw].stats[type][c].drawn_counter = drawn_counter;
		
		//	drawn_percentage
		drawn_percentage = json.Overview.stats[type][c].drawn_percentage;
		json.Overview.history[year][draw].stats[type][c].drawn_percentage = drawn_percentage;
		
		//	existence_counter
		existence_counter = json.Overview.stats[type][c].existence_counter;
		json.Overview.history[year][draw].stats[type][c].existence_counter = existence_counter;
		
		//	synergy
		//	numbers
		STATS_Fill_Overview_History_Numbers_Stars_Synergy(type, 'numbers', c, year, draw);	//	(d)
		//	stars
		STATS_Fill_Overview_History_Numbers_Stars_Synergy(type, 'stars', c, year, draw);	//	(d)
		
	}	//	END (c)
	
	// groups
	if (json.Overview.stats[type].groups !== undefined) {
		groups_list_array = json.Overview.stats[type].groups.list_array;
		groups_list_array_length = groups_list_array.length;
		for (c=0; c<(groups_list_array_length); c++) {	//	BEGIN (c)
			groups_group = groups_list_array[c];
		
			groups_group_drawn_counter = json.Overview.stats[type].groups[groups_group].drawn_counter;
			groups_group_drawn_percentage = json.Overview.stats[type].groups[groups_group].drawn_percentage;
			json.Overview.history[year][draw].stats[type].groups[groups_group] = {
				'drawn_counter': groups_group_drawn_counter,
				'drawn_percentage': groups_group_drawn_percentage
			};
		}	//	END (c)
		json.Overview.history[year][draw].stats[type].groups.list_array = groups_list_array;
	}
	
	//	percentage
	percentage_list_array = json.Overview.stats[type].percentage.list_array;
	percentage_list_array_length = percentage_list_array.length;
	for (c=0; c<(percentage_list_array_length); c++) {	//	BEGIN (c)
		percentage = percentage_list_array[c];
	
		percentage_array = json.Overview.stats[type].percentage[percentage];
		json.Overview.history[year][draw].stats[type].percentage[percentage] = percentage_array;
	}	//	END (c)
	json.Overview.history[year][draw].stats[type].percentage.list_array = percentage_list_array;
	
}

//	Fills numbers/stars, on numbers/stars synergy, on Overview>history (stats)
function STATS_Fill_Overview_History_Numbers_Stars_Synergy(type, synergy_type, value, year, draw) {	//	(d)
	//	type === 'numbers' || 'stars'
	//	synergy_type === 'numbers' || 'stars'
	//	value === Current number or star being looped
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var list_array;
	var list_array_length;
	
	var synergy_list_array;
	var synergy_list_array_length;
	
	var synergy_value;
	
	var drawn_counter;
	var drawn_percentage;
	
	var synergy_percentage;
	var synergy_percentage_array;
	var synergy_percentage_list_array;
	var synergy_percentage_list_array_length;
	
	//	numbers/stars
	synergy_list_array = [];
	list_array = json.Overview.stats[type][value].synergy[synergy_type].list_array;
	list_array_length = list_array.length;
	for (d=0; d<(list_array_length); d++) {	//	BEGIN (d)
		synergy_value = list_array[d];
		
		drawn_counter = json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_counter;
		drawn_percentage = json.Overview.stats[type][value].synergy[synergy_type][synergy_value].drawn_percentage;
		
		json.Overview.history[year][draw].stats[type][value].synergy[synergy_type][synergy_value] = {
			'drawn_counter': drawn_counter,
			'drawn_percentage': drawn_percentage
		};
		
		//	Fills synergy_list_array
		synergy_list_array_length = synergy_list_array.length;
		synergy_list_array[synergy_list_array_length] = synergy_value;
	}	//	END (d)
	json.Overview.history[year][draw].stats[type][value].synergy[synergy_type].list_array = synergy_list_array;
	
	//	percentage
	synergy_percentage_list_array = json.Overview.stats[type][value].synergy[synergy_type].percentage.list_array;
	synergy_percentage_list_array_length = synergy_percentage_list_array.length;
	for (d=0; d<(synergy_percentage_list_array_length); d++) {	//	BEGIN (d)
		synergy_percentage = synergy_percentage_list_array[d];
	
		synergy_percentage_array = json.Overview.stats[type][value].synergy[synergy_type].percentage[synergy_percentage];
		json.Overview.history[year][draw].stats[type][value].synergy[synergy_type].percentage[synergy_percentage] = synergy_percentage_array;
	}	//	END (c)
	json.Overview.history[year][draw].stats[type][value].synergy[synergy_type].percentage.list_array = synergy_percentage_list_array;
	
}

//	Fills automatic_keys on Overview>history (stats)
function STATS_Fill_Overview_History_Automatic_Keys(year, draw)	{	//	(c)
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var automatic_key;
	
	var automatic_keys_list;
	var automatic_keys_list_length;
	
	var total_cost;
	var total_cost_array;
	var total_gain;
	var total_gain_array;
	var balance;
	var balance_percentage;
	
	var prizes_list_max_length;
	var drawn_counter;
	var existence_counter;
	
	
	json.Overview.history[year][draw].stats.automatic_keys = {};
	
	automatic_keys_list = json.Overview.details.automatic_keys_list;
	automatic_keys_list_length = automatic_keys_list.length;
	for (c=0; c<(automatic_keys_list_length); c++) {	//	BEGIN (c)
		automatic_key = automatic_keys_list[c];
		
		total_cost = json.Overview.stats.automatic_keys[automatic_key].total_cost;
		total_cost_array = json.Overview.stats.automatic_keys[automatic_key].total_cost_array;
		total_cost_array = GF_Array_Reloop(total_cost_array);
		
		total_gain = json.Overview.stats.automatic_keys[automatic_key].total_gain;
		total_gain_array = json.Overview.stats.automatic_keys[automatic_key].total_gain_array;
		total_gain_array = GF_Array_Reloop(total_gain_array);
		
		balance = json.Overview.stats.automatic_keys[automatic_key].balance;
		balance_percentage = json.Overview.stats.automatic_keys[automatic_key].balance_percentage;
		
		json.Overview.history[year][draw].stats.automatic_keys[automatic_key] = {
			'total_cost': total_cost,
			'total_cost_array': total_cost_array,
			'total_gain': total_gain,
			'total_gain_array': total_gain_array,
			'balance': balance,
			'balance_percentage': balance_percentage,
			'prizes_list': {}
		};
		
		json.Overview.history[year][draw].stats.automatic_keys[automatic_key].prizes_list = {};
		prizes_list_max_length = json.Overview.details.prizes_list_max_length;
		for (d=1; d<(prizes_list_max_length + 1); d++) {	//	BEGIN (d)
			
			drawn_counter = json.Overview.stats.automatic_keys[automatic_key].prizes_list[d].drawn_counter;
			existence_counter = json.Overview.stats.automatic_keys[automatic_key].prizes_list[d].existence_counter;
			
			json.Overview.history[year][draw].stats.automatic_keys[automatic_key].prizes_list[d] = {
				'drawn_counter': drawn_counter,
				'existence_counter': existence_counter
			};
		}	//	END (d)
		
	}	//	END (c)
}

	/* END STATS */
	
/*-----------------------------------------------------------------------------------------------*/

	/* BEGIN Automatic Keys */
	
	/*	List:
	(N/A)*	(c)	AK_Generator(numbers, draw_date);	//	(N/A)*	(c)
	(N/A)*	(c)		AK_Highest_Percentage();	//	(N/A)*	(c)
	(N/A)*	(c)		AK_Lowest_Percentage();	//	(N/A)*	(c)
			(c)		AK_271(numbers, draw_date);	//	(c)
	(N/A)*	(c)			AK_271_Fill_List_Numbers_Stars(type, value, list, draw_date, limit);	//	(N/A)*	(c)
	(N/A)*	(c)		AK_Synergy(draw_date, year, draw);	//	(N/A)*	(c)
			(c)			AK_Synergy_Create_List_Numbers_Stars(type, draw_date);	//	(c)
			(c)			AK_Synergy_Fill_Key_List(list_json, keys_list);	//	(c)
	*/

//	Automatic keys generator
function AK_Generator(numbers, draw_date, year, draw) {	//	(N/A)*	(c)
	//	numbers === array of the numbers from the current draw being looped
	//	draw_date === The date of the current draw being looped
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	//	Generate keys based on the numbers/stars with the highest drawn_percentage
	AK_Percentage('highest_percentage', '>', year, draw);	//	(N/A)*	(c)
	
	//	Generate keys based on the numbers/stars with the lowest drawn_percentage
	AK_Percentage('lowest_percentage', '<', year, draw);	//	(N/A)*	(c)
	
	//	Generate keys based on 271 style
	AK_271(numbers, draw_date, year, draw);	//	(c)
	
	//	Generate keys based on the best synergy, for every number/star
	AK_Synergy(draw_date, year, draw);	//	(c)
}

//	Generate keys based on the numbers/stars with the highest/lowest drawn_percentage
function AK_Percentage(type, type_sort, year, draw) {	//	(N/A)*	(c)
	//	type === 'highest_percentage' || 'lowest_percentage'
	//	type_sort === '>' || '<'
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var filtered_numbers_json;
	var filtered_stars_json;
	
	var numbers_json;
	var stars_json;
	var keys_array;
	
	//	Clr
	json.Automatic_Keys[type].draft = {};
	
	filtered_numbers_json = GF_Json_Reloop(json.Overview.stats.numbers.percentage);
	filtered_stars_json = GF_Json_Reloop(json.Overview.stats.stars.percentage);
	
	//	Sort
	filtered_numbers_json.list_array = GF_Sort_Array(filtered_numbers_json.list_array, type_sort);
	filtered_stars_json.list_array = GF_Sort_Array(filtered_stars_json.list_array, type_sort);
	
	//	Filter json with list array for best numbers/stars
	numbers_json = GF_Filter_Numbers_Stars('numbers', filtered_numbers_json);
	stars_json = GF_Filter_Numbers_Stars('stars', filtered_stars_json);
	
	//	Generate keys
	keys_array = GF_Keys_Generator_Numbers_Stars(numbers_json, stars_json, type, year, draw);
	
	json.Automatic_Keys[type].draft = {
		'numbers': numbers_json,
		'stars': stars_json,
		'keys': keys_array
	};
}

//	Generate keys based on 271 style
function AK_271(numbers, draw_date, year, draw) {	//	(c)
	//	numbers === array of the numbers from the current draw being looped
	//	draw_date === The date of the current draw being looped
	//	year === The current year being looped
	//	draw === The current draw being looped

	var length;
	var total;
	var string;
	var string_length;
	var limits;
	var main_number;
	var secondary_number;
	var junction_number;
	var position_checker;
	
	var main_matrix;
	var main_matrix_height;
	var main_matrix_width;
	
	var matrix_5x5_list;
	var matrix_5x5_list_length;
	var matrix_5x5_limit_left;
	var matrix_5x5_limits;
	var matrix_5x5;
	
	var matrix_3x3_list;
	
	var numbers_list;
	var stars_list;
	
	var filtered_numbers_json;
	var filtered_stars_json;
	
	var numbers_json;
	var stars_json;
	
	var keys_array;
	
	//	Clr
	json.Automatic_Keys['271'].draft = {};
	
	main_matrix = [];
	main_matrix_height = 10;
	main_matrix_width = 6;
	matrix_5x5_list = [];
	matrix_3x3_list = [];
	
	numbers_list = {
		'list_array' : []
	};
	stars_list = {
		'list_array' : []
	};
	
	numbers_json = {
		'list_array' : []
	};
	stars_json = {
		'list_array' : []
	};
	
	//	Get the sum of all the 'numbers'
	total = 0;
	length = numbers.length;
	for (c=0; c<(length); c++) {	//	BEGIN (c)
		total += numbers[c];
	}	//	END (c)
	
	//	Create first array in main_matrix
	total = GF_Filler(total, '0', 3, 'left');
	main_matrix[0] = [0,0,0,2,7,1];
	length = total.length;
	for (c=0; c<(length); c++) {	//	BEGIN (c)
		main_matrix[0][c] = parseInt(total[c]);
	}	//	END (c)
	
	//	Fill 'main_matrix'
	for (c=0; c<((main_matrix_height)-1); c++) {	//	BEGIN (c)
		main_matrix[(c+1)] = [];
	
		for (d=0; d<(main_matrix_width); d++) {	//	BEGIN (d)
			if (d < (main_matrix_width-1)) {
				total = main_matrix[c][d] + main_matrix[c][(d+1)];
			}
			else {
				total = main_matrix[c][d] + main_matrix[c][0];
			}
			string = total.toString();
			string_length = string.length;
			main_matrix[(c+1)][d] = parseInt(string[(string_length-1)]);
		}	//	END (d)
	}	//	END (c)
	
	//	Filter 'main_matrix' into various matrix_5x5 inside 'matrix_5x5_list' (Check for '0's or '1's)
	for (c=0; c<(main_matrix_height); c++) {	//	BEGIN (c)
		for (d=0; d<(main_matrix_width); d++) {	//	BEGIN (d)
			
			//	Check limits
			if (main_matrix[c][d] === 0 || main_matrix[c][d] === 1) {
				//	[Up, Down, Left, Right]
				limits = [2,2,2,2];
				
				length = matrix_5x5_list.length;
				matrix_5x5_list[length] = [];
				
				//	Check above the '0'/'1' (Up)
				if ( (c-2) < (1-1) ) {
					limits[0] = c;
				}
				//	Check below the '0'/'1'	(Down)
				if ( (c+2) > (main_matrix_height-1) ) {
					limits[1] = ((main_matrix_height-1) - c);
				}
				//	Check to the left of the '0'/'1' (Left)
				if ( (d-2) < (1-1) ) {
					limits[2] = d;
				}
				//	Check to the right of the '0'/'1' (Right)
				if ( (d+2) > (main_matrix_width-1) ) {
					limits[3] = ((main_matrix_width-1) - d);
				}
				
				//	Fill matrix_5x5 inside 'matrix_5x5_list' with '*'
				for (e=0; e<(4+1); e++) {	//	BEGIN (e)
					matrix_5x5_list[length][e] = [];
					for (f=0; f<(4+1); f++) {	//	BEGIN (f)
						matrix_5x5_list[length][e][f] = '*';
					}	//	END (f)
				}	//	END (e)
				
				//	Fill matrix_5x5 inside 'matrix_5x5_list' with numbers
				matrix_5x5_limit_left = limits[2];
				matrix_5x5_limits = [(2 - limits[0]), (2 + limits[1]), (2 - limits[2]), (2 + limits[3])];
				for (e=(matrix_5x5_limits[0]); e<(matrix_5x5_limits[1] + 1); e++) {	//	BEGIN (e)
					limits[2] = matrix_5x5_limit_left;
					for (f=(matrix_5x5_limits[2]); f<(matrix_5x5_limits[3] + 1); f++) {	//	BEGIN (f)
						if ( ( (c - limits[0]) < main_matrix_height) && ( (d - limits[2]) < main_matrix_width) ) {
							matrix_5x5_list[length][e][f] = main_matrix[ (c - limits[0]) ][ (d - limits[2]) ];
						}
						limits[2]--;
					}	//	END (f)
					limits[0]--;
				}	//	END (e)
			}
		}	//	END (d)
	}	//	END (c)
	
	//	Loop 'matrix_5x5_list' / 'matrix_3x3_list'
	matrix_5x5_list_length = matrix_5x5_list.length;
	for (c=0; c<(matrix_5x5_list_length); c++) {	//	BEGIN (c)
		
		//	Filter 'matrix_5x5_list' into various matrix_3x3 inside 'matrix_3x3_list'
		matrix_3x3_list[c] = [];
		
		//	Loop part of the matrix_5x5 inside 'matrix_5x5_list'
		for (d=(0+1); d<(5-1); d++) {	//	BEGIN (d)
			for (e=(0+1); e<(5-1); e++) {	//	BEGIN (e)
				
				if (d!==2 || e!==2) {
					length = matrix_3x3_list[c].length;
					matrix_3x3_list[c][length] = [];
					
					//	[Up, Left]
					limits = [1, 1];
					
					for (f=0; f<(2+1); f++) {	//	BEGIN (f)
						matrix_3x3_list[c][length][f] = [];
						limits[1] = 1;
						for (g=0; g<(2+1); g++) {	//	BEGIN (g)
							matrix_3x3_list[c][length][f][g] = matrix_5x5_list[c][d - limits[0]][e - limits[1]];
							limits[1]--;
						}	//	END (g)
						limits[0]--;
					}	//	END (f)
				}
			}	//	END (e)
		}	//	END (d)
		
		//	Check numbers in the various matrix_3x3 inside 'matrix_3x3_list'
		length = matrix_3x3_list[c].length;
		for (d=0; d<(length); d++) {	//	BEGIN (d)
			main_number = matrix_3x3_list[c][d][1][1];
			if ( !isNaN(main_number) === true ) {
				if (main_number !== 0) {
					numbers_list = AK_271_Fill_List_Numbers_Stars('numbers', main_number, numbers_list, draw_date, 0);	//	(N/A)*	(c)
					stars_list = AK_271_Fill_List_Numbers_Stars('stars', main_number, stars_list, draw_date, 0);	//	(N/A)*	(c)
					
				}
				for (e=0; e<(2+1); e++) {	//	BEGIN (e)
					for (f=0; f<(2+1); f++) {	//	BEGIN (f)
						
						//	Checks positions so there isn't duplicated numbers
						position_checker = true;
						if ( d === 0 ) {
							if (e === 2 && f === 2)
								position_checker = false;
						}
						else if ( d === 1 ) {
							if ( (e === 1 && f === 0) || (e === 2 && f === 1) )
								position_checker = false;
						}
						else if ( d === 2 ) {
							if ( (e === 1 && f === 0) || (e === 2 && f === 0) )
								position_checker = false;
						}
						else if ( d === 3 ) {
							if ( (e === 0 && f === 1) || (e === 0 && f === 2) || (e === 1 && f === 2) )
								position_checker = false;
						}
						else if ( d === 4 ) {
							if ( (e === 0 && f === 0) || (e === 0 && f === 1) || (e === 1 && f === 0) )
								position_checker = false;
						}
						else if ( d === 5 ) {
							if ( (e === 0 && f === 1) || (e === 0 && f === 2) )
								position_checker = false;
						}
						else if ( d === 6 ) {
							if ( (e === 0 && f === 0) || (e === 0 && f === 1) || (e === 0 && f === 2) || (e === 1 && f === 0) )
								position_checker = false;
						}
						else if ( d === 7 ) {
							if ( (e === 0 && f === 0) || (e === 0 && f === 1) || (e === 1 && f === 0) )
								position_checker = false;
						}
						
						if (position_checker === true) {
							if ((e === 1) && (f === 1)) {
								secondary_number = '*';
							}
							else {
								secondary_number = matrix_3x3_list[c][d][e][f];
							}
							
							if ( !isNaN(secondary_number) === true ) {
								//	main_number + secondary_number (matrix_3x3_list[c][d][1][1] + matrix_3x3_list[c][d][e][f])
								junction_number = parseInt((main_number.toString())+(secondary_number.toString()));
								numbers_list = AK_271_Fill_List_Numbers_Stars('numbers', junction_number, numbers_list, draw_date, 9);	//	(N/A)*	(c)
								stars_list = AK_271_Fill_List_Numbers_Stars('stars', junction_number, stars_list, draw_date, 9);	//	(N/A)*	(c)
								
								//	secondary_number + main_number (matrix_3x3_list[c][d][e][f] + matrix_3x3_list[c][d][1][1])
								if (secondary_number !== main_number) {
									junction_number = parseInt((secondary_number.toString())+(main_number.toString()));
									numbers_list = AK_271_Fill_List_Numbers_Stars('numbers', junction_number, numbers_list, draw_date, 9);	//	(N/A)*	(c)
									stars_list = AK_271_Fill_List_Numbers_Stars('stars', junction_number, stars_list, draw_date, 9);	//	(N/A)*	(c)
								}
							}
						}
					}	//	END (f)
				}	//	END (e)
			}
		}	//	END (d)
	}	//	END (c)
	
	//	Filter json with list array for best values
	filtered_numbers_json = GF_Filter_Json(numbers_list);
	filtered_stars_json = GF_Filter_Json(stars_list);
	
	//	Filter json with list array for best numbers/stars
	numbers_json = GF_Filter_Numbers_Stars('numbers', filtered_numbers_json);
	stars_json = GF_Filter_Numbers_Stars('stars', filtered_stars_json);
	
	//	Generate keys
	keys_array = GF_Keys_Generator_Numbers_Stars(numbers_json, stars_json, '271', year, draw);
	
	json.Automatic_Keys['271'].draft = {
		'numbers': numbers_json,
		'stars': stars_json,
		'keys': keys_array
	};
}

//	Fills numbers_list/stars_list
function AK_271_Fill_List_Numbers_Stars(type, value, list, draw_date, limit) {	//	(N/A)*	(c)
	//	type === 'numbers' || 'stars'
	//	value === main_number || junction_number
	//	list === numbers_list || stars_list
	//	draw_date === The date of the current draw being looped
	//	limit === 0 || 9
	
	var creation_date;
	var list_array_length;
	
	//	limit
	if (value > limit) {
		if (json.Overview.details[type][value] !== undefined) {
			creation_date = json.Overview.details[type][value].creation_date;
		
			if (GF_Compare_Dates(creation_date, '<=', draw_date) === true) {
				if (list[value] === undefined) {
					list[value] = 0;
					list_array_length = list.list_array.length;
					list.list_array[list_array_length] = value;
					list.list_array = GF_Sort_Array(list.list_array, '<');
				}
				list[value] += 1;
			}
		}
	}
	return list;
}

//	Generate keys based on each number/star synergy
function AK_Synergy(draw_date, year, draw) {	//	(N/A)*	(c)
	//	draw_date === The date of the current draw being looped
	//	year === The current year being looped
	//	draw === The current draw being looped
	
	var keys_array;
	var keys_array_length;
	
	var numbers_list_json;
	var stars_list_json;
	
	var keys_list;
	var keys_list_length;
	
	var key_generator_limit;
	
	//	Clr
	json.Automatic_Keys['synergy'].draft = {};
	
	//	Creates numbers/stars list with every number's/star's best numbers/stars (synergy) and generates keys for every number/star
	numbers_list_json = AK_Synergy_Create_List_Numbers_Stars('numbers', draw_date);	//	(c)
	stars_list_json = AK_Synergy_Create_List_Numbers_Stars('stars', draw_date);	//	(c)
	
	//	Fills 'keys_list' with the keys from all numbers/stars
	keys_list = [];
	keys_list = AK_Synergy_Fill_Key_List(numbers_list_json, keys_list);	//	(c)
	keys_list = AK_Synergy_Fill_Key_List(stars_list_json, keys_list);	//	(c)
	
	//	Filters 'keys_list' for duplicated keys
	keys_array = GF_Filter_Keys_Array(keys_list);
	
	key_generator_limit = json.Overview.details.key_generator_limit;
	keys_array_length = keys_array.length;
	if (keys_array_length <= key_generator_limit) {
		json.Automatic_Keys['synergy'].draft = {
			'numbers_list_json': numbers_list_json,
			'stars_list_json': stars_list_json,
			'keys': keys_array
		};
	}
	else {
		json.Automatic_Keys['synergy'].draft = {
			'numbers_list_json': numbers_list_json,
			'stars_list_json': stars_list_json,
			'keys': keys_array_length
		};
		json.Overview.stats.automatic_keys['synergy'].WARNING[json.Overview.stats.automatic_keys['synergy'].WARNING.length] = draw + '/' + year + ': ' + keys_array_length + ' keys';
	}
}

//	Creates numbers/stars list with every number's/star's best numbers/stars (synergy) and generates keys for every number/star
function AK_Synergy_Create_List_Numbers_Stars(type, draw_date) {	//	(c)
	//	type === 'numbers' || 'stars'
	//	draw_date === The date of the current draw being looped
	
	var list_json;
	
	var total_length;
	var creation_date;
	var drawn_counter;
	
	var length;
	var value;
	
	list_json = {
		'list_array': []
	};
	
	total_length = json.Overview.details[type].total_length;
	for (c=1; c<(total_length+1); c++) {	//	BEGIN (c)
		creation_date = json.Overview.details[type][c].creation_date;
		if (GF_Compare_Dates(creation_date, '<=', draw_date) === true) {
			drawn_counter = json.Overview.stats[type][c].drawn_counter;
			if (drawn_counter > 0) {
				
				//	Get synergy json with list_array for every number/star
				list_json[c] = {
					'numbers': GF_Json_Reloop(json.Overview.stats[type][c].synergy.numbers.percentage),
					'stars': GF_Json_Reloop(json.Overview.stats[type][c].synergy.stars.percentage)
				};
				
				length = list_json.list_array.length;
				list_json.list_array[length] = c;
				
				value = list_json[c][type].list_array[0];
				length = list_json[c][type][value].length;
				list_json[c][type][value][length] = c;
				list_json[c][type][value] = GF_Sort_Array(list_json[c][type][value], '<');
				
				//	Filter synergy json with list_array for every number/star, to get the best numbers/stars
				list_json[c] = {
					'numbers': GF_Filter_Numbers_Stars('numbers', list_json[c].numbers),
					'stars': GF_Filter_Numbers_Stars('stars', list_json[c].stars),
				};
				
				//	Generate keys for every number/star
				list_json[c].keys = GF_Keys_Generator_Numbers_Stars(list_json[c].numbers, list_json[c].stars);
			}
		}
	}	//	END (c)
	
	return list_json;
}

//	Fills 'keys_list' with the keys from all numbers/stars
function AK_Synergy_Fill_Key_List(list_json, keys_list) {	//	(c)
	//	list_json === numbers_list_json || stars_list_json
	//	keys_list === keys_list
	
	var list_array_length;
	var keys_list_length;
	
	var value;
	var key;
	var keys_length;
	
	list_array_length = list_json.list_array.length;
	for (c=0; c<(list_array_length); c++) {	//	BEGIN (c)
		value = list_json.list_array[c];
		keys_length = list_json[value].keys.length;
		for (d=0; d<(keys_length); d++) {	//	BEGIN (d)
			key = list_json[value].keys[d];
			keys_list_length = keys_list.length;
			
			keys_list[keys_list_length] = key;
		}	//	END (d)
	}	//	END (c)
	
	return keys_list;
}
	
	/* END Automatic Keys */

/*-----------------------------------------------------------------------------------------------*/

	/* END FUNCTIONS */

/*-----------------------------------------------------------------------------------------------*/







